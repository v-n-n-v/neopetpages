<html>
<head>
<meta name="Robots" content="all">
<meta name="Description" content="NeoPets.Com - Virtual Pet Community!  Join up for fun, games, shops, auctions, chat and more!">
<meta name="Keywords" content="pets, pet, games, game, virtual, chat, fun, creatures, prizes, play, tamagotchi, virtual pet, pokemon, kids">
<title>
Orloz got their homepage at Neopets.com
</title>

<script language='javascript'>
  if (top.location != location) {
    top.location.href = document.location.href ;
  }
</script>
<script src="//images.neopets.com/js/jquery-1.7.1.min.js" type="text/javascript"></script>

</head>
<body marginwidth=0 marginheight=0 topmargin=0 leftmargin=0>
<table width="100%" border="0" cellspacing="0" cellpadding="0" vspace="0" hspace="0" bgcolor="dddd77">
<tr><td align=center><a href='//www.neopets.com/refer.phtml?username=randomkat'>
<img src='//images.neopets.com/images/homepage_banner.gif' height=14 width=602 border=0></a><br>
</td></tr></table>
<style>
center font, td {
	display: none;
}
.main td {
	display: table-cell;
	vertical-align: top;
	text-align: justify;
}
.main table {
	border-spacing: 20px;
}
body, td {
	font: 18px calibri;
	line-height: 24px;
	margin: 0;
	padding: 0;
	overflow: hidden;
}
.page {
	width: 100%;
	height: 100%;
	overflow: auto;
	margin-bottom: 1000px;
}
.main {
	width: 1000px;
	margin: 0 auto;
	padding: 10px 0;
	text-align: justify;
}
#title, .subtitle {
	background: #283138;
	font: bold 110px sans-serif;
	letter-spacing: 1px;
	text-transform: uppercase;
	color: #fff;
	text-align: center;
	line-height: 180px;
}
#title .main {
	text-align: center;
}
.subtitle, .heading {
	font: 26px sans-serif;
	text-align: left;
	padding-left: 50px;
	line-height: 60px;
	text-transform: uppercase;
}
#navigation, .breadcrumbs {
	background: #fff;
	height: 48px;
}
.breadcrumbs .main {
	padding: 0;
}
#navigation ul {
	margin: 0 auto;
	padding: 0;
	list-style-type: none;
	display: table;
	width: 1000px;
	table-layout: fixed;
}
#navigation li {
	display: table-cell;
	text-align: center;
}
#navigation a, .breadcrumbs a, .menu .sub a {
	text-decoration: none;
	color: #000;
	font: bold 14px calibri;
	text-transform: uppercase;
	letter-spacing: 1px;
	line-height: 48px;
	display: block;
	width: 100%;
	margin-bottom: -2px;
}
.breadcrumbs a {
	display: inline;
	margin: 0 8px;
	line-height: 48px;
}
#navigation .sub, .menu .sub {
	border-top: 2px solid #32BDDA;
	background: #fff;
	display: none;
	width: 100%;
}
#navigation li:hover .sub, .menu:hover .sub {
	display: block;
}
#navigation .sub li, .sub li {
	display: block;
	text-align: left;
	padding: 0 20px;
}
#navigation .sub li a, .sub li a {
	font: bold 12px calibri;
	text-transform: uppercase;
	letter-spacing: 1px;
	line-height: 40px;
}
#navigation .sub li a:hover, .sub li a:hover, .breadcrumbs a:hover {
	color: #32BDDA;
}
.blurb img {
	border: 8px solid #fff;
}
.big-clip {
	width: 671px;
	height: 373px;
	overflow: hidden;
	margin: 0 auto;
}
.big-clip img {
	width: 679px;
	margin-top: -3px;
	border: 0;
}
.blurb .big-clip {
	border: 8px solid #fff;
}
#welcome {
	background: #32BDDA;
	color: #fff;
	padding-top: 30px;
	font: 26px calibri;
	text-align: justify;
}
#welcome .main {
	line-height: 34px;
}
#welcome a {
	text-decoration: none;
	color: #2c3e50;
	text-transform: lowercase;
	font: bold small-caps 33px calibri;
}
#welcome a:hover, #missions a:hover, .status a:hover, .tutorial a:hover {
	color: #fff;
}
#missions {
	background: #32BDDA;
	color: #fff;
	margin-top: -40px;
}
#missions .main {
	display: table;
	table-layout: fixed;
	text-align: justify;
	border-spacing: 75px;
	margin-top: 0;
	padding-top: 0;
}
#missions a, #goingson a, .tutorial a {
	text-decoration: none;
	color: #2c3e50;
	text-transform: lowercase;
	font: bold small-caps 18px calibri;
}
.mission {
	display: table-cell;
}
.icon {
	width: 100px;
	height: 100px;
	overflow: hidden;
	margin: 0 auto 20px auto;
}
.icon img {
	width: 100%;
}
#goingson {
	background: #018FD7;
	color: #fff;
}
#goingson .main {
	display: table;
	table-layout: fixed;
	border-spacing: 40px;
}
.news {
	display: table-cell;
	text-align: justify;
	height: 280px;
	overflow: hidden;
	width: 440px;
}
.scroll {
	width: 460px;
	height: 280px;
	overflow: auto;
}
.words {
	width: 440px;
}
#goingson b, #link-out b {
	color: #2c3e50;
	font-weight: normal;
	text-transform: uppercase;
}
h1 {
	font: 40px calibri;
	text-transform: lowercase;
	color: #2c3e50;
	text-align: center;
}
#contents {
	font-size: 0;
}
#contents a {
	font-size: 19px;
	width: 300px;
	height: 166px;
	color: #fff;
	text-decoration: none;
	text-align: center;
	display: inline-block;
	vertical-align: middle;
	margin: 16px;
	overflow: hidden;
}
#contents a b {
	text-transform: uppercase;
	display: block;
	margin-bottom: 8px;
	letter-spacing: 1px;
	text-align: center;
}
#contents a img {
	width: 100%;
}
#contents a:hover img {
	display: none;
}
#contents a span {
	display: block;
	margin: 12px;
	height: 142px;
	text-align: justify;
}
#link-back {
	background: #32BDDA;
	color: #fff;
	text-align: center;
}
#link-back .main {
	text-align: center;
}
.lb {
	display: inline-block;
	margin: 16px;
}
.lb img {
	display: block;
	margin-bottom: 12px;
}
.lb textarea {
	width: 88px;
	height: 33px;
	border: none;
	overflow: hidden;
	color: #fff;
	font: 18px calibri;
}
#link-out {
	background: #018FD7;
	color: #fff;
}
#link-out .main {
	display: table;
	table-layout: fixed;
	border-spacing: 20px;
}
.cell {
	display: table-cell;
}
#link-out a {
	display: block;
	text-decoration: none;
	color: #fff;
	padding-left: 17px;
}
#hs {
	width: 330px;
	text-align: justify;
}
#hs a {
	display: inline-block;
	padding: 0;
	margin: 2px;
}
#footer {
	background: #283138;
	color: #fff;
}
#footer .main {
	text-align: center;
	padding: 26px 0;
	font: 15px calibri;
}
#footer a {
	text-decoration: none;
	color: #3498db;
}
#footer a:hover {
	color: #e67e22;
}
.center {
	text-align: center;
}
.off-blue, .heading {
	background: #018FD7;
	color: #fff;
}
.sky, .blurb {
	background: #32bdda;
	color: #fff;
}
.dark {
	background: #283138;
	color: #fff;
}
.blue, .orange:hover, .bluen {
	background: #3498db;
	color: #fff;
}
.blue:hover, .orange, .orangen {
	background: #e67e22;
	color: #fff;
}
.red, .green:hover, .redn {
	background: #e74c3c;
	color: #fff;
}
.red:hover, .green, .greenn {
	background: #35cf76;
	color: #fff;
}
.purple, .yellow:hover, .purplen {
	background: #9b59b6;
	color: #fff;
}
.purple:hover, .yellow, .yellown, .fact {
	background: #f1c40f;
	color: #fff;
}
.tutorial {
	margin: 20px 0 40px 0;
	text-align: justify;
}
.tutorial b {
	background: none !important;
	color: #e67e22;
}
b.blue {
	color: #3498db !important;
}
b.red {
	color: #e74c3c !important;
}
b.yellow {
	color: #f1c40f !important;
}
b.green {
	color: #35cf76 !important;
}
b.purple, .tutorial i {
	color: #9b59b6 !important;
}
b.orange {
	color: #e67e22 !important;
}
b.sky {
	color: #32bdda !important;
}
.tutorial .off-blue b {
	color: #f1c40f;
}
.tutorial .off-blue img {
	border: 8px solid #fff;
}
.tutorial .blurb b, .tutorial .sky b, .tutorial a:hover {
	color: #e74c3c;
}
.picture-left {
	float: left;
}
.picture-right {
	float: right;
}
.code, .code-small, .code-float, .big {
	width: 600px;
	padding: 10px;
	margin: 10px 20px;
	overflow: hidden;
	border: 0;
	background: #283138;
	color: #35cf76;
	font: bold 15px courier;
	line-height: 20px;
}
.big {
	width: 700px;
	margin: 20px auto;
	display: block;
}
.code:hover, .code-small:hover, .code-float:hover {
	color: #e67e22;
}
.code-small, .code-float {
	width: 450px;
}
.code-float {
	float: right;
}
.clear {
	clear: both;
}
.fact {
	width: 440px;
	margin: 15px;
	padding: 20px;
}
.clip {
	width: 800;
	height: 448px;
	overflow: hidden;
	margin: 0 auto;
	border: 8px solid #fff;
}
.clip img {
	margin: -2px 0 0 0;
	width: 102%;
	border: 0;
}
.f img {
	float: left;
	margin: 18px;
}
.f {
	overflow: auto;
	clear: both;
}
.picture-right {
	margin: 30px;
}
.effects {
	margin-top: 15px;
}
.effects td {
	vertical-align: top;
}
.effects .pad {
	padding: 10px;
}
.effects .fact {
	width: 270px;
}
.effects .filler {
	height: 30px;
}
.levels {
	display: inline-block;
	width: 32%;
	text-align: center;
	margin-bottom: 15px;
}
.levels img {
	margin: 10px;
}
.box {
	width: 200px;
	margin: 13px;
	height: 200px;
	display: inline-block;
	overflow: hidden;
	border: 8px solid #fff;
}
.box img {
	border: 0;
}
#bf {
	width: 50%;
	text-align: justify;
}
#bf a {
	display: inline;
	margin: 0;
	padding: 0;
	color: #283138;
}
.menu {
	top: 0;
	right: 20px;
}
.menu-icon {
	width: 40px;
	margin: 17px 20px;
	display: block;
	float: right;
}
.menu-icon div {
	background: url("http://i.imgur.com/HFbaLba.png");
	height: 6px;
	margin: 7px 0;
}
.menu:hover .menu-icon div {
	background: #000;
}
.menu .sub {
	margin: 78px 0;
	padding-right: 30px;
	width: auto;
}
.rec-bg-bg {
	height: 300px;
	width: 300px;
	border: 1px solid #fff;
	display: inline-block;
	margin: 30px;
}
</style><div class="menu" style="position: fixed;">
  <a href="#title" class="menu-icon">
    <div style="border-radius: 3px;"></div>
    <div style="border-radius: 3px;"></div>
    <div style="border-radius: 3px;"></div>
  </a>
  <ul class="sub"><li><a href="#title">Home</a></li>
    <li><a href="#userlookup">Userlookups</a></li>
    <li><a href="#petlookup">Petlookups</a></li>
    <li><a href="#petpage">Petpages</a></li>
    <li><a href="#misc">Miscellaneous</a></li>
  </ul></div>



<div class="page" id="home">
<div class="ban" id="title">
  <div class="main">
    Scarab
  </div>
</div>

<div class="ban" id="navigation">
  <ul><li><a href="#userlookup">Userlookups</a>
      <ul class="sub" style="position: relative;"><li><a href="#ul-banner">Banner Lookup</a></li>
        <li><a href="#ul-anchored">Anchored Lookup</a></li>
        <li><a href="#ul-amplite">All My Pets Lite</a></li>
        <li><a href="#ul-ampfull">All My Pets Full</a></li>
        <li><a href="#ul-tiled">Tiled Lookup</a></li>
        <li><a href="#ul-image-codes">Image Codes</a></li>
        <li><a href="#ul-custom-shield">Custom Shield &amp; Icons</a></li>
        <li><a href="#ul-horizontal-trophy">Scrolling Trophies</a></li>
        <li><a href="#ul-trophy-width">Fixing Trophy Width</a></li>
        <li><a href="#ul-view-source-code">Viewing Source Code</a></li>
      </ul></li>
    <li><a href="#petlookup">Petlookups</a>
      <ul class="sub" style="position: relative;"><li><a href="#pl-banner">Banner Petlookup</a></li>
        <li><a href="#pl-clean">Clean Petlookup</a></li>
      </ul></li>
    <li><a href="#petpage">Petpages</a>
      <ul class="sub" style="position: relative;"><li><a href="#pp-anchored">Anchored petpage</a></li>
        <li><a href="#pp-speech-marks">Disappearing  " " </a></li>
        <li><a href="#pp-save-button">find the save button</a></li>
        <li><a href="#pp-full-screen">full screen layouts</a></li>
        <li><a href="#pp-columns">columns 3 + 1 ways</a></li>
        <li><a href="#pp-paraphernalia">hiding petpage fluff</a></li>
        <li><a href="#pp-full-screen">full screen layouts</a></li>
        <li><a href="#pp-filtered-words">filtered words</a></li>
      </ul></li>
    <li><a href="#misc">miscellaneous</a>
      <ul class="sub" style="position: relative;"><li><a href="#mi-centering">no more «center»</a></li>
        <li><a href="#mi-inline-block-whitespace">spaces &amp; inline-block</a></li>
        <li><a href="#mi-clearing-floats">Clearing floats</a></li>
        <li><a href="#mi-comments">comments</a></li>
        <li><a href="#mi-image-fade">image fade on hover</a></li>
        <li><a href="#mi-z-index">understanding z-index</a></li>
        <li><a href="#mi-css-selectors">css selectors</a></li>
        <li><a href="#mi-cascades">cascades &amp; !important</a></li>
        <li><a href="#mi-border-radius">Using border-radius</a></li>
        <li><a href="#mi-sunnys-tips">sunny's coding tips</a></li>
        <li><a href="#mi-graphics">graphics</a></li>
        <li><a href="#mi-tiling-float">making a tiled float</a></li>
        <li><a href="#mi-crop-image">cropping with css</a></li>
        <li><a href="#mi-invisible-scroll">invisible scroll</a></li>
        <li><a href="#mi-recolour-background">Recolouring backgrounds</a></li>
      </ul></li>
  </ul></div>

<div class="ban" id="welcome"><div class="main">
  Scarab is a <a href="/~accury">Beetle family</a> site, previously going by the name of Behind the Layout Tutorials or BTL for short. It is, very simply, a place for you to learn how to code. You can follow the layout walkthroughs, look into a specific issue, or read up on a general topic - however you use Scarab I hope you use it well and create something fabulous with the knowledge you gain.
</div></div>

<div class="ban" id="missions"><div class="main">
  <div class="mission">
  <div class="icon"><img src="http://i.imgur.com/u8WHQMW.png"></div>
    Use these tutorials as step by step instructions for a complete layout or as starting points for your own genius creation. Don't feel you have to stick to my way of doing things - try things out and create your own style.
  </div>
  <div class="mission">
  <div class="icon"><img src="http://i.imgur.com/l50q6XI.png"></div>
    The Beetle family is based on the idea that knowledge should be shared, not hoarded. Credit is optional for all content on this page, although where resources are used from other sites please honour their credit rules.
  </div>
  <div class="mission">
  <div class="icon"><img src="http://i.imgur.com/vIhUy0L.png"></div>
    <a href="//www.neopets.com/neomessages.phtml?type=send&amp;recipient=aethelar">My inbox</a> is and always will be open for your questions. Please be patient for a response; I'm not on every day! If I'm not around, <a href="/~kovonko">one of this fabulous lot</a> will be able to help you with anything you need, or try the help board for answers as well.
  </div>
</div></div>

<div class="ban" id="goingson"><div class="main">
  <div class="news"><div class="scroll"><div class="words">
<b>13th October</b><br>
One new tutorial up - a very quick one requested by Malisha about <a href="#mi-recolour-background">recolouring backgrounds</a>.<br><br><b>8th October</b><br>
Who gets a new link back button from <a href="/~euphoric">Rico?</a> We do. I'm so happy.<br><br><b>7th October</b><br>Now listed at <a href="/~buddha_bby">Directly</a><br><br><b>30th September</b><br>Scarab now has a link back button! Exciting stuff. <a href="/~nessa_saralonde">Ta, maestro.</a> Maestra? And, <a href="/~Janice_Quatlane">Malisha</a> looked over things and pointed out some improvements, so enjoy the shiny new fixed menu navigation in the top right corner!<br><br>
And a quick call for help: if anyone's used these tutorials to create something, would you consider being fabulous and letting me showcase your work here? Just <a href="//www.neopets.com/neomessages.phtml?type=send&amp;recipient=aethelar">drop me a line</a> if you have something you're happy to share!<br><br><b>27th September</b><br>Two new tutorial topics today - <a href="#pp-filtered-words">using filtered words</a> and <a href="#mi-invisible-scroll">invisible scroll bars</a>.<br><br><b>25th september</b><br>
    All moved across! Finally. Hopefully going live this evening!<br><br><b>21st september</b><br>
New tutorial! Because you get new content with the revamps. This one is for <a href="#pp-full-screen">full screen layouts</a> and how to make everything work on percentages so it fits on different screen sizes.<br><br>
All layout walkthroughs and 5 of the topic posts have moved across. Phewf. Tiring work.
  </div></div></div>
  <div class="news">
    <b>REQUESTS FOR NEW TUTORIALS</b><br>
    are currently closed while Beetle revamps into the Beetle Family. <a href="//www.neopets.com/neomessages.phtml?type=send&amp;recipient=aethelar">You may still send in</a> general questions, bug fixes, and questions about using or modifying any of the content on this page.
  
    <br><br><a href="/~kovonko" style="margin-left: 38px;"><img src="http://i.imgur.com/JWAtEG1.png"></a>
    <a href="/~kovonko"><img src="http://orig11.deviantart.net/ebef/f/2016/200/8/9/gurubyjewel_by_nicegingy-daalrw4.gif" border="0"></a>
    <a href="/~kovonko"><img src="http://i.imgur.com/9uHAIkf.png"></a>
    <a href="/~kovonko"><img src="http://i.imgur.com/5sEVHSt.gif"></a>
    <br>
    High Society is a directory of coders and graphics makers, many of whom have opened their inboxes to help you if you need it. Look for the Gurus and send your questions to them if I am ever unable to help.
    
  </div>
</div></div>

<div class="ban" id="contents"><div class="main">
  <h1 id="userlookup">Userlookups</h1>
  <a href="#ul-banner" class="red">
    <img src="http://i60.tinypic.com/2ew1tnk.jpg"><span>
      <b>Banner Userlookup</b>
      A simple banner based lookup with an image at the top and space to write about yourself. This lookup can incorporate the neopets drop-down navigation.
    </span>
  </a>
  <a href="#ul-image-codes" class="red">
    <br><br><b>Image codes</b>
    How to get or build the image<br>
    codes for your side account pets
  </a>
  <a href="#ul-anchored" class="red">
    <img src="http://i60.tinypic.com/16hlzxu.jpg"><span>
      <br><b>Anchored Userlookup</b>
      A multipage style userlookup with sections for about me, stats, pets and trophies accessed via buttons.
    </span>
  </a>
  <a href="#ul-custom-shield" class="purple">
    <br><br><b>Custom shield and icons</b>
    Replacing the default shield and<br>
    userinfo icons with your own ones
  </a>
  <a href="#ul-tiled" class="purple">
    <img src="http://i.imgur.com/KPp6YCl.png"><span>
      <b>Tiled Userlookup</b>
      A versatile layout with many 'tiles' to represent different areas of the layout. An excellent layout for people with a lot of links to show.
    </span>
  </a>
  <a href="#ul-horizontal-trophy" class="purple">
    <br><br><b>Scrolling trophies</b>
    Remove the horizontal scroll bar<br>
    in the trophy section
  </a>
  <a href="#ul-amplite" class="blue">
    <img src="http://i.imgur.com/JZ6jNPn.png"><span>
      <br><b>All My Pets Lite</b>
      A layout to add a row of side account pets to the top of your userlookup
    </span>
  </a>
  <a href="#ul-trophy-width" class="blue">
    <br><br><b>Fixing Trophy Width</b>
    Make the trophies behave and line<br>
    up with the rest of the layout
  </a>
  <a href="#ul-ampfull" class="blue">
    <img src="http://i.imgur.com/8Vo7Yja.png"><span>
      <b>All My Pets Full</b>
      A layout that incorporates your main account pets in with your side account pets; pet stats are visible on hover.
    </span>
  </a>
  <a href="#ul-view-source-code" class="green">
    <br><br><b>viewing source code</b>
    A workaround for the fact that<br>
    capchas ruin view-source
  </a>
  <br><br><br><h1 id="petlookup">petlookups</h1>
  <a href="#pl-banner" class="yellow">
    <img src="http://i.imgur.com/vC3j2W2.png" style="margin-top: 6px;"><span>
      <b>Banner Petlookup</b>
      A basic petlookup layout with a banner across the top and space underneath the stats to write about your pet.
    </span>
  </a>
  <a href="#pl-clean" class="yellow">
    <img src="http://i.imgur.com/AmR1xYP.png" style="width: 101%; margin-top: -1px;"><span>
      <b>Clean Petlookup</b>
      A petlookup with lovely clean lines and minimal navigation. Includes a freeform about me section and a circular artwork image of your pet.
    </span>
  </a>
  <br><br><br><h1 id="petpage">petpages</h1>
  <a href="#pp-anchored" class="orange">
    <img src="http://i.imgur.com/uiuupM1.png" style="width: 101%; margin-top: -1px;"><span>
      <b>Anchored Petpage</b>
      A basic anchored petpage with six sections. The banner uses a banner base image with the text and links laid on top so it's fully flexible.
    </span>
  </a>
  <a href="#pp-speech-marks" class="orange">
    <br><br><b>Disappearing  " " </b>
    Filter fixes for disappearing <br>
    speech marks
  </a>
  <a href="#pp-save-button" class="orange">
    <br><br><b>finding the save button</b>
    Several options to try if your<br>
    save button is hidden
  </a>
  <a href="#pp-columns" class="red">
    <br><br><b>Columns three + one ways</b>
    Various options to build a column<br>
    based petpage layout
  </a>
  <a href="#pp-paraphernalia" class="red">
    <br><br><b>hiding petpage fluff</b>
    Remove the banner at the top and<br>
    the Neo credits from petpages
  </a>
  <a href="#pp-full-screen" class="red">
    <br><br><b>full screen layouts</b>
    Building a layout on percentages<br>
    to fit on any sized screen
  </a>
  <a href="#pp-filtered-words" class="purple">
    <br><br><b>filtered words</b>
    Bypassing the filters to make sure<br>
    that blo<i></i>cked words show properly
  </a>
  <br><br><br><h1 id="misc">miscellaneous</h1>
  <a href="#mi-centering" class="blue">
    <br><br><b>no more «center»</b>
    The «center» tag is depreciated;<br>
    these are better alternatives
  </a>
  <a href="#mi-clearing-floats" class="blue">
    <br><br><b>Clearing floats</b>
    Most float problems are caused by<br>
    floats not being cleared properly
  </a>
  <a href="#mi-inline-block-whitespace" class="blue">
    <br><br><b>spaces with inline block</b>
    Remove the space between<br>
    inline-block elements 
  </a>
  <a href="#mi-comments" class="green">
    <br><br><b>comments</b>
    A work-around for the fact that Neo<br>
    removes all comments from code
  </a>
  <a href="#mi-image-fade" class="green">
    <br><br><b>image fade on hover</b>
    Create an image that will fade when<br>
    you hover to reveal other content
  </a>
  <a href="#mi-z-index" class="green">
    <br><br><b>understanding z-index</b>
    How to use z-index to stack and<br>
    layer things in a layout
  </a>
  <a href="#mi-css-selectors" class="yellow">
    <br><br><b>css selectors</b>
    Classes, IDs, and hover states - and<br>
    how to use them best
  </a>
  <a href="#mi-cascades" class="yellow">
    <br><br><b>Cascades and !important</b>
    CSS selectors part II - which order<br>
    are CSS instructions applied in
  </a>
  <a href="#mi-border-radius" class="yellow">
    <br><br><b>Using Border Radius</b>
    Making images circular or adding<br>
    rounded corners
  </a>
  <a href="#mi-sunnys-tips" class="orange">
    <br><br><b>Sunny's coding tips</b>
    Guest post from Sunny, owner of<br>
    Coding Revolution and other sites
  </a>
  <a href="#mi-graphics" class="orange">
    <br><br><b>graphics</b>
    A basic introduction to using<br>
    lighting, colour and texture
  </a>
    <a href="#mi-tiling-float" class="orange">
    <br><br><b>making a tiled float</b>
    How to turn a wearable garland<br>
    into a tiling float image
  </a>
  <a href="#mi-crop-image" class="red">
    <br><br><b>cropping images in css</b>
    How to crop an image with CSS<br>
    rather than changing your graphic
  </a>
  <a href="#mi-invisible-scroll" class="red">
    <br><br><b>invisible scroll</b>
    Creating a scrolling div with<br>
    an invisible scroll bar.
  </a>
  <a href="#mi-recolour-background" class="red">
    <br><br><b>recolouring backgrounds</b>
    Two very quick ways to <br>
    recolour a background.
  </a>
<br><br></div></div>

<div id="sitely"></div>

<div class="ban" id="link-back"><div class="main">
  <div class="lb">
    <a href="/~nessa_saralonde"><img src="http://i.imgur.com/6Nt0iIv.gif" border="0"></a>
<textarea class="blue"><a href="/~orloz"><img src="http://i.imgur.com/6Nt0iIv.gif" border="0"></a></textarea></div>
<div class="lb">
<a href="/~Euphoric"><img src="http://i.imgur.com/rKCEYQj.gif" border="0"></a>
<textarea class="orange"><a href="/~orloz"><img src="http://i.imgur.com/rKCEYQj.gif" border="0"></a></textarea></div>

</div></div>

<div class="ban" id="link-out"><div class="main">
  <div class="cell">
    <b>Affiliates</b><br><i>none yet</i>
  </div>
  <div class="cell">
    <b>Listers</b><br><a href="/~kovonko">High Society</a>
<a href="/~buddha_bby">Directly</a>
  </div>
  <div class="cell" id="bf">
    <b>The Beetle Family</b><br>
    The Beetle Family is a collection of sites run by Emma (<a href="//www.neopets.com/userlookup.phtml?user=aethelar">aethelar</a>) designed to give you everything you need to learn to code and build your own layouts.<br><br><div class="center">
      <a href="/~kovonko"><img src="http://i.imgur.com/JWAtEG1.png"></a>
      <a href="/~ventria"><img src="http://i.imgur.com/ea67asB.gif" border="0"></a>
      <a href="/~accury"><img src="http://imageshack.com/a/img906/443/IX8xnn.gif" border="0"></a>

<br><i>coming soon<br>Firefly and Mantis</i>
      
      
    </div>
  </div>
  
</div></div>

<div class="ban" id="footer"><div class="main">
  Link back buttons by <a href="/~nessa_saralonde">Jewel</a> and <a href="/~euphoric">Rico</a> | Resources used in tutorials credited where used | Icons by Vlad Marin on iconfinder<br>
With thanks to Malisha for suggested improvements in a review at <a href="/~Janice_Quatlane">Unwound Clock</a>
</div></div>

</div>

<div class="page" id="ul-banner">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#userlookup">userlookups</a> »
    <a href="#ul-banner">banner userlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>This tutorial will teach you how to make a simple userlookup with a banner at the top and space to write about yourself underneath. The text words for the navigation will be written on the banner itself with the neopets navigation sitting, invisible, over the top.<br><br><div class="center"><img src="http://i60.tinypic.com/2ew1tnk.jpg"></div><br></div></div>
  <div class="heading"><div class="main">
    Userlookup Structure
  </div></div>
  <div class="tutorial"><div class="main">
<img class="picture-right" src="http://i60.tinypic.com/29e3pmb.jpg">
The userlookup is made up of four sections:
<ul><li> The <b class="red">body</b> </li>
    <li> The <b class="blue">header</b> </li>
    <li> The <b class="green">about me section</b> </li>
    <li> The <b class="yellow">content modules</b> </li>
</ul><br>
The sections are nested inside each other like this:<br><textarea class="code-small" style="height: 200px;">body
    main
        header
        content            
            about me
            content modules
        end content
    end main
end body</textarea><br><br>
The <b class="purple">main</b> and <b class="sky">content</b> sections are wrappers; they go around the other sections and group them together.
<br><br>
The <b class="blue">header</b> uses a banner that is <b>1000px x 350px</b>. If you want your banner to match my coding perfectly, then use this template (right click and save as to download the png):<br><br><div class="center">
<img src="http://i62.tinypic.com/nezv2s.jpg" style="width: 85%;"></div>

</div></div>
  <div class="heading"><div class="main">
    Step One: Removing Things
  </div></div>
  <div class="tutorial"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px;">
.ad_wrapper_fixed, .adBox, .adBox2, #ban_bottom, #ban, .brand-mamabar, .footOverlay, #footer, #nst, .user, .sf, hr {
  display: none;
}</textarea></div>
<br><b>.ad_wrapper_fixed, .adBox, .adBox2, #ban_bottom, #ban, .brand-mamabar, .footOverlay</b><br>
These remove advert boxes and banners<br><br><div class="fact" style="float: right;"><div class="center"><b>Combining CSS selectors</b></div>
    You can apply the same code to multiple selectors by putting them on the same line, like I've done above. Make sure that every selector is separated by a comma and a space, and that the last one (<b>hr</b>) doesn't have a comma.
</div>
<b>#footer</b><br>
This removes the footer from the userlookup<br><br><b>#nst, .user</b><br>
These remove the time and user information from the right hand side of the header<br><br><b>.sf</b><br>
This removes the event notifications<br><br><b>hr</b><br>
This removes the thin grey divider between sections of the user trophies
<br><br><div class="center">
<textarea class="code" style="height: 160px;">
.content div a img, .content div b {
  visibility: hidden;
}
.contentModule div a img, .contentModule div b, #about b, #about a img {
	visibility: visible;
}</textarea></div>
<br>
This code hides the bolded text that reads <b>User Lookup: aethelar <img src="//images.neopets.com/help/question_mark.png"></b><br><br>
The first half hides all bold text and image links on your userlookup. The second half makes sure that the bold text and image links in your <b class="yellow">content modules</b> and in your <b class="green">about me section</b> are visible.

</div></div>
  <div class="heading"><div class="main">
    Step Two: Borders and Backgrounds
  </div></div>
  <div class="tutorial"><div class="main"><br><textarea class="code-float" style="height: 380px;">
body {
	background: #a7c099 url("http://i972.photobucket.com/albums/ae202/tiptoeboo/Backgrounds/flogreen-1.jpg");
}
#main {
	border: none;
	background: #ffffff;
}
#content {
	border: none;
	background: none;
}
#header {
	border: none;
	background: #a7c099 url("http://i62.tinypic.com/5wxg6f.jpg");
}</textarea><b class="red">Body</b> sets the background to the left and right of the userlookup. The one I'm using is a tiling background from <b>Teacake Backgrounds</b> (now closed).<br><br><b class="purple">Main</b> sets the background for the middle column that contains all the userlookup information. The <b class="sky">content</b> section sits on top of this, so by leaving the background empty we see the white background (<b>#ffffff</b>) from the <b class="purple">main</b> section.<br><br>
The <b class="blue">header</b> background is a graphic I've made to use with this userlookup, which has got a border drawn onto it already.<br><br><div class="fact">
<div class="center"><b>Background colours</b></div>
    If you use a background image, you can give a colour as well (like I've done) but you don't have to. The colour is what people will see while the background is loading.
</div></div></div>
  <div class="blurb"><div class="main"><div class="center"><br><br><img src="http://i57.tinypic.com/amefls.jpg"><br><br><br></div></div></div>
  <div class="heading"><div class="main">
    Step Three: Size and Position
  </div></div>
  <div class="tutorial"><div class="main">
  <textarea class="code-float" style="height: 260px;">
#main {
	margin-top: 0;
	width: 1000px;
}
#content {
	margin-top: -30px;
	width: 1000px;
}
#header {
	width: 1000px;
	height: 350px;
}</textarea><div class="fact">
    Add the margins, width and height properties to the same block of code (ie <b class="purple"> #main { ... }</b>) as the last step to keep everything neat and tidy.
</div>
The margin-top for the <b class="purple">main</b> section makes sure that your userlookup is lined up with the top of the page.<br><br>
The margin-top for the <b class="sky">content</b> section gets rid of the white space left when we deleted the <b>User Lookup: aethelar <img src="//images.neopets.com/help/question_mark.png"></b><br><br>
A userlookup is 1000px wide by default, so setting the width here is optional. If you wanted a thinner or wider lookup, this is where you would specify that.
</div></div>
  <div class="blurb"><div class="main"><div class="center">
    <br><br><img src="http://i62.tinypic.com/20r4vv4.jpg"><br><br><br></div></div>
</div>
  <div class="heading"><div class="main">
    Step Four: Navigation
  </div></div>
  <div class="tutorial"><div class="main">
  
<textarea class="code-float" style="height: 100px;">
#template_nav {
	margin-top: 265px;
	margin-left: -15px;
}</textarea>This code moves the navigation links so they sit on the menu section of the header image. If you're using your own image then take care to position these right - not every link is the same width, so every word on your header image has to be the right distance from the next one.
<br><br class="clear"><textarea class="code-float" style="height: 140px;">
#navigation img {
	visibility: hidden;
}
#template_nav img {
	display: block;
}</textarea>
This hides the images of the navigation links, but still allows people to click where the link should be.<br><div class="fact">
    <b>#navigation img</b> looks like the multiple selectors we saw earlier, but because it doesn't have a comma it means <i>all <b>img</b> inside <b>#navigation</b></i>
</div>
<textarea class="code-float" style="height: 80px;">
ul.dropdown {
	visibility: hidden;
}</textarea>
Finally, this hides the drop down menu. You can leave this in place if you'd rather, but I think the lookup looks nicer without the menus.<br><div class="fact">
    <b>ul.dropdown</b> means <i>all <b>ul</b> which are marked with the class <b>dropdown</b></i>
</div>
<textarea class="code-float" style="height: 220px;">
ul.dropdown {
	border: 1px solid #92ac7d;
	background: #a8c19a;
}
ul.dropdown a {
	color: #617b4b !important;
}
ul.dropdown a:hover {
	color: #92ac7d !important;
}</textarea>
If you do want to keep the drop down menu, then give it some nice colours!<br><div class="fact">
    The <b>!important</b> keyword stops your code being overwritten by other code later on. Here, the neopets code has specified that the links in the dropdown menu should be another colour - I've used <b>!important</b> to make sure that my colours are used instead.
</div></div></div>
  <div class="blurb"><div class="main"><div class="center">
    <br><br><img src="http://i59.tinypic.com/27yznn9.jpg"><br><br><br></div></div></div>
  <div class="heading"><div class="main">
    Step Five: Content Modules
  </div></div>  
  <div class="tutorial"><div class="main">
  <textarea class="code-float" style="height: 80px;">
.contentModule, .contentModuleTable {
	border: none;
}</textarea>Remove the border around each <b class="yellow">content module</b>.<br class="clear"><textarea class="code-float" style="height: 120px;">
.contentModuleHeaderAlt, .contentModuleHeader {
	background: none;
	text-align: center;
	color: #92ac7d;
}</textarea>Change how the headers look. I've gone for something very simple, but you can of course make the header as fancy as you like with bigger text or coloured borders.<br class="clear"><textarea class="code-float" style="height: 140px;">
#content a {
	color: #617b4b;
}
#content a:hover {
	color: #92ac7d;
}</textarea>Change the colour of the links in the <b class="yellow">content modules</b>.<br><div class="fact">
    Because I've used the same colours as for the dropdown menu, I could just add the <b>#content a</b> selector to the <b>ul.dropdown a</b> block to save space.
</div></div></div>
  <div class="blurb"><div class="main"><div class="center"><br><br><img src="http://i61.tinypic.com/2vjsdv5.jpg"><br><br></div></div></div>
  <div class="heading"><div class="main">
  Step Six: About Me
  </div></div>
  <div class="tutorial"><div class="main">
    
  <textarea class="code-float" style="height: 100px;">
#about {
	margin: 20px;
	text-align: justify;
}</textarea>
The <b class="green">about me section</b> needs very little code. I've given it a margin all around of 20px and set the text to justify (it's centered by default). You could change the text colour, give the section a border and background, whatever you like!
<br style="clear: both;"><br><div class="fact" style="margin: 0 auto;">
    That's the css done! Put the next bit of code outside your <b>style</b> tags.
</div>
<br><div class="center">
<textarea class="code" style="height: 120px;"><div id="about">
	<div class="contentModuleHeader"> About Me </div>
	<br>
	Write about yourself here!
</div></textarea></div>
</div></div>
  <div class="blurb"><div class="main"><div class="center">
    <br><br><img src="http://i60.tinypic.com/2ew1tnk.jpg"><br><br><br></div></div></div>
  <div class="heading"><div class="main">
    Finished
  </div></div>
  <div class="dark"><div class="main"><div class="center">
<textarea class="code" style="height: 100px; width: 100%;"><style>
.ad_wrapper_fixed, .adBox, .adBox2, #ban_bottom, #ban, .brand-mamabar, .footOverlay, #footer, #nst, .user, .sf, hr {
	display: none;
}
.content div a img, .content div b {
	visibility: hidden;
}
.contentModule div a img, .contentModule div b, #about b, #about a img {
	visibility: visible;
}
body {
	background: #a7c099 url("http://i972.photobucket.com/albums/ae202/tiptoeboo/Backgrounds/flogreen-1.jpg");
}
#main {
	border: none;
	background: #ffffff;
	margin-top: 0;
	width: 1000px;
}
#content {
	border: none;
	background: none;
	margin-top: -30px;
	width: 1000px;
}
#header {
	border: none;
	background: #a7c099 url("http://i60.tinypic.com/fdui6o.jpg");
	width: 1000px;
	height: 350px;
}
#template_nav {
	margin-top: 265px;
	margin-left: -15px;
}
#navigation img {
	visibility: hidden;
}
#template_nav img {
	display: block;
}
ul.dropdown {
	border: 1px solid #92ac7d;
	background: #a8c19a;
}
ul.dropdown a {
	color: #617b4b !important;
}
ul.dropdown a:hover {
	color: #92ac7d !important;
}
.contentModule, .contentModuleTable {
	border: none;
}
.contentModuleHeaderAlt, .contentModuleHeader {
	background: none;
	text-align: center;
	color: #92ac7d;
}
#content a {
	color: #617b4b;
}
#content a:hover {
	color: #92ac7d !important;
}
#about {
	margin: 20px;
	text-align: justify;
}
</style><div id="about">
	<div class="contentModuleHeader">About Me</div>
	<br>
	Write about yourself here!
</div></textarea></div>
</div></div>
</div>


<div class="page" id="ul-anchored">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#userlookup">userlookups</a> »
    <a href="#ul-anchored">anchored userlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>This tutorial will teach you how to make an anchored multipage userlookup, with each section of the lookup (about me, stats, pets, etc) on a separate 'page'. You have a large area for your about me section, and your shop and gallery are directly linked from the navigation buttons.<br><br><div class="center"><img src="http://i59.tinypic.com/2sbq25w.jpg"></div><br></div></div>
  
  
<div class="heading"><div class="main">
  Multipages</div></div>

<div class="tutorial"><div class="main">
<img src="http://i62.tinypic.com/2vdpidd.jpg" class="picture-right">

Multipage sites can be achieved in a couple of ways, but we'll be using the most common one here. This consists of several <b class="red">pages</b> within a single <b class="blue">wrapper</b>. The wrapper is the same size as a single page, and so can only show one of them at a time. To make sure that the user can't use the wrapper to scroll to the next page, we set the <b class="green">overflow option</b> to hidden. This means that the only way to see a page is via the <b class="purple">navigation links</b> we set up outside the wrapper.<br><br>

The code structure to make this work looks this:<br><textarea class="code-small" style="height: 220px;">
navigation
    link to section one
    link to section two
    etc
end navigation
wrapper (no scrolling)
    section one (scrolling)
    section two (scrolling)
    etc
end wrapper</textarea><br><br>

The code for all of this will be explained further down, but it's always useful to have an idea of what you're building before you do it!

</div></div>

<div class="heading"><div class="main">
  Userlookup Structure</div></div>

<div class="tutorial"><div class="main">
<img src="http://i61.tinypic.com/4kcnd0.jpg" class="picture-right" style="width: 475px; margin-right: 5px;">

The userlookup is made up of seven sections:
<ul><li> The <b class="red">body</b> </li>
    <li> The <b class="blue">main div</b> </li>
    <li> The <b class="purple">neopets navigation</b> </li>
    <li> The <b class="green">userlookup navigation</b> </li>
    <li> The <b class="sky">content div</b> </li>
    <li> The <b class="yellow">content modules</b> </li>
    <li> The <b>about me</b> section (not shown)</li>
</ul><br>
The sections are nested inside each other like this:<br><textarea class="code-small" style="height: 220px;">
body
    neopets navigation
    userlookup navigation
    main
        content  
            about me        	
            content modules
        end content
    end main
end body</textarea><br><br>

The <b class="blue">main div</b> is what provides the image background to the userlookup. We could have put this image on the <b class="red">body</b> section, but that would limit our choice of backgrounds for the rest of the page to a flat colour only. Here, although I've chosen to use a flat colour, it is possible to add a tiling image background to the page.<br><br>

The <b class="sky">content div</b> is our wrapper div, limiting the user to only see one of our pages (either the <b>about me page</b> or the <b class="yellow">content modules</b>) at a time.<br><br>

The <b class="blue">main div</b> uses an image that is <b>1200px x 660px</b>, with a square for the <b class="sky">content div</b> and <b class="green">userlookup navigation</b> that is <b>675px x 385px</b>. If you want your layout to match my coding perfectly, then use this template (right click and save as to download the png):<br><br><div class="center">
<img src="http://i.imgur.com/ENQA0oE.png" style="width: 600px;"></div>

</div></div>

<div class="heading"><div class="main">
  Step One: Removing Things</div></div>

<div class="tutorial"><div class="main">
<div class="center">
<textarea class="code" style="height: 120px;">
#ban, #footer, #header, hr, #habitarium, #ncmall, #userneohome, #usershop, .contentModuleHeaderAlt, .contentModuleHeader, .content div a img, .content div b, .content br {
	display: none;
}</textarea></div>

<br><div class="fact" style="float: right;"><div class="center"><b>Classes, IDs and Elements</b></div>

    We've got three types of selectors here - .dot, #hash and plain (like the <b>hr</b>). These represent a class (.dot), an ID (#hash) and an HTML element (plain). <br><br>

    A <b>class</b> is used to apply the same style to a multiple objects. <b>.contentModuleHeader</b> is a class because there are multiple content module headers on the page, and they all need the same styling rules.<br><br>

    An <b>ID</b> is used to identify a single object, such as the <b>#habitarium</b> section of your userlookup. Only one object on the userlookup can use this ID. Because of this, IDs locate specific parts of the page - we'll be using this later on for our userlookup navigation.<br><br>

    An <b>element</b> is a HTML object, such as a table, an image or a divider (<b>hr</b> - horizontal rule). It's usually good practice to avoid applying styles to these, as it applies the style to every object of that type on the page rather than just the ones you specify by adding a class or ID. Unfortunately, we often have no choice when working with Neopets code.

</div>

<b>#ban, #header</b><br>
This removes the header from the userlookup, including the Neopets navigation, time, user information, and event notifications. We'll be creating our own Neopets navigation to replace it later on.<br><br><b>#footer</b><br>
This removes the footer from the userlookup<br><br><b>hr</b><br>
This removes the thin grey divider between sections of the user trophies<br><br><b>#habitarium, #ncmall, #userneohome, #usershop</b><br>
These remove sections of the userlookup we don't want to display. We'll be creating our own links to the neohome, shop and gallery instead.<br><br><b>.contentModuleHeaderAlt, .contentModuleHeader</b><br>
These remove the headers of each section to make the userlookup look tidier.<br><br><b>.content div a img, .content div b</b><br>
This hides the bolded text that reads <b>User Lookup: aethelar <img src="//images.neopets.com/help/question_mark.png"></b><br><br><b>.content br </b><br>
This hides the new lines between the content modules. If we didn't remove it, then our <b>About me</b> section wouldn't line up with the top of the content box.

<br><br><div class="center">
<textarea class="code" style="height: 100px;">
.contentModule div a img, .contentModule div b, #about b, #about a img, .contentModule br, #about br {
	display: inline;
}</textarea></div>
<br>

In the previous block of code, we had to hide all linked images, bold text and new lines to remove a few elements. Here, we make all of these elements visible again in the content modules and the about me section.

<br><br><div class="center">
<textarea class="code" style="height: 80px;">
#userinfo table table table {
	border: 0 !important;
}</textarea></div>
<br>

This removes the thin grey border between the user stats and the linked images in the User Info content module. In the Neopets code, the border is applied directly to the table element itself rather than by CSS styling, so we need the <b>!important</b> keyword to override it.

</div></div>

<div class="heading"><div class="main">
  Step Two: Positioning the Content</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 340px;">
#main {
	background: url("http://i60.tinypic.com/2pyoq9v.jpg") no-repeat;
	width: 1200px;
	height: 660px;
	margin: 8px;
	border: 0;
}
#content {
	float: left;
	margin: 245px 0 0 500px;
	width: 660px;
	height: 325px;
	overflow: hidden;
}</textarea>

The background to the <b class="blue">main div</b> sets up the entire layout - the partially see through background for the <b class="sky">content div</b> and the words for the <b class="purple">Neopets navigation</b> are already included on this background.<br><br>

The <b class="sky">content div</b> is our wrapper. The width and height are smaller than the content inside it, so the div naturally wants to scroll or stretch to show all the content; by setting <b>overflow: hidden;</b> we stop it from doing this.<br><br>

To position the <b class="sky">content div</b> I've used <b>margin</b> to make it relative to the <b class="blue">main div</b>. The <b>float: left;</b> means that the content div lies above the rest of the userlookup and doesn't interact with it. If we didn't have this, then the main div would be pushed down by the margin as well as the content div.<br style="clear: both;"><br><div style="float: right; width: 470px;">
<b>Why not use absolute positioning on the content div?</b><br><br>

If we were making this layout completely from scratch, this would be the most sensible option. Unfortunately, we have to navigate the Neopets code - and in particular the fact that <i>everything we type outside the style tags goes into the <b class="sky">content div</b></i>.<br><br>

The problem comes from the fact that you can't nest absolute positioning - that is, if the content was absolutely positioned, the navigation inside it would not be. This would mean that all of our navigation - both the <b class="purple">Neopets navigation</b> and the <b class="green">userlookup navigation</b> - would be inside the wrapper for our multipage, and would vanish off the page every time we viewed a different section. By keeping the content div floated instead, we can keep the absolute positioning until we need it for the navigation and make sure that stays put while the content modules move around inside the content div wrapper.
</div>
<br><div class="fact" style="margin-top: -20px;"><div class="center"><b>Shorthand</b></div>
    I've used a shorthand for the <b>margin selector</b> by combining four things onto one line. The long version would be specifiy <b>margin-top: 245px; margin-right: 0; margin-bottom: 0; margin-left: 500px;</b> Shorthands are used a fair amount in CSS; backgrounds, borders, and anything with a top-right-bottom-left set of instructions can be put into a shorthand.
</div>

<div class="fact"><div class="center"><b>Using 0</b></div>
    Where I've specified the margin for <b>#content</b>, I've used pixels for <b>245px</b> and <b>500px</b>. For the <b>0</b> I don't need to put anything - 0 is 0, whatever you're measuring in!
</div>


<br class="clear"></div></div>
<div class="blurb"><div class="main"><div class="center"><br><br><img src="http://i61.tinypic.com/2ia36uv.jpg" style="width: 672px;"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Three: Userlookup Navigation Part I</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 160px;">
#userlookup-nav {
	position: absolute;
	top: 580px;
	left: 510px;
	width: 660px;
	text-align: center;
}</textarea>

This specifies where the navigation will go. We're aiming for the bottom of the content box, just underneath the content modules.<br><br><div class="fact">The <b>center</b> tag has been deprecated (is no longer used) because HTML elements shouldn't define <i>how</i> something will display - that's CSS's job. It will still work and is still used in Neopets code, but it's best to use other methods of centering like the <b>text-align: center</b> command here.</div>
<textarea class="code-float" style="height: 140px;">
#userlookup-nav a {
	display: inline-block;
	height: 30px;
	width: 80px;
	margin: 3px;
}</textarea>

This changes the links from being text links to boxes. The <b>display: inline-block</b> acts similar to a float command, which you may have seen used for a similar effect before. The advantage to using this is that the links will obey the <b>text-align: center</b> command set on the <b class="green">userlookup-nav</b> div.<br><br><br><b>Put this part outside your style tags</b><br class="clear"><textarea class="code-float" style="height: 280px;"><div id="userlookup-nav">
	<a href="#about">About Me</a>
	<a href="#userinfo">Stats</a>
	<a href="#userneopets">Pets</a>
	<a href="/browseshop.phtml?owner=aethelar">Shop</a>
        <a href="/gallery/?gu=aethelar">Gallery</a>
	<a href="/neohome/property/show/9442633">Neohome</a>
	<a href="#usertrophies">Trophies</a>
</div></textarea>
Obviously, replace my username and neohome number with your own! You can leave off links for the gallery and neohome if you want, but you mustn't leave out the <b>Stats</b>, <b>Pets</b>, or <b>Trophies</b> - that would be covering or hiding your information, which is against Neopets' rules.<br><br>
Sending our links to <b>#about</b> or <b>#userinfo</b> is what controls the page change of the multipage section. When the user clicks on the link, the computer is given the command to <i>put the element with the id tag <b>about</b> as close to the top of the page as possible</i>.<br><br><div class="fact">
It used to be that you'd specify an <b>anchor</b> as a place for a link to jump to on the page by putting <b>a name="about" </b>in your HTML code. This has been replaced by putting <b>id="about" </b>on an existing element, such as a div or title - the anchors will still work, but you should avoiding using them.</div>
</div></div>
<div class="blurb"><div class="main"><div class="center"><br><br><img src="http://i62.tinypic.com/2myu5wp.jpg" style="width: 672px;"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Four: Userlookup Navigation Part II</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 180px;">
#userlookup-nav a {
	background: #f7bac1;
	border: 1px solid #f96375;
	color: #9b296b;

	line-height: 30px;
	font-weight: normal;
}</textarea>

Control how the navigation buttons look. The colours used here have been colour picked from the background image to ensure that the buttons match.<br><br>
Setting <b>line-height</b> to the same height as the button vertically centers the text. This doesn't work if the text goes over two lines (although you could set the line-height to be half the button height for a similar effect), but as we have only one line here it works perfectly.<br class="clear"><textarea class="code-float" style="height: 120px;">
#userlookup-nav a:hover {
	background: #faeab9;
	border-color: #fbd057;
	color: #b7a349;
}</textarea>

Change the colours of the button on hover. I've chosen pink as my normal links and yellow as my hover, to echo the pink sky and yellow tent.

<br class="clear"></div></div>
<div class="blurb"><div class="main"><div class="center"><br><br><img src="http://i60.tinypic.com/2zprqj4.jpg"><br><br><i>Shown hovering over the <b>Stats</b> button to turn it yellow</i><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Five: Neopets Navigation</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 240px;">
#neopets-nav {
	position: absolute;
	top: 195px;
	left: 490px;
	width: 720px;
}
#neopets-nav a {
	display: inline-block;
	height: 40px;
	width: 75px;
}</textarea>
Setting up the <b class="purple">Neopets navigation</b> is very similar to the <b class="green">userlookup navigation</b>, except that we want to produce invisible boxes that sit over the words on our background image. We do this by giving each link a height and a width, but not writing anything between the link tags in the HTML section of the code.
<br class="clear"><textarea class="code-float" style="height: 260px;"><div id="neopets-nav">
	<a href="/myaccount.phtml"></a>
	<a href="/customise/"></a>
	<a href="/games/"></a>
	<a href="/explore.phtml"></a>
	<a href="/nf.phtml"></a>
	<a href="/community/"></a>
	<a href="/objects.phtml"></a>
	<a href="/mall/"></a>
	<a href="http://nc.neopets.com/membership/"></a>
</div></textarea><b>Put this part outside your style tags</b><br><div class="fact"><div class="center"><b></b>.phtml and /</div>
Some of the Neopets pages end in <b>.phtml</b> and some don't. The difference has to do with the file structure on the Neopets server - <b>/games/</b> is the name of a folder, while <b>/myaccount.phtml</b> is the name of a file. Since a folder can't actually display as a webpage, when you go to <b>/games/</b> you actually see a page called <b>/games/index.phtml</b>. Leaving off the last part is a shorthand.</div>
</div></div>
<div class="blurb"><div class="main"><br><br>Nothing to see on the progress update! The Neopets navigation is invisible - hover over each link and check that it'll take you where expect to go.<br><br></div></div>

<div class="heading"><div class="main">
  Step Six: Content Modules</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">
.contentModule {
	height: 320px !important;
	margin-bottom: 1000px;
}</textarea>

Set the height of all <b class="yellow">content modules</b>. The <b>!important</b> keyword overrides heights set for each table individually. You can choose an arbitrarily large number for the margin bottom. It controls how much space there is between content modules; since <b class="sky">content div</b> doesn't scroll, the amount of space doesn't really affect anything.<br class="clear"><br><textarea class="code-float" style="height: 80px;">
#userinfo, #usercollections {
	width: 340px;
}</textarea>

User Info and User Collections share the same section, so they are set to be half the width of the content area. 340 is actually slightly over, but because the right side of the collections module has nothing on it the over hang doesn't matter.<br class="clear"><br><textarea class="code-float" style="height: 100px;">
#userneopets, #usertrophies, #about {
	width: 650px;
	overflow: auto;
}</textarea>

These divs are set to the full width. The overflow allows them to scroll if there's more content than will fit on one screen - vertically for the trophies or about section, horizontally if you have five pets (four will fit without needing to scroll).<br class="clear"><textarea class="code-float" style="height: 100px;">
#usertrophies img {
	width: 50px;
	height: 50px;
}</textarea>

This shrinks the user trophies slightly, so that the trophies section does not scroll horizontally.<br class="clear"><textarea class="code-float" style="height: 120px;">
.contentModule, .contentModuleTable, .contentModuleContent {
	border: none !important;
	background: none;
}</textarea>

Remove backgrounds and borders from all content module sections.

<br class="clear"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center">
    <img src="http://i57.tinypic.com/22aybt.jpg"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Seven: Finishing Touches</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 80px;">
body {
	background: #d8c487;
}</textarea>

Change the colour of the background. I've used a flat colour, but you could easily use an image background - but I wouldn't recommend one that's too busy, or it will conflict with the main layout image.<br class="clear"><textarea class="code-float" style="height: 140px;">
#main a, a b, #main a:visited {
	color: #9b296b;
}
#main a:hover, a:hover b {
	color: #b7a349;
}</textarea>

Change the colour of the links on the page.<br><div class="fact">
These colours will also affect the <b>userlookup navigation</b>, so you can remove the colour commands from that block of code.</div>
<br class="clear"><textarea class="code-float" style="height: 100px;">
#userneopets img {
	margin-bottom: 20px;
	margin-top: 40px;
}</textarea>

Space out the pet images so they are more vertically centered.
<br class="clear"><textarea class="code-float" style="height: 80px;">
#usertrophies .medText b {
	font-weight: normal;
}</textarea>

Change the captions of the trophies to not be bold anymore.
<br class="clear"><textarea class="code-float" style="height: 120px;">
.contentModule img {
	padding: 3px;
	background: #fff;
	border: 1px solid #000;
}</textarea>

Increase the white space around each image and add a black border. This really helps when the images are against a non-white background. Don't be tempted to increase the padding unless you also decrease the size of the trophy images - you'll make the trophy section scroll horizontally.<br class="clear"><textarea class="code-float" style="height: 80px;"><div id="about" class="contentModule">
Write about yourself here!
</div></textarea><b>Put this part outside your style tags</b><br><br>

We use the <b>.contentModule</b> class to make the about me section behave the same way as the other content module sections.

</div></div>
<div class="blurb"><div class="main"><br><br><div class="center">
    <img src="http://i59.tinypic.com/2sbq25w.jpg"><br><br><br></div>


</div></div>

<div class="heading"><div class="main">
  Finished</div></div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;">(style)
#ban, #footer, #header, hr, #habitarium, #ncmall, #userneohome, #usershop, .contentModuleHeaderAlt, .contentModuleHeader, .content div a img, .content div b, .content br {
	display: none;
}
.contentModule div a img, .contentModule div b, #about b, #about a img, .contentModule br, #about br {
	display: inline;
}
#userinfo table table table {
	border: 0 !important;
}

body {
	background: #d8c487;
}

#main {
	background: url("http://i60.tinypic.com/2pyoq9v.jpg") no-repeat;
	width: 1200px;
	height: 660px;
	margin: 8px;
	border: 0;
}
#content {
	float: left;
	margin: 245px 0 0 500px;
	width: 660px;
	height: 325px;
	overflow: hidden;
}

#userlookup-nav {
	position: absolute;
	top: 580px;
	left: 510px;
	width: 660px;
	text-align: center;
}
#userlookup-nav a {
	display: inline-block;
	height: 30px;
	width: 80px;
	margin: 3px;

	background: #f7bac1;
	border: 1px solid #f96375;
	color: #9b296b;

	line-height: 30px;
	font-weight: normal;
}
#userlookup-nav a:hover {
	background: #faeab9;
	border-color: #fbd057;
	color: #b7a349;
}

#neopets-nav {
	position: absolute;
	top: 195px;
	left: 490px;
	width: 720px;
}
#neopets-nav a {
	display: inline-block;
	height: 40px;
	width: 75px;
}

.contentModule {
	height: 320px !important;
	margin-bottom: 1000px;
}
#userinfo, #usercollections {
	width: 340px;
}
#userneopets, #usertrophies, #about {
	width: 650px;
	overflow: auto;
}
#usertrophies img {
	width: 50px;
	height: 50px;
}

.contentModule, .contentModuleTable, .contentModuleContent {
	border: none !important;
	background: none;
}

#main a, a b, #main a:visited {
	color: #9b296b;
}
#main a:hover, a:hover b {
	color: #b7a349;
}

#userneopets img {
	margin-bottom: 20px;
	margin-top: 40px;
}
#usertrophies b {
	font-weight: normal;
}
.contentModule img {
	padding: 3px;
	background: #fff;
	border: 1px solid #000;
}
(/style)

<div id="userlookup-nav">
	<a href="#about">About Me</a>
	<a href="#userinfo">Stats</a>
	<a href="#userneopets">Pets</a>
	<a href="//www.neopets.com/browseshop.phtml?owner=aethelar">Shop</a>
        <a href="//www.neopets.com/gallery/?gu=aethelar">Gallery</a>
	<a href="//www.neopets.com/neohome/property/show/9442633">Neohome</a>
	<a href="#usertrophies">Trophies</a>
</div>

<div id="neopets-nav">
	<a href="/myaccount.phtml"></a>
	<a href="/customise/"></a>
	<a href="/games/"></a>
	<a href="/explore.phtml"></a>
	<a href="/nf.phtml"></a>
	<a href="/community/"></a>
	<a href="/objects.phtml"></a>
	<a href="/mall/"></a>
	<a href="http://nc.neopets.com/membership/"></a>
</div>

<div id="about" class="contentModule">
Write about yourself here!
</div></textarea><br><br>NB - The petpage filters are slightly different to the userlookup filters. In order to post this code, I've had to replace the angled brackets around the <b>style</b> tags with round ones - be sure to change them back in your own code.<br><br></div>
</div></div>

  
</div>


<div class="page" id="ul-tiled">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#userlookup">userlookups</a> »
    <a href="#ul-tiled">tiled userlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>I'm using 'tiles' here to refer to each rectangular section of the userlookup rather than to a repeating image or background. 

The beauty of a tiled userlookup is that once you've got the hang of how it's put together, you can arrange your tiles in any pattern you like! Perfect for someone with a lot of links or sections to display, as they can easily be incorporated into the rest of the layout.<br><br><div class="center"><img src="http://i.imgur.com/KPp6YCl.png"></div><br></div></div>
  
  
<div class="heading"><div class="main">
  Userlookup Structure</div></div>

<div class="tutorial"><div class="main">
<div class="fact" style="float: right;">
<b>Absolute positioning</b> is the most common form of positioning. It allows you to put an element exactly where you want it by specifying the coordinates of its top left corner. Absolute positioning also stops elements interacting with each other or trying to go around each other - you can pile divs on top of divs without a problem.<br><br><b>Relative positioning</b> on the other hand moves an element compared to where it would naturally be - it's a bit like applying a margin to push something over a bit.</div>

There's actually very little structure to this userlookup; every tile is <b class="red">absolutely positioned</b> to put it in the right place. The only bit of structure comes from the fact the main div, which all of the tiles are inside, is set to <b class="blue">position: relative</b>. This means that the <b class="red">absolute positioning</b> of the tiles will position them inside the main div; a position of <b>top: 0; left: 0</b> will put a tile in the top left corner of the main div, not the top left corner of the screen.<br class="clear"><br><div class="center">
<img src="http://i.imgur.com/Wa52rDV.png"><br><br><i>Outside the blue div, absolute positioning moves the red div to the top left corner of the screen (shown in black). Inside the relatively positioned blue div, absolute positioning moves the red div to the top left corner of the blue div instead.</i>
</div>
<br><br>

Given that everything is absolutely positioned, the key thing to this sort of layout is getting the dimensions right. If your tiles are the wrong size, then things won't fit together properly or you won't have even spacing between them; if you haven't planned the sizes out before you start coding, you could find yourself doing a lot of tweaking until things line up.<br><br>

There's no template to use - each tile is made by pure css, no graphics - but I've listed the dimensions of my layout below so that you can see where the positioning numbers come from later on.<br><br><div class="center"><img src="http://i.imgur.com/T9OxyA2.png"><br><br><br></div>
<br><br>

The three small buttons can be anything you want! I've chosen Shop, Gallery and Neohome for mine. There's <b>10 px</b> of space between every tile and the next; remember to take that into account when calculating position coordinates.<br><br></div></div>

<div class="heading"><div class="main">
  Step One: Removing Things</div></div>

<div class="tutorial"><div class="main">
<div class="center">
<textarea class="code" style="height: 120px;">
#ban, #header, #footer, hr, #habitarium, #ncmall, #userneohome, #usershop, .contentModuleHeaderAlt, .contentModuleHeader, .content a img, .content b {
  display: none;
}</textarea></div>

<br><b>#ban, #header</b><br>
This removes the header from the userlookup, including the Neopets navigation, time, user information, event notifications, and any adverts that would usually display in the header. We'll be creating our own Neopets navigation to replace it later on.<br><div class="fact" style="float: right;">You may notice that we're not removing any adverts here, unlike in some other layouts. This is because all the adverts are in the header and the footer; by removing those two, we've already dealt with the ads.</div>

<b>#footer</b><br>
This removes the footer from the userlookup<br><br><b>hr</b><br>
This removes the thin grey divider between sections of the user trophies<br><br><b>#habitarium, #ncmall, #userneohome, #usershop</b><br>
These remove sections of the userlookup we don't want to display. We'll be creating our own links to the neohome, shop and gallery instead.<br><br><b>.contentModuleHeaderAlt, .contentModuleHeader</b><br>
These remove the headers of each section to make the userlookup look tidier.<br><br><b>.content a img, .content b</b><br>
This hides the bolded text that reads <b>User Lookup: aethelar <img src="//images.neopets.com/help/question_mark.png"></b>

<br><br><div class="center">
<textarea class="code" style="height: 80px;">
.contentModule b, .contentModule a img {
	display: inline;
}</textarea></div>
<br>

In the previous block of code, we had to hide all linked images and bold text. Here, we make all of these elements visible again in the content modules - we'll have to remember to mark the <b class="green">about me section</b> as a content module when we create it so that the bold text and linked images will also display in that.

<br><br><div class="center">
<textarea class="code" style="height: 100px;">
table, #main, .contentModule, .contentModuleContent {
	border: 0 !important;
	background: none;
}</textarea></div>
<br>

Remove borders and backgrounds from everything, giving us a completely blank userlookup to play with.

</div></div>

<div class="heading"><div class="main">
  Step Two: Positioning the Content Modules</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 140px;">#main {
	position: relative;
	margin: 20px;
	height: 640px;
	width: 2020px;
}</textarea>

Set the <b>main div</b> to relative positioning so that the content modules are positioned with respect to it's top left corner. The height and width are applied to make sure that the margin extends around all edges of the content; if we left those off, the page would scroll until the lower and right edges were <i>just</i> included but not give any extra space.<br class="clear"><textarea class="code-float" style="height: 120px;">
#userinfo, #usercollections, #userneopets, #usertrophies {
	position: absolute;
	background: #fff;
}</textarea>
Set all content modules to have absolute positioning. The white background is temporary, so that we can see where we're placing them - we'll make it look better later on.<br class="clear"><textarea class="code-float" style="height: 520px;">
#userinfo {
	top: 0;
	left: 0;
	height: 320px !important;
	width: 355px;
}
#usercollections {
	top: 0;
	left: 780px;
	height: 320px !important;
	width: 300px;
}
#userneopets {
	top: 400px;
	left: 210px;
	height: 220px !important;
	width: 870px;
}
#usertrophies {
	top: 0;
	left: 1090px;
	height: 620px !important;
	width: 900px;
	overflow: auto;
}
</textarea>
Give each content module height, width and position coordinates. The <b>!important</b> keyword is used on every height as Neopets likes to set the height inline; we need to set <b>!important</b> to override this.<br><div class="fact"><div class="center"><b>Inline Styles</b></div>
Inline styles are written in the HTML rather than in a separate CSS block. For example:<br><br><div class="center">
«div style="height: 80px; width: 80px;"» «/div»
</div>

<br>Inline styles can do anything you like to that particular element, but you can't use multiple selectors - such as <b>div a</b> to select links inside the div - or target states, such as <b>a:hover</b> to change how a link looks on hover.

<br><br>They are useful for making very minor changes specific to a particular element; I change the height of all the textareas in this tutorial by inline styles. I could create many different classes for <i>textarea-short</i>, <i>textarea-a-bit-less-short</i> etc, but it would be a messier solution.<br><br>

What you shouldn't do is use inline styles for basic layout building - much neater and easier to edit if the main styles are grouped together between style tags.</div>
</div></div>
<div class="blurb"><div class="main"> <br><br><div class="center">
    <img src="http://i.imgur.com/SjvGL14.png"><br><br><br></div>

</div></div>
<div class="heading"><div class="main">
  Step Three: Adding Other Tiles</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">.link, #navigation, #about {
	position: absolute;
	background: #fff;
}</textarea>
Set the new sections to be absolutely positioned with a white background as before. To be neat, you could add the new selectors onto the previous block of code.<br class="clear"><textarea class="code-float" style="height: 280px;">#navigation {
	top: 330px;
	left: 0;
	height: 290px;
	width: 200px;
}
#about {
	top: 0;
	left: 365px;
	height: 390px;
	width: 405px;
	overflow: auto;
}</textarea>

Position the navigation tile and the about me tile.<br><div class="fact">If you have a lot of links to display, then you could split off the top section of the about me tile into a set of three or four smaller link tiles. Unfortunately 405px doesn't exactly divide into three tiles, but you could use something like wide - narrow - wide with widths of 145 - 95 - 145.</div>
<br class="clear"><textarea class="code-float" style="height: 120px;">.link {
	top: 330px;
	height: 60px;
	width: 145px;
}</textarea>

Since the three link tiles are all the same size, create a class to apply styles on them as a group. They're all at the same vertical position in the layout as well, so we can set that here to save time - although technically it isn't good coding practice to put positioning on a class like this.<br class="clear"><textarea class="code-float" style="height: 200px;">#home {
	left: 210px;
}
#shop {
	left: 780px;
}
#gallery {
	left: 935px;
}</textarea>

Set the position of each individual link tile.<br class="clear"><textarea class="code-float" style="height: 280px;"><div id="navigation">
<a href="/myaccount.phtml">My Account</a>
<a href="/customise/">Customise</a>
<a href="/games/">Games</a>
<a href="/explore.phtml">Explore</a>
<a href="/nf.phtml">News</a>
<a href="/community/">Community</a>
<a href="/objects.phtml">Shops</a>
<a href="/mall/">NC Mall</a>
<a href="http://nc.neopets.com/membership/">Premium</a>
</div></textarea><b>Put this part outside your style tags</b><br><br>Set up the navigation and the links. We'll style them later; for now they'll just be text links.<br><div class="fact">I've not put any new lines (<b>br</b>) between each link, despite the fact that I want them to appear on separate lines. I'll achieve this by setting them to <b>display: block</b> later, so I don't need to worry about it now.</div>
<br class="clear"><textarea class="code-float" style="height: 140px;"><a href="/neohome/property/show/9442633" id="home" class="link">Neohome</a>
<a href="/browseshop.phtml?owner=aethelar" id="shop" class="link">Shop</a>
<a href="/gallery/index.phtml?gu=aethelar" id="gallery" class="link">Gallery</a></textarea>

Add the link tiles. Remember to change my username and neohome number for yours! We've used <b>link elements (a)</b> here and added width, height and position to them directly - we could use a div with a link inside, but this is neater and saves characters.<br class="clear"><textarea class="code-float" style="height: 80px;"><div id="about" class="contentModule">
</div></textarea>

Lastly, add the <b class="green">about me</b> tile. Remember to give it the <b>contentModule class</b> so that the bold text and linked images inside it will show up.
</div></div>
<div class="blurb"><div class="main"> <br><br><div class="center">
    <img src="http://i.imgur.com/JTk7CFM.png"><br><br><br></div>

</div></div>
<div class="heading"><div class="main">
  Step Four: Backgrounds and Colours</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">body {
	background: #32283d url("http://i.imgur.com/OS62Ebr.png");
}</textarea>

Set a full body background. The one I'm using is from <a href="/~Cecira">TKM Backgrounds</a>. If you chose to use a different one, make sure the pattern isn't too busy; that'll make the text difficult to read.<br class="clear"><textarea class="code-float" style="height: 150px;">#userinfo, #usercollections, #userneopets, #usertrophies, .link, #navigation, #about {
	position: absolute;
	background: url("http://i.imgur.com/g1L3AkA.png");
}</textarea>

Go back to where you set a white background on all the tiles and update it to a semi-transparent one. Again, I got this 30% opacity white background from <a href="/~Cecira">TKM Backgrounds</a>.<br><div class="fact">You used to be able to set opacity in the code, but Neopets filters that out nowadays. Using a semi-transparent png is a good alternative.</div>
<br class="clear"><textarea class="code-float" style="height: 280px;">#main {
	color: #fff;
}
#main a {
	color: #fff;
	font-weight: normal;
}
#main a:hover {
	color: #b9a4f4;
}
#main b {
	font-weight: normal;
}</textarea>

Set the colours of the text and links, and remove the bold effect (<b>font-weight: normal</b> changes bold text to normal text). I've colour picked the link hover from the background; it's a light purple colour.<br><div class="fact"><div class="center"><b>Colour Shorthand</b></div>If you're using a colour code with some repetition, you can shorten it by missing out the second repeated character. Here I've shortened <b>ffffff</b> to <b>fff</b>. Not all codes will shorten; only those that can go down to 3 characters will work.</div>
<br><br class="clear"></div></div>
<div class="blurb"><div class="main"> <br><br><div class="center">
    <img src="http://i.imgur.com/WVCM1Eh.png"><br><br><br></div>

</div></div>
<div class="heading"><div class="main">
  Step Five: Styling Links</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">.link {
	line-height: 60px;
	font-size: 13pt;
}</textarea>

Make the font of the link buttons large and centered, both horizontally and vertically, in the tile.<br class="clear"><textarea class="code-float" style="height: 180px;">#navigation a {
	display: block;
	width: 100%;
	height: 32px;
	line-height: 32px;
	text-align: center;
	font-size: 12pt;
}</textarea>

Style the navigation links. <b>width: 100%;</b> sets each link to be the full width of the containing div; if you resized the navigation tile, the links would also resize.<br><div class="fact">You can use either <b>pt</b> or <b>px</b> for font size. The difference is in the units; 1px is one pixel on your screen, while 1pt is slightly larger at 1/72th inch, and originally used in typesetting for printed works.</div>
<textarea class="code-float" style="height: 80px;">.link:hover, #navigation a:hover {
	background: #644283;
}</textarea>
Set the background on hover, colour picked from the starry sky page background. Note that because <b>.link</b> is a link element, we apply the <b>:hover</b> directly to the <b>.link</b> class.

  
</div></div>
<div class="blurb"><div class="main"> <br><br><div class="center">
    <img src="http://i.imgur.com/1nLSQu8.png"><br><br><i>Shown hovering over the <b>Gallery</b> tile</i><br><br></div>

</div></div>
<div class="heading"><div class="main">
  Step Six: Finishing Touches</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">#usercollections .medText {
	width: 150px;
}</textarea>
Set each column of icons in the user collections to be equal width.<br class="clear"><textarea class="code-float" style="height: 120px;">.contentModule img {
	background: #fff;
	border: 1px solid #000;
	padding: 4px;
}</textarea>
Add some white space and a black border around images, to make them look better against the non-white background.<br><div class="fact">You could change the shield and icon images to ones with a transparent background using <a href="#ul-custom-shield">this guide</a>.</div>
<textarea class="code-float" style="height: 140px;">#userneopets img {
	background: none;
	padding: 0;
	border-radius: 75px;
	margin-bottom: 5px;
}</textarea>
Remove the white space around the neopet images and make them circular instead of square.<br><div class="fact">Make sure you put this code <i>after</i> the previous block, or the <b>.contentModule img</b> commands will override these ones.</div>
<textarea class="code-float" style="height: 80px;">.padding {
	margin: 10px;
}</textarea>Give the <b>about me</b> tile some padding, and add the <b>.padding</b> div outside the style tags.<br><br class="clear"><textarea class="code-float" style="height: 120px;"><div id="about" class="contentModule">
<div class="padding">
	Write about yourself here!
</div>
</div></textarea><div class="fact" style="margin-top: -40px;">Different browsers render padding differently, which is why we're using a second div with a margin applied instead of padding itself.<br><br>

If you specify a div with a width of <b>100px</b> and give it <b>10px padding</b>, then on some browsers it will give you a div that is <i>100px wide with only 80px of usable space inside it</i>, while others will give you a div that is <i>120px wide with the full 100px of usable space inside it</i>.</div>
</div></div>
<div class="blurb"><div class="main"><br><br><div class="center">
    <img src="http://i.imgur.com/0ABnWCV.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Finished</div></div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;">(style)
#ban, #header, #footer, #habitarium, #ncmall, hr, #userneohome, #usershop, .contentModuleHeaderAlt, .contentModuleHeader, .content a img, .content b {
	display: none;
}
.contentModule b, .contentModule a img {
	display: inline;
}
table, #main, .contentModule, .contentModuleContent {
	border: 0 !important;
	background: none;
}

body {
	background: #32283d url("http://i.imgur.com/OS62Ebr.png");
}

#main {
	position: relative;
	margin: 20px;
	height: 640px;
	width: 2020px;
}
#userinfo, #usercollections, #userneopets, #usertrophies, .link, #navigation, #about {
	position: absolute;
	background: url("http://i.imgur.com/g1L3AkA.png");
}

#userinfo {
	top: 0;
	left: 0;
	height: 320px !important;
	width: 355px;
}
#usercollections {
	top: 0;
	left: 780px;
	height: 320px !important;
	width: 300px;
}
#usercollections .medText {
	width: 150px;
}
#userneopets {
	top: 400px;
	left: 210px;
	height: 220px !important;
	width: 870px;
}
#usertrophies {
	top: 0;
	left: 1090px;
	height: 620px !important;
	width: 900px;
	overflow: auto;
}

#navigation {
	top: 330px;
	left: 0;
	height: 290px;
	width: 200px;
}
#navigation a {
	display: block;
	width: 100%;
	height: 32px;

	line-height: 32px;
	text-align: center;
	font-size: 12pt;
}
.link {
	top: 330px;
	height: 60px;
	width: 145px;

	line-height: 60px;
	text-align: center;
	font-size: 13pt;
}
.link:hover, #navigation a:hover {
	background: #644283;
}

#home {
	left: 210px;
}
#shop {
	left: 780px;
}
#gallery {
	left: 935px;
}
#about {
	top: 0;
	left: 365px;
	height: 390px;
	width: 405px;
	overflow: auto;
}
.padding {
	margin: 10px;
}

#main {
	color: #fff;
}
#main a {
	color: #fff;
	font-weight: normal;
}
#main a:hover {
	color: #b9a4f4;
}
#main b {
	font-weight: normal;
}

.contentModule img {
	background: #fff;
	border: 1px solid #000;
	padding: 4px;
}
#userneopets img {
	background: none;
	padding: 0;
	border-radius: 75px;
	margin-bottom: 5px;
}
(/style)

<div id="navigation">
	<a href="/myaccount.phtml">My Account</a>
	<a href="/customise/">Customise</a>
	<a href="/games/">Games</a>
	<a href="/explore.phtml">Explore</a>
	<a href="/nf.phtml">News</a>
	<a href="/community/">Community</a>
	<a href="/objects.phtml">Shops</a>
	<a href="/mall/">NC Mall</a>
	<a href="http://nc.neopets.com/membership/">Premium</a>
</div>

<a href="/neohome/property/show/9442633" id="home" class="link">Neohome</a>
<a href="/browseshop.phtml?owner=aethelar" id="shop" class="link">Shop</a>
<a href="/gallery/index.phtml?gu=aethelar" id="gallery" class="link">Gallery</a>

<div id="about" class="contentModule">
</div>

<div class="tutorial"><div class="main">

	Write about yourself here!
</div>
</div></textarea><br><br>NB - The petpage filters are slightly different to the userlookup filters. In order to post this code, I've had to replace the angled brackets around the <b>style</b> tags with round ones - be sure to change them back in your own code.
</div>

</div></div>
</div>

<div class="page" id="ul-ampfull">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#userlookup">userlookups</a> »
    <a href="#ul-ampfull">all my pets full userlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>This userlookup allows you to show side account pets seamlessly alongside the pets already on that account, with the stats (for the pets actually on that account) or the name (for the side account pets) shown when you hover over the image. The hover effect, and incorporating the side account pets seamlessly in with the main account pets, is a tad tricky; try the lite version of this layout if you want something simpler.<br><br><div class="center"><img src="http://i.imgur.com/8Vo7Yja.png"></div><br></div></div>
  
  
<div class="heading"><div class="main">
  Userlookup Structure</div></div>

<div class="tutorial"><div class="main">
<img src="http://i.imgur.com/PUilooj.png" style="float: right; margin: 0 0 0 10px; width: 400px;">

There are five parts to this userlookup:

<ul><li>The <b class="red">body</b>
</li>
<li>The <b class="green">#userneopets section</b>
</li>
<li>The <b class="blue">other pets</b>
</li>
<li>The <b class="purple">navigation</b>
</li>
<li>The <b class="yellow">other content modules</b>
</li>
</ul>

The <b>main and content divs</b> are there, but not visible. They do provide the underlying structure for the <b class="yellow">other content modules</b>, which are in their natural positions - all we've done is shift them over a bit to account for the modules we've taken out.<br><br>

One thing we have done is set the <b>main div</b> to be relatively positioned, so that the whole layout can still be centered even though we're using absolute positioning for the <b class="green">userneopets section</b> and <b>other pets div</b>. For an explanation of how this works, head up to the structure section of the <a href="#ul-tiled">Tiled Userlookup tutorial</a>.<br><br>

Where the structure gets more complicated is for the pets. What looks like one line of pets there is actually two sections; the <b class="green">userneopets content module</b> and a new section we create, the <b class="blue">other pets div</b>. Rather than sit side by side, these two overlap each other so that the 'fade' affect of the hover can work, where the pet image looks partially see through when you hover over it.<br><br>

Here's how the layers of divs work (read from the bottom to the top):<br><br><div class="center">
<img src="http://i.imgur.com/g67Jobf.png"><br><br><i>The div structure of the <b class="green">#userneopets</b> and <b class="blue">pets</b> divs. The uni, kyrii and lutari are pets on the this account; the kougra and aisha are side account pets.</i>
</div>

<br>Still with me? Good.<br><br><b>Why so many layers of divs?</b><br>
Because you can't specify opacity in the code, so we need to use graphics - our semi-transparent white div - to do it for us. If we copied a picture of the pets and lowered the opacity of those, we'd have to change the images every time we changed that pets' customisation - this way avoids that. However, you <i>will</i> need to update the code every time you add or remove a pet from the account this userlookup is on, or the pictures in the <b class="blue">pets div</b> won't match those in the <b class="green">userneopets content module</b>.<br><br><b>Why have the pets on this account show in both the pets div and the userneopets content module?</b><br>
Because we can't touch the code inside the content module. In an ideal world, we'd be able to get in and add our white div there without needing the second copy of the pet image. Because we can't do that, we put the white div underneath, and a second copy of the pet image underneath that.<br><br></div></div>

<div class="heading"><div class="main">
  Step One: Removing Things</div></div>

<div class="tutorial"><div class="main">
<div class="center">
<textarea class="code" style="height: 120px;">
#ban, #header, #footer, hr, #habitarium, #ncmall, #userneohome, #userneopets .contentModuleHeaderAlt, .content a img, .content b {
  display: none;
}</textarea></div>


<br><b>#ban, #header</b><br>
This removes the header from the userlookup, including the Neopets navigation, time, user information, event notifications, and any adverts that would usually display in the header. We'll be creating our own Neopets navigation to replace it later on.

<br><div class="fact" style="float: right;"><div class="center"><b>Display or Visibility?</b></div>We can use both <b>display: none;</b> and <b>visibility: hidden</b> to hide sections of the userlookup, but they each have a slightly different effect. Using <b>display: none;</b> removes the element completely - it's as though it was never there to begin with. On the other hand, <b>visibility: hidden;</b> leaves everything in place, just turns it invisible and leaves a big space where it used to be.</div>

<b>#footer</b><br>
This removes the footer from the userlookup<br><br><b>hr</b><br>
This removes the thin grey divider between sections of the user trophies<br><br><b>#habitarium, #ncmall, #userneohome, </b><br>
These remove sections of the userlookup we don't want to display.<br><br><b>#userneopets .contentModuleHeaderAlt</b><br>
This removes the header from the <b class="green">#userneopets</b> module, but leaves headers for the other modules in place.<br><br><b>.content a img, .content b</b><br>
This hides the bolded text that reads <b>User Lookup: aethelar <img src="//images.neopets.com/help/question_mark.png"></b>

<br><br><div class="center">
<textarea class="code" style="height: 80px;">
.contentModule b, .contentModule a img, #pets b, #pets a img {
	display: inline;
}</textarea></div>
<br>

In the previous block of code, we had to hide all linked images and bold text. Here, we make all of these elements visible again in the content modules and in the <b class="blue">pets div</b> that will hold our side account pets.

<br><br><div class="center">
<textarea class="code" style="height: 100px;">
table, #main, .contentModule, .contentModuleContent {
	border: 0 !important;
	background: none;
}</textarea></div>
<br>

Remove borders and backgrounds from everything, giving us a completely blank userlookup to play with.

</div></div>

<div class="heading"><div class="main">
  Step Two: Basic Positioning</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 120px;">#main {
	width: 1000px;
	margin: 10px auto;
	position: relative;
}</textarea>
Position and center the <b>main div</b>. <br><div class="fact">Using <b>margin: auto;</b> for the horizontal margins is a neat way of centering something. It only works for something with a defined width; otherwise, the computer can't calculate how big <b>auto</b> should be.</div>

<textarea class="code-float" style="height: 140px;">#userneopets, #pets {
	position: absolute;
	top: 4px;
	left: 18px;
	height: 150px;
}</textarea>

Bring the <b class="green">userneopets section</b> up to the top. Because the <b class="blue">pets div</b> overlaps it, we add it to the same block of code so that it's positioned in the same place.<br class="clear"><textarea class="code-float" style="height: 120px;">#navigation {
	height: 40px;
	width: 1000px;
	margin: 150px 0 0 -8px;
}</textarea>

Position the <b class="navigation">navigation div</b>. Because this is not absolutely positioned, the margin-top we've applied here will also push down the other content modules below this. 150px gives us space for one row of pets; if you have two rows, increase this to 300px or even 310 or 320px if you'd rather.<br class="clear"><textarea class="code-float" style="height: 340px;"><div id="navigation">
<a href="/myaccount.phtml">my account</a>
<a href="/customise/">customise</a>
<a href="/games/">games</a>
<a href="/explore.phtml">explore</a>
<a href="/nf.phtml">news</a>
<a href="/community/">community</a>
<a href="/objects.phtml">shops</a>
<a href="/mall/">nc mall</a>
<a href="http://nc.neopets.com/membership/">premium</a>
</div>

<div id="pets">
</div></textarea><b>Put this part outside your style tags</b><br><br>

Add in the navigation elements and the (currently empty) div for the pets. The navigation links will, at the moment, overlap the userneopets section; we'll move the pet stats up underneath the images later on, so that isn't an issue.
<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center"><img src="http://i.imgur.com/ByMTPKT.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Three: The #userneopets Section</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 230px;">#userneopets a {
	position: absolute;
	display: block;
	height: 150px;
	width: 90px;
	overflow: hidden;
}
#userneopets img {
	margin-left: -25px;
	border: 0;
	background: #fff;
}</textarea>

The main purpose of this block is to clip the pet images to be <b>90px wide</b>. The top block restricts the width of the link and makes sure that any part of the image larger than this size won't be visible (that's the <b>overflow: hidden</b> part), while the second block, <b>#userneopets img</b>, shifts the images left a bit so that they're centered in the thinner space.<br><br>

The <b>position: absolute</b> in the top block is what makes the link (and therefore the pet image) sit on top of the stats and cover them. With this, the stats will move up by themselves to sit underneath the image; you should find your <b class="purple">navigation links</b> are no longer overlapping anything.<br><br>

The white background on the <b>#userneopets img</b> is not usually visible - it only shows on pets who are wearing no background of their own.<br><br class="clear"><textarea class="code-float" style="height: 80px;">#userneopets a:hover img {
	visibility: hidden;
}</textarea>

Hide the images on hover so that the pet info section is visible.<br class="clear"><textarea class="code-float" style="height: 100px;">#userneopets .medText {
	margin: 0;
	padding: 0;
}</textarea>
Remove the extra space around each pet.<br><div class="fact">Two words joined together with the second word capitalised (med text = medText) is called "Camel Case" and is a common way of putting multiple words into one selector. Personally, I prefer dashes (med text = med-text) for css, but you can use either.</div>

<textarea class="code-float" style="height: 120px;">#userneopets .medText td.medText {
	width: 90px !important;
	float: left;
	margin-right: 8px;
}</textarea>
Restrict the pet info section to be <b>90px wide</b> so that it is completely covered by the pet image. The <b>float: left;</b> makes the table cells (td.medText) behave like divs, so that Internet Explorer can't decide to apply it's own unique table style and mess up our layout.<br class="clear"><textarea class="code-float" style="height: 100px;">#userneopets b {
	font-weight: normal;
	display: block;
}</textarea>
Change all the bold font to normal, and make each bold word sit on a new line. This is purely aesthetic; it helps the stats to fill the space better rather than be bunched up at the top.
<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center">
<img src="http://i.imgur.com/GeQDfrr.png"><br><br><i>Shown hovering over the the central pet</i><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Four: The Other Pets Div</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 340px;">#pets a {
	display: inline-block;
	position: relative;

	height: 150px;
	width: 90px;
	overflow: hidden;

	margin: 0 4px 5px 0;

	font-weight: normal;
	font-size: 8pt;
	color: #000;
	text-align: center;
	line-height: 40px;
}</textarea>
There's quite a lot going on here, so let's take it bit by bit.<br><br><b>display: inline-block</b> turns a link element (usually text) into an element with width and height that we can use like a div. Technically we should use a div instead, but this saves characters. The <b>inline</b> part makes the pets sit side by side instead of in a column.<br><br><b>position: relative</b> allows us to absolutely position the semi-transparent white div inside each link.<br><br>

The other blocks make the pets look the same as those in the <b class="green">userneopets section</b>; the height, width and overflow clip the pet images to <b>90px wide</b> while the margin controls spacing between each image and the last three style how the font appears. The <b>line-height</b> is used to push the pet's name down so that it lines up with the pet info text of the userneopets section.<br><br class="clear"><textarea class="code-float" style="height: 120px;">#pets img {
	margin-left: -25px;
	border: 0;
	background: #fff;
}</textarea>
Center the pet images, exactly as above. In fact, you could add the <b class="blue">#pets img</b> code to the <b class="green">#userneopets img</b> code to save space.<br class="clear"><textarea class="code-float" style="height: 240px;">.white {
	display: none;

	position: absolute;
	top: 0;
	height: 100%;
	width: 100%;

	background: url("http://i.imgur.com/rwIj7cm.png");
}</textarea>
The <b>white div</b> is where we overlay our pet images with a semi transparent white image when we hover over them. I'm using a 70% white opacity background from <a href="/~Cecira">TKM Backgrounds</a>.<br><br>

The <b>display: none</b> hides our white div until we need it on hover, and the <b>position and size</b> block makes the white div cover the entirety of the pet image.<br class="clear"><textarea class="code-float" style="height: 80px;">a:hover .white, a.this-account .white {
	display: block;
}</textarea>
Show the white div when we hover over a pet, or, for the pets which are on this account (and therefore shown in the <b class="green">userneopets section</b>), always show the white div. We have to set this because we can never hover over these divs - the userneopets section on top blocks us - so the white div would not otherwise get activated.<br><br class="clear"><textarea class="code-float" style="height: 620px;"><div id="pets">

<a class="this-account">
<img src="//pets.neopets.com/cpn/aethelar/1/2.png"><div class="white"></div>
</a>
<a class="this-account">
<img src="//pets.neopets.com/cpn/bannok/1/2.png"><div class="white"></div>
</a>
<a class="this-account">
<img src="//pets.neopets.com/cpn/samitan/1/2.png"><div class="white"></div>
</a>

<a href="/petlookup.phtml?pet=Accury">
<img src="//pets.neopets.com/cpn/accury/1/2.png"><div class="white">Accury</div>
</a>
<a href="/petlookup.phtml?pet=Morganee">
<img src="//pets.neopets.com/cpn/Morganee/1/2.png"><div class="white">Morganee</div>
</a>

</div></textarea>

Fill the <b class="blue">pets div</b> with your pets. Each pet sits inside a link element; without the link, you won't be able to get your pet to display properly so it's important that you add that in - even though the first three pets use a link element without a URL to go to.<br><div class="fact">Links without URLs used to be bad news, but it is now technically valid. You might see some people say it makes the browser slower, but this is only for links pointing to blank URLs; missing out the URL part all together has no effect.<br><br>

The reason I say it's bad practice is because I'm using a link element to act as a div element, not because I'm using a link element without anywhere for the link to go. In code, it's important to use different things for different purposes as much as possible - it makes the code clearer and much easier to work with.</div> <br>
The first three pets are the pets on this account, and marked with a class to show this. These are the faded images that show when we hover over the pets in the <b class="green">userneopets section</b>, so make sure you include the right number of these links to match your pets - and obviously, change the pet names to match your own!<br><br>

The last two pets are my side account pets; I have five more in the userlookup, but I haven't included them in this part of the tutorial to save space. Make sure you put the pet's name inside the <b>white div</b>, or it won't show on the hover correctly.<br><br>

You can read more about getting the URL for pet images <a href="#ul-image-code">here</a>.
<br></div></div>
<div class="blurb"><div class="main">
<br><br><div class="center">
<img src="http://i.imgur.com/cWFHccZ.png"><br><br><i>Again, shown hovering the middle pet of the <b>#userneopets section</b> to show the faded image from the <b>pets div</b> below.</i><br><br></div>
</div></div>

<div class="heading"><div class="main">
  Step Five: Background and Navigation</div></div>

<div class="tutorial"><div class="main">
<div class="fact" style="width: 740px; margin-left: 100px;">
<div class="center"><b>What to make first?</b></div>

When you're making a userlookup, what part do you make first? Well, that depends on whether it's a userlookup that you know will work, or one you have to figure out as you go along.<br><br>

For a fairly simple layout, like my <a href="#ul-banner">banner userlookup</a>, I would start out straight away with graphics and backgrounds - it allows you to get a proper feel for how the layout will look and adjust accordingly.<br><br>

For a more technical layout such as this one, you should do the complicated part first. Otherwise you run the risk of putting in a lot of work, only to find out at the end that your layout idea isn't possible and you have to scrap it (I did that once with a three month bespoke software project - it was a rather horrible discovery). That's why for this layout, we've built the pets completely before we touch the rest of the layout.<br><br>

Of course, anything on this page is guaranteed to work - so you could take the steps in pretty much any order you like!</div>

<textarea class="code-float" style="height: 100px;">body {
	background: url("http://i.imgur.com/LLbQfy8.png");
}</textarea>
Set the full body background. This one is a subtle grey background from <a href="/~Cecira">TKM Backgrounds</a> to keep all the focus on the pets rather than distract your visitors with flashy graphics.<br class="clear"><textarea class="code-float" style="height: 100px;">#navigation {
	background: #f6f6f6;
	text-align: center;
}</textarea>
Set the background for the navigation div, and center the links inside it.<br class="clear"><textarea class="code-float" style="height: 240px;">#navigation a {
	display: inline-block;
	width: 100px;
	color: #888;
	font-size: 8pt;
	font-weight: normal;
	line-height: 40px;
}

#navigation a:hover {
	color: #f6f6f6;
	background: #afafaf;
}</textarea>

Style the navigation links and their hover appearance. I've gone for very simple links, using only shades of grey (and never very dark grey at that). This, combined with the small font and the lack of capital letters in my links, give a fairly sleek and minimalist feel to the layout.<br><br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center">
<img src="http://i.imgur.com/d2ToP8U.png"><br><br><i>Shown hovering over the <b>Customisation</b> link</i><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Six: Content Modules</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 140px;">#userinfo, #usercollections, #usershop, #usertrophies {
	background: #fff;
	border: none;
	border-bottom: 3px solid #888;
}</textarea>

Set the background of the content modules (taking care to exclude the <b class="green">userneopets section</b>), and give each one a thick bottom border. We could specify the borders separately for each edge of the content module, but I find it's quicker to remove them all then add the bottom one back in.<br class="clear"><textarea class="code-float" style="height: 100px;">#userinfo, #usercollections, #usershop {
	height: 330px !important;
}</textarea>

Set the height of all modules on the first row.<br class="clear"><textarea class="code-float" style="height: 140px;">#userinfo {
	width: 460px;
}
#userinfo .contentModuleTable {
	height: 280px !important;
}</textarea>
Set the width of the <b>userinfo</b> module, and set the height of the content to be a bit shorter than the full module. This brings the icons up to sit above the base rather than exactly on it - and also stops Internet Explorer pushing them down outside the content module.<br class="clear"><textarea class="code-float" style="height: 160px;">#usercollections {
	margin-left: -45px;
	width: 320px;
}
#usershop {
	margin-left: -40px;
}</textarea>
Shift both the <b>usercollections</b> module and the <b>usershop</b> module left a bit, so that they form one continuous band with the userinfo module rather than three separate blocks.<br class="clear"><textarea class="code-float" style="height: 100px;">#usershop img {
	margin: 20px 0;
}</textarea>
Shift the shopkeeper image down a bit to make it more central in the module.<br class="clear"><textarea class="code-float" style="height: 140px;">#usertrophies {
	width: 1000px;
}
#main {
	overflow: hidden;
}</textarea>
Stretch the <b>usertrophies</b> to fill the full width of the userlookup. Because of the way the tables are set up, this makes the layout wider than 1000px and causes the shop module to overhang slightly; hiding the overflow on the <b>main</b> div crops off this spare bit and makes everything line up neatly again.

<br class="clear"><textarea class="code-float" style="height: 220px;">.contentModuleHeader, .contentModuleHeaderAlt {
	background: #f6f6f6;
	border-bottom: 1px dotted #888;
	width: 100%;
	text-align: center;
	color: #888;
	font-size: 7pt;
	letter-spacing: 3px;
	text-transform: uppercase;
}</textarea>
Style the headers. <br><br><b>text-transform: uppercase</b> puts the whole title into capitals (other options for text-transform are lowercase and capitalise, which remove all capitals or capitalise the first letter of every word).<br><br><b>letter-spacing</b> puts some space between each letter, making the words take up more space without using a larger font. It's fine to use in titles, but don't be tempted to space out letters in normal text too much - it's a bit more of a strain for our eyes to read.<br><br class="clear"><textarea class="code-float" style="height: 220px;">.contentModule b {
	font-weight: normal;
}
.contentModule a {
	font-weight: normal;
	color: #888;
}
.contentModule a:hover {
	color: #ccc;
}</textarea>

Change the bold text to be normal, and add some colour (again, shades of grey) to the links. <br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center"><img src="http://i.imgur.com/8Vo7Yja.png"><br><br><br></div>
</div></div>
<div class="heading"><div class="main">
  Finished</div></div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;">(style)
#ban, #header, #footer, hr, #habitarium, #ncmall, #userneohome, #userneopets .contentModuleHeaderAlt, .content a img, .content b {
	display: none;
}
.contentModule b, .contentModule a img, #pets b, #pets a img {
	display: inline;
}
table, #main, .contentModule, .contentModuleContent {
	border: 0 !important;
	background: none;
}

body {
	background: url("http://i.imgur.com/LLbQfy8.png");
}

#main {
	width: 1000px;
	margin: 10px auto;
	position: relative;

	overflow: hidden;
}
#userneopets, #pets {
	position: absolute;
	top: 4px;
	left: 18px;
	height: 150px !important;
}

#userneopets a {
	position: absolute;
	display: block;
	height: 150px;
	width: 90px;
	overflow: hidden;
}
#userneopets img {
	margin-left: -25px;
	border: 0;
}
#userneopets a:hover img {
	visibility: hidden;
}

#userneopets .medText {
	margin: 0;
	padding: 0;
}
#userneopets .medText td.medText {
	width: 90px !important;
	float: left;
	margin-right: 8px;
}
#userneopets b {
	font-weight: normal;
	display: block;
}
#pets a {
	position: relative;
	display: inline-block;

	height: 150px;
	width: 90px;
	overflow: hidden;

	margin: 0 4px 5px 0;

	font-weight: normal;
	font-size: 8pt;
	color: #000;
	text-align: center;
	line-height: 40px;
}
#pets img {
	background: #fff;
	margin-left: -25px;
	border: 0;
}
.white {
	display: none;

	position: absolute;
	top: 0;
	height: 100%;
	width: 100%;

	background: url("http://i.imgur.com/rwIj7cm.png");
}
a:hover .white, a.this-account .white {
	display: block;
}

#navigation {
	height: 40px;
	width: 1000px;
	margin: 150px 0 0 -8px;
	background: #f6f6f6;
	text-align: center;
}
#navigation a {
	display: inline-block;
	width: 100px;
	color: #888;
	font-size: 8pt;
	font-weight: normal;
	line-height: 40px;
}
#navigation a:hover {
	color: #f6f6f6;
	background: #afafaf;
}

#userinfo, #usercollections, #usershop, #usertrophies {
	background: #fff;
	border: 0;
	border-bottom: 3px solid #888;
}
#userinfo, #usercollections, #usershop {
	height: 330px !important;
}
#userinfo {
	width: 460px;
}
#userinfo .contentModuleTable {
	height: 280px !important;
}
#usercollections {
	margin-left: -45px;
	width: 320px;
}
#usershop {
	margin-left: -40px;
}
#usershop img {
	margin: 20px 0;
}
#usertrophies {
	width: 1000px;
}

.contentModuleHeader, .contentModuleHeaderAlt {
	background: #f6f6f6;
	border-bottom: 1px dotted #888;
	width: 100%;
	text-align: center;
	color: #888;
	font-size: 7pt;
	letter-spacing: 3px;
	text-transform: uppercase;
}

.contentModule b {
	font-weight: normal;
}
.contentModule a {
	font-weight: normal;
	color: #888;
}
.contentModule a:hover {
	color: #ccc;
}
(/style)

<div id="navigation">
	<a href="/myaccount.phtml">my account</a>
	<a href="/customise/">customise</a>
	<a href="/games/">games</a>
	<a href="/explore.phtml">explore</a>
	<a href="/nf.phtml">news</a>
	<a href="/community/">community</a>
	<a href="/objects.phtml">shops</a>
	<a href="/mall/">nc mall</a>
	<a href="http://nc.neopets.com/membership/">premium</a>
</div>

<div id="pets">

<a class="this-account">
	<img src="//pets.neopets.com/cpn/aethelar/1/2.png"><div class="white"></div>
</a>
<a class="this-account">
	<img src="//pets.neopets.com/cpn/bannok/1/2.png"><div class="white"></div>
</a>
<a class="this-account">
	<img src="//pets.neopets.com/cpn/samitan/1/2.png"><div class="white"></div>
</a>

<a href="/petlookup.phtml?pet=Accury">
	<img src="//pets.neopets.com/cpn/accury/1/2.png"><div class="white"> Accury </div>
</a>
<a href="/petlookup.phtml?pet=Morganee">
	<img src="//pets.neopets.com/cpn/Morganee/1/2.png"><div class="white"> Morganee </div>
</a>
<a href="/petlookup.phtml?pet=Jarazed">
	<img src="//pets.neopets.com/cpn/Jarazed/1/2.png"><div class="white"> Jarazed </div>
</a>
<a href="/petlookup.phtml?pet=Volareis">
	<img src="//pets.neopets.com/cpn/Volareis/1/2.png"><div class="white"> Volareis </div>
</a>
<a href="/petlookup.phtml?pet=Niettah">
	<img src="//pets.neopets.com/cpn/Niettah/1/2.png"><div class="white"> Niettah </div>
</a>
<a href="/petlookup.phtml?pet=Ventria">
	<img src="//pets.neopets.com/cpn/Ventria/1/2.png"><div class="white"> Ventria </div>
</a>
<a href="/petlookup.phtml?pet=teovu">
	<img src="//pets.neopets.com/cpn/teovu/1/2.png"><div class="white"> Teovu </div>
</a>

</div></textarea><br><br>NB - The petpage filters are slightly different to the userlookup filters. In order to post this code, I've had to replace the angled brackets around the <b>style</b> tags with round ones - be sure to change them back in your own code.<br><br><br></div>
</div></div>

</div>



<div class="page" id="ul-amplite">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#userlookup">userlookups</a> »
    <a href="#ul-amplite">all my pets lite userlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>A less complicated version of the <b>all my pets full</b> userlookup, this one adds all pets to the top of the layout but does not have the stats visible when you hover over them. There's space for ten pets per row, so twenty pets in total - all of them, if you don't have premium!<br><br><div class="center"><img src="http://i.imgur.com/JZ6jNPn.png"></div><br></div></div>
  
<div class="heading"><div class="main">
  Userlookup Structure</div></div>

<div class="tutorial"><div class="main">
<img src="http://i.imgur.com/ffaPd6b.png" style="float: right; margin: 0 10px 10px 20px; width: 400px;">

There are four parts to this userlookup:

<ul><li>The <b class="red">body</b>
</li>
<li>The <b class="blue">pets</b>
</li>
<li>The <b class="purple">navigation</b>
</li>
<li>The <b class="yellow">content modules</b>
</li>
</ul>

The <b>main and content divs</b> are there, but not visible. They do provide the underlying structure for the <b class="yellow">content modules</b>, which are in their natural positions - all we've done is shift them over a bit to account for the modules we've taken out.<br><br>

The <b class="blue">pets</b> and <b class="purple">navigation</b> are not given any positioning; this is where they naturally sit in the userlookup. Because of this, it's important to put the navigation links <i>after</i> the pets in the code, or the two sections will swap over to have the navigation at the top and the pets underneath.

<br><br></div></div>

<div class="heading"><div class="main">
  Step One: Removing Things</div></div>

<div class="tutorial"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px;">
#ban, #header, #footer, hr, #habitarium, #ncmall, #userneohome, .content a img, .content b {
  display: none;
}</textarea></div>


<br><b>#ban, #header</b><br>
This removes the header from the userlookup, including the Neopets navigation, time, user information, event notifications, and any adverts that would usually display in the header. We'll be creating our own Neopets navigation to replace it later on.

<br><div class="fact" style="float: right;">
I've hidden the habitarium, neohome and ncmall album for appearance purposes - I think this simple style of userlookup looks better when it isn't too cluttered. Given that we haven't changed the positions of the content modules much, it would be simple to add these back in if you want - just remove them from this <b>display: none</b> block and adjust the margins and widths of the other content modules to fit.</div>

<b>#footer</b><br>
This removes the footer from the userlookup<br><br><b>hr</b><br>
This removes the thin grey divider between sections of the user trophies<br><br><b>#habitarium, #ncmall, #userneohome, </b><br>
These remove sections of the userlookup we don't want to display.<br><br><b>.content a img, .content b</b><br>
This hides the bolded text that reads <b>User Lookup: aethelar <img src="//images.neopets.com/help/question_mark.png"></b>

<br><br><div class="center">
<textarea class="code" style="height: 80px;">
.contentModule b, .contentModule a img, #pets a img {
	display: inline;
}</textarea></div>
<br>

In the previous block of code, we had to hide all linked images and bold text. Here, we make all of these elements visible again in the content modules and in the <b class="blue">pets div</b> that will hold our side account pets. Because I'm not using bold text in the pets div, I haven't specified <b>#pets b</b> to be visible.

<br><br><div class="center">
<textarea class="code" style="height: 100px;">
table, #main, .contentModule, .contentModuleContent {
	border: 0 !important;
	background: none;
}</textarea></div>
<br>

Remove borders and backgrounds from everything, giving us a completely blank userlookup to play with.

</div></div>

<div class="heading"><div class="main">
  Step Two: Backgrounds, Borders and Colours</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">body {
	background: url("http://i.imgur.com/Xh7K16C.png");
}</textarea>

Set the background for the page. I got this lovely blue one from <b>bgrepeat</b>.

<br class="clear"><textarea class="code-float" style="height: 100px;">#main {
	width: 1000px;
	margin: 10px auto;
}</textarea>

Set the width of the <b>main div</b> and give a margin.<br><div class="fact">
<b>margin: 10px auto</b> is shorthand for <b>margin: 10px auto 10px auto</b> (which is itself shorthand for margin-top: 10px; margin-right: auto; etc). You can use the same shorthand for borders and padding.</div>
<textarea class="code-float" style="height: 140px;">#userinfo, #usercollections, #usershop, #userneopets, #usertrophies {
	background: #fff;
	border: 0;
	border-bottom: 3px solid #2e5e74;
}</textarea>

Set the background and borders for the content modules. The border colour has been picked from the background image.<br><br>

It would be easier to apply this code to the <b>content modules</b> rather than to every module individually, but unfortunately this won't work. The content modules are <i>outside</i> the #userinfo div, #usercollections div, etc - if we apply the background and border to the content modules, then they won't match the divs when we resize them a bit further down.<br><br class="clear"><textarea class="code-float" style="height: 220px;">.contentModule b {
	font-weight: normal;
}
.contentModule a {
	font-weight: normal;
	color: #7eb1ff;
}
.contentModule a:hover {
	color: #2e5e74;
}</textarea>

Change the bold text to be normal, and add some colour (again, shades of blue picked from the background) to the links.<br><div class="fact">When picking colours for a layout, try not to pick fresh ones each time. Instead, form a colour palette with a dark colour, medium colour, light colour, etc, and reuse these - it helps keep the layout looking harmonious.</div>
</div></div>
<div class="blurb"><div class="main"> <br><br><div class="center"><img src="http://i.imgur.com/N4BA7PM.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Three: Content Modules and Headers</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">#userinfo, #usercollections, #usershop {
	height: 330px !important;
}</textarea>

Set the height of all modules on the first row.<br class="clear"><textarea class="code-float" style="height: 140px;">#userinfo {
	width: 460px;
}
#userinfo .contentModuleTable {
	height: 280px !important;
}</textarea>
Set the width of the <b>userinfo</b> module, and set the height of the content to be a bit shorter than the full module. This brings the icons up to sit above the base rather than exactly on it - and also stops Internet Explorer pushing them down outside the content module.<br class="clear"><textarea class="code-float" style="height: 160px;">#usercollections {
	margin-left: -45px;
	width: 320px;
}
#usershop {
	margin-left: -40px;
}</textarea>
Shift both the <b>usercollections</b> module and the <b>usershop</b> module left a bit, so that they form one continuous band with the userinfo module rather than three separate blocks.<br class="clear"><textarea class="code-float" style="height: 100px;">#usershop img {
	margin: 20px 0;
}</textarea>
Shift the shopkeeper image down a bit to make it more central in the module.<br class="clear"><textarea class="code-float" style="height: 140px;">#usertrophies {
	width: 1000px;
}
#main {
	overflow: hidden;
}</textarea>
Stretch the <b>usertrophies</b> to fill the full width of the userlookup. Because of the way the tables are set up, this makes the layout wider than 1000px and causes the shop module to overhang slightly; hiding the overflow on the <b>main</b> div crops off this spare bit and makes everything line up neatly again.

<br class="clear"><textarea class="code-float" style="height: 300px;">.contentModuleHeader, .contentModuleHeaderAlt {
	background: #c8dcff;
	border-bottom: 1px dotted #2e5e74;

	width: 100%;
	height: 30px;

	text-align: center;
	color: #2e5e74;
	font-size: 7pt;
	line-height: 30px;
	letter-spacing: 3px;
	text-transform: uppercase;
}</textarea>
Style the headers. <br><br><b>text-transform: uppercase</b> puts the whole title into capitals (other options for text-transform are lowercase and capitalise, which remove all capitals or capitalise the first letter of every word).<br><br><b>letter-spacing</b> puts some space between each letter, making the words take up more space without using a larger font. <br><div class="fact">It's annoying, but we have to use both <b>content module header</b> and <b>content module header alt</b> because Neopets uses the first for the <b>userinfo</b> module and the second for all other modules. This would have been a perfect opportunity for them to use inline styles instead of creating another class, but alas.</div>

</div></div>
<div class="blurb"><div class="main"> <br><br><div class="center"><img src="http://i.imgur.com/op03i1i.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Four: The Pets Div</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 120px;">#pets {
	background: #fff;
	border: 0;
	border-bottom: 3px solid #2e5e74;
}</textarea>
Add the <b class="blue">pets div</b> to the block of code giving the content modules their background and border.

<br class="clear"><textarea class="code-float" style="height: 120px;">#pets {
	width: 1000px;
	text-align: center;
	margin: 5px 0 5px -9px;;
}</textarea>
Set the size of the pets div and ensure all pets inside are central aligned. No need to worry about positioning; the pets will naturally sit on top of the content modules. The negative margin (<b>-9px</b>) removes a bit of empty space to the left of the pets module.


<br class="clear"><textarea class="code-float" style="height: 400px;">#pets a {
	display: inline-block;

	width: 90px;
	overflow: hidden;

	margin: 0 4px 5px 0;

	font-weight: normal;
	font-size: 8pt;
	color: #000;
	text-align: center;
}

#pets img {
	background: #fff;
	margin-left: -25px;
	border: 0;
}</textarea>

Style how the pet images appear. The code on the <b>#pets a</b> section restricts the width of each pet and styles the text, while the code on the <b>#pets img</b> section gives each pet image a background (only visible for pets without one of their own) and centers the pet image in the link.<br><div class="fact"><div class="center"><b>Scope</b></div>
The <b>scope</b> of a piece of code refers to the area it is 'active' in - for example, which parts of a program something can be accessed from, or which part of the webpage a block of CSS styles are applied.<br><br>

By setting <b>#pets img</b> we are restricting the scope of our img code to be <i>only img that are found in #pets</i>. We could restrict it further by specifying <b>#pets a img</b> - that would be <i>only img inside link elements that are found in #pets</i>. I haven't used this here because I don't need to; <b>#pets img</b> picks up all my images without needing the extra restriction of adding <b>a</b>.<br><br>

What you <i>can't</i> do on Neopets is to specify something like <i>all img which are <b>not</b> in link elements</i>. If you wanted something like that, you'd need to give all of these images a class, then set your selector to be <b>#pets img.not-a</b> or similar.</div>

<textarea class="code-float" style="height: 240px;"><div id="pets">
<div class="contentModuleHeader">
All My pets
</div>
<br><a href="/petlookup.phtml?pet=Aethelar">
<img src="//pets.neopets.com/cpn/aethelar/1/2.png"><br><br>Aethelar
</a>

</div></textarea><b>Put this outside your style tags</b><br><br>

Set up the <b>pets</b> div. The header is given the same styling as the content module headers for uniformity. I've only put one pet in here (there are ten in the progress screen shots), but put in as many as you like - if you go over ten, the pets will wrap to the next line and push the rest of the content down. This is benefit of not being absolutely positioned!

<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"> <br><br><div class="center"><img src="http://i.imgur.com/FaXeqNs.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Five: Navigation</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 160px;">#navigation {
	height: 40px;
	width: 1000px;
	margin: 10px 0 0 -9px;
	background: #c8dcff;
	text-align: center;
}</textarea>

Position the <b>navigation</b> div. The margin code applies a top margin of 10px, to separate the navigation from the <b>pets div</b>, and a left margin of -9px so the the left edge of the navigation lines up the <b>userinfo</b> div.<br><br>

All colours used in the navigation have been colour picked from the background.
<br class="clear"><textarea class="code-float" style="height: 260px;">#navigation a {
	display: inline-block;
	width: 100px;
	color: #2e5e74;
	font-size: 8pt;
	font-weight: normal;
	line-height: 40px;
}
#navigation a:hover {
	color: #ebf2ff;
	background: #7eb1ff;
}</textarea>

Style the navigation links.<br><div class="fact"><div class="center"><b>Float vs Inline-Block</b></div>A couple of years ago, it would be normal to use <b>floats</b> for each link to make them display in a row, as <b>display: block</b> puts each element on a new line. Floats worked adequately, but they are not actually designed for layout building - it's very difficult to center floated elements, and they can cause problems if not properly cleared. Try to use <b>display: inline-block</b> instead for layout purposes.</div>

<br class="clear"><textarea class="code-float" style="height: 280px;"><div id="navigation">
<a href="/myaccount.phtml">my account</a>
<a href="/customise/">customise</a>
<a href="/games/">games</a>
<a href="/explore.phtml">explore</a>
<a href="/nf.phtml">news</a>
<a href="/community/">community</a>
<a href="/objects.phtml">shops</a>
<a href="/mall/">nc mall</a>
<a href="http://nc.neopets.com/membership/">premium</a>
</div></textarea><b>Put this part outside your style tags</b><br><br>

The Neopets navigation links. Note that we haven't specified in the CSS whether this goes above or below the <b>pets div</b>; that's determined by the position of the links in the HTML code. If you'd like the pets on top, put them first - if you'd like the navigation on top, put that first.
<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center"><img src="http://i.imgur.com/JZ6jNPn.png"><br><br><br></div>
</div></div>
<div class="heading"><div class="main">
  Finished</div></div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;"><style>
#ban, #header, #footer, hr, #habitarium, #ncmall, #userneohome, .content a img, .content b {
	display: none;
}
.contentModule b, .contentModule a img, #pets a img {
	display: inline;
}
table, #main, .contentModule, .contentModuleContent {
	border: 0 !important;
	background: none;
}
body {
	background: url("http://i.imgur.com/Xh7K16C.png");
}
#main {
	width: 1000px;
	margin: 10px auto;
	overflow: hidden;
}
#pets {
	width: 1000px;
	text-align: center;
	margin: 5px 0 5px -9px;
}
#pets a {
	display: inline-block;
	width: 90px;
	overflow: hidden;
	margin: 0 4px 5px 0;
	font-weight: normal;
	font-size: 8pt;
	color: #000;
	text-align: center;
}
#pets img {
	background: #fff;
	margin-left: -25px;
	border: 0;
}
#navigation {
	height: 40px;
	width: 1000px;
	margin: 10px 0 0 -9px;
	background: #c8dcff;
	text-align: center;
}
#navigation a {
	display: inline-block;
	width: 100px;
	color: #2e5e74;
	font-size: 8pt;
	font-weight: normal;
	line-height: 40px;
}
#navigation a:hover {
	color: #ebf2ff;
	background: #7eb1ff;
}
#pets, #userinfo, #usercollections, #usershop, #userneopets, #usertrophies {
	background: #fff;
	border: 0;
	border-bottom: 3px solid #2e5e74;
}
#userinfo, #usercollections, #usershop {
	height: 330px !important;
}
#userinfo {
	width: 460px;
}
#userinfo .contentModuleTable {
	height: 280px !important;
}
#usercollections {
	margin-left: -45px;
	width: 320px;
}
#usershop {
	margin-left: -40px;
}
#usershop img {
	margin: 20px 0;
}
#usertrophies {
	width: 1000px;
}
.contentModuleHeader, .contentModuleHeaderAlt {
	background: #c8dcff;
	border-bottom: 1px dotted #2e5e74;
	width: 100%;
	height: 30px;
	text-align: center;
	color: #2e5e74;
	font-size: 7pt;
	line-height: 30px;
	letter-spacing: 3px;
	text-transform: uppercase;
}
.contentModule b {
	font-weight: normal;
}
.contentModule a {
	font-weight: normal;
	color: #7eb1ff;
}
.contentModule a:hover {
	color: #2e5e74;
}
</style><div id="pets">
<div class="contentModuleHeader">All My pets</div>
<br><a href="/petlookup.phtml?pet=Aethelar">
	<img src="//pets.neopets.com/cpn/aethelar/1/2.png"><br><br>Aethelar
</a>
<a href="/petlookup.phtml?pet=Bannok">
	<img src="//pets.neopets.com/cpn/bannok/1/2.png"><br><br>Bannok
</a>
<a href="/petlookup.phtml?pet=Samitan">
	<img src="//pets.neopets.com/cpn/samitan/1/2.png"><br><br>Samitan
</a>
<a href="/petlookup.phtml?pet=Accury">
	<img src="//pets.neopets.com/cpn/accury/1/2.png"><br><br>Accury
</a>
<a href="/petlookup.phtml?pet=Morganee">
	<img src="//pets.neopets.com/cpn/Morganee/1/2.png"><br><br>Morganee
</a>
<a href="/petlookup.phtml?pet=Jarazed">
	<img src="//pets.neopets.com/cpn/Jarazed/1/2.png"><br><br>Jarazed
</a>
<a href="/petlookup.phtml?pet=Volareis">
	<img src="//pets.neopets.com/cpn/Volareis/1/2.png"><br><br>Volareis
</a>
<a href="/petlookup.phtml?pet=Niettah">
	<img src="//pets.neopets.com/cpn/Niettah/1/2.png"><br><br>Niettah
</a>
<a href="/petlookup.phtml?pet=Ventria">
	<img src="//pets.neopets.com/cpn/Ventria/1/2.png"><br><br>Ventria
</a>
<a href="/petlookup.phtml?pet=teovu">
	<img src="//pets.neopets.com/cpn/teovu/1/2.png"><br><br>Teovu
</a>

</div>

<div id="navigation">
	<a href="/myaccount.phtml">my account</a>
	<a href="/customise/">customise</a>
	<a href="/games/">games</a>
	<a href="/explore.phtml">explore</a>
	<a href="/nf.phtml">news</a>
	<a href="/community/">community</a>
	<a href="/objects.phtml">shops</a>
	<a href="/mall/">nc mall</a>
	<a href="http://nc.neopets.com/membership/">premium</a>
</div></textarea></div></div></div>

</div>


<div class="page" id="pl-banner">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#petlookup">petlookups</a> »
    <a href="#pl-banner">banner petlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>This tutorial will teach you to make a simple petlookup with navigation at the top and a space to write about your pet below. I've called it a banner lookup because you can put anything you like behind the navigation links; I've chosen to leave a white background and just put the name of my pet below, but you could easily add an image banner in.<br><br><div class="center"><img src="http://i.imgur.com/vC3j2W2.png"></div><br></div></div>
  
<div class="heading"><div class="main">
  Petlookup Structure</div></div>

<div class="tutorial"><div class="main">
<img src="http://i.imgur.com/aC0pQrR.png" style="width: 350px; float: right; margin-left: 15px;">

The petlookup is made up of four main sections:

<ul><li>The <b class="green">body</b> with the background image</li>
<li>The <b class="red">header banner and navigation links</b>
</li>
<li>The <b class="blue">content modules</b>
</li>
<li>(not shown) The <b class="yellow">about your pet</b> section</li>
</ul>

The header is actually in two parts; the image is part of the background for the <b>main div</b>, with the links and dropdown navigation laid over the top of it but actually part of the <b>header</b>. Why we've done this will be explained further on in the code, but it's primarily to make it easier to hide all the adverts in the header.<br><br>

The <b class="yellow">about your pet</b> section has had no styling done to it - just write whatever you'd like outside the style tags, and it'll appear below your pet's stats just as the normal description would if you hadn't made a layout.<br><br><br class="clear"><br>
The banner used in this tutorial is <b>750px x 120px</b>. If you want your graphics to match my code perfectly, then use this template (right click and save as to download as a png):<br><br><div class="center">
<img src="http://i.imgur.com/mlDsuCH.png"><br><br><br></div>
<br><br></div></div>
<div class="heading"><div class="main">
  Step One: Removing Things</div></div>

<div class="tutorial"><div class="main">
<div class="center"><textarea class="code" style="height: 120px;">#footer, .sidebar, #ban, .contentModuleHeader, .contentModuleHeaderAlt, .contentModuleContent td img, .content div a img {
  display: none;
}</textarea></div>
<br><b>#footer, .sidebar, #ban</b><br>
Remove the footer, sidebar modules and the background banner of the header. Why the background banner is it's own thing and not controlled by the header itself, I don't know; it's annoying, but easy enough to deal with.<br><br><b>.contentModuleHeader, .contentModuleHeaderAlt</b><br>
Remove the headers from each section. You can leave this out if you wish, but be aware that the <b>Description</b> header cannot be removed without also removing the other headers.<br><br><b>.contentModuleContent td img</b><br>
Remove the images in the pet's stats, including the star rating, fishing image and battledome image.<br><br><b>.content div a img</b><br>
Remove the question mark <img src="//images.neopets.com/help/question_mark.png"> after your pet's name.<br><br><textarea class="code-float" style="height: 80px;">#header {
	visibility: hidden;
}</textarea>
Hide the header and all it's contents. We'll make the links work again later on, but for now they'll be disabled.<br><div class="fact">We could do here what I've done in the <a href="#ul-banner">banner userlookup tutorial</a> and just remove parts of the header that we don't want rather than removing the whole thing; I wanted to show you both options - whichever you use is up to you!</div>

<br class="clear"><textarea class="code-float" style="height: 80px;">.content div {
	font: 0 verdana !important;
}</textarea>
Hide the large text of your pet's name at the top of the lookup. This won't affect any text in the stats or the about me section, unless you use divs in your description. If that's the case, then make sure to set <b>#about { font: 12px verdana !important; }</b> to ensure that text displays.<br><br class="clear"><textarea class="code-float" style="height: 120px;">.contentModule, .contentModuleTable, table, td {
	border: none !important;
	background: none;
}</textarea>
Remove backgrounds and borders from everything except the <b>main div</b>.
<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="center"><img src="http://i.imgur.com/74xobgh.png"><br><br><br></div>
</div></div>

<div class="heading"><div class="main">
  Step Two: Borders and Backgrounds</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 120px;">body {
	background: url("http://imageshack.com/a/img840/586/o1w.png") fixed center left;
}</textarea>
Set the whole page background. I'm using a large image background from <a href="/~tines">Silent Serentity</a>, but you could use a tiling pattern or even a flat colour if you prefer.<br><div class="fact">To specify the background position, give the <b>vertical position</b> then the <b>horizontal position</b>. You can choose from <b>top, center, bottom</b> and <b>left, center, right</b>, or use pixels to position the background more accurately. Pixels will measure from the top left.</div>

<textarea class="code-float" style="height: 200px;">#main {
	width: 780px;
	border: 10px solid #d24fab;
	margin-top: -10px;
	margin-bottom: 20px;
	background: #fff url("http://i59.tinypic.com/10hivk1.jpg") top center no-repeat;
}</textarea>
Set up the main div to have a white background, thick border (I've chosen a pink colour to match the flowers in the background), and an image of the header banner at the top. The <b>no-repeat</b> command puts the banner in as a single image and stops it tiling down the page. The <b>margin-top: -10px</b> hides the border across the top of the page.<br><div class="fact">We've put our header banner on the <b>main div</b> rather than in the <b>header div</b> because the visibility of the header is set to hidden - the banner wouldn't display if we put it there. However, because we've used <b>visibility: hidden</b> rather than <b>display: none</b>, the main div is still pushed down to leave space for the header - and our banner.</div>


<textarea class="code-float" style="height: 100px;">#content {
	width: 750px;
	margin: 30px 15px;
}</textarea>
Set up the content, and give a bit of space between it and the border of the main div. The content is narrower to allow for this; 750px + 15px (left margin) + 15px (right margin) = 780px, the total width of the main div.

</div></div>
<div class="blurb"><div class="main"><br><br><div class="center"><img src="http://i.imgur.com/0wjBBEt.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Step Three: Navigation</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 100px;">#template_nav {
	visibility: visible;
	margin: -35px 0 0 -125px;
}</textarea>

Make the navigation section visible and position the links over the words in the banner.

<br class="clear"><textarea class="code-float" style="height: 100px;">#template_nav img {
	visibility: hidden;
	display: block;
}</textarea>

Hide the images of the words, but make sure that the links are still clickable.<br><div class="fact">If you left this with just <b>visibility: hidden</b> then the drop down menu would appear on hover, but the words on the banner wouldn't be clickable. Unfortunately, this is what happens in Internet Explorer even with the <b>display: block</b> included.</div>

<textarea class="code-float" style="height: 100px;">ul.dropdown {
	background: #f3bfe3;
	border: 1px solid #d24fab;
}</textarea>

Change the background and border colours of the drop down menu. I've stayed with the pink theme; the darker pink for the border is the same colour as the border of the <b>main</b> div for consistency.

<br class="clear"><textarea class="code-float" style="height: 160px;">ul.dropdown a {
	font-weight: normal;
	color: #d24fab !important;
}
ul.dropdown a:hover {
	color: #fff !important;
}</textarea>

Style the text links of the drop down. The <b>!important</b> is needed here because of the way Neopets has structured their code - if you leave it out, the dropdown links may ignore your code.
<br class="clear"></div></div>
<div class="blurb"><div class="main">
<br><br><div class="center">
<img src="http://i.imgur.com/nJatV0D.png"><br><br><i>Shown hovering over the Community » Neoboards link</i><br><br></div>

</div></div>
<div class="heading"><div class="main">
  Step Four: Finishing Touches</div></div>

<div class="tutorial"><div class="main">
<textarea class="code-float" style="height: 120px;">#CustomNeopetView {
	height: 350px;
	width: 350px;
	margin-bottom: 10px;
}</textarea>

Resize the large pet image and put a bit of space between it and the petpet section below. You don't need to worry about shrinking the stats section; it will automatically resize to accommodate the new pet image size.

<br class="clear"><textarea class="code-float" style="height: 160px;">b, a {
	color: #d24fab;
	font-weight: normal;
}
a:hover {
	color: #000000;
}</textarea>

Set the bold text and links to be a pink colour, again using the same pink as the borders of the <b>main</b> div.

<br><div class="fact">There are four <b>states</b> for a link. These are <i>link, hover, target</i> and <i>visited</i>. We could specify <b>a:link, a:target, a:visited</b> in the first block of code, but it's easier to cover all states with just <b>a</b> and then adjust the hover state in the second block of code.<br><br>

For those that are curious, <b>link</b> is the default state, <b>hover</b> is when the link is being hovered over, <b>active</b> is the link the moment it is being pressed, and <b>visited</b> is a link the user has previously clicked on.</div>

</div></div>
<div class="blurb"><div class="main"><br><br><div class="center"><img src="http://i.imgur.com/vC3j2W2.png"><br><br><br></div>

</div></div>

<div class="heading"><div class="main">
  Finished</div></div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;"><style>
#footer, .sidebar, #ban, .contentModuleHeader, .contentModuleHeaderAlt, .contentModuleContent td img, .content div a img {
	display: none;
}
#header {
	visibility: hidden;
}
.content div {
	font: 0 verdana !important;
}
.contentModule, .contentModuleTable, table, td {
	border: none !important;
	background: none;
}
body {
	background: url("http://imageshack.com/a/img840/586/o1w.png") fixed center left;
}
#main {
	width: 780px;
	border: 10px solid #d24fab;
	margin-top: -10px;
	margin-bottom: 20px;
	background: #fff url("http://i59.tinypic.com/10hivk1.jpg") top center no-repeat;
}
#content {
	width: 750px;
	margin: 30px 15px;
}
#template_nav {
	visibility: visible;
	margin: -35px 0 0 -125px;
}
#template_nav img {
	visibility: hidden;
	display: block;
}
ul.dropdown {
	background: #f3bfe3;
	border: 1px solid #d24fab;
}
ul.dropdown a {
	font-weight: normal;
	color: #d24fab !important;
}
ul.dropdown a:hover {
	color: #fff !important;
}
#CustomNeopetView {
	height: 350px;
	width: 350px;
	margin-bottom: 10px;
}
b, a:link, a:active, a:visited {
	color: #d24fab;
	font-weight: normal;
}
a:hover {
	color: #000000;
}
</style>

Write about your pet here!<br><br>
Bg by <a href="/~tines">SS</a></textarea></div></div></div>
</div>



<div class="page" id="pl-clean">
  <div class="subtitle"><div class="main">
    Scarab <span style="color: #e67e22;">tutorials</span>
  </div></div>
  <div class="breadcrumbs"><div class="main">
    <a href="#title">home</a> »
    <a href="#petlookup">petlookups</a> »
    <a href="#pl-clean">clean petlookup walkthrough</a>
  </div></div>
  <div class="blurb"><div class="main">
    <br>This tutorial is for a lovely and clean petlookup style, one that I think works best with a very limited about me section, but will also work if you have more to say. Here you'll learn how to use and abuse negative margins in a way that you really shouldn't. Don't try this at home kids, but on Neo? Needs must.<br><br><div class="center"><div class="big-clip"><img src="http://i.imgur.com/AmR1xYP.png"></div><br><div class="big-clip" style="margin-top: -162px; border-top: 0;"><img src="http://i.imgur.com/UO1JgCr.png"></div></div><br></div></div>
  
<div class="heading"><div class="main">
  Step one: removing things</div>
  </div>

<div class="tutorial"><div class="main">
<div class="center"><textarea class="code" style="height: 120px;">#footer, #header, #ban, .sidebar, .contentModuleHeader, .contentModuleHeaderAlt, .contentModuleContent td img, .content div a img {
	display: none;
}</textarea></div>
<br><b>#footer, #header, #ban, .sidebar</b><br>
Remove the footer and the header, the sidebar modules, and the background banner of the header. Why the background banner is it's own thing and not controlled by the header itself, I don't know; it's annoying, but easy enough to deal with.<br><br><b>.contentModuleHeader, .contentModuleHeaderAlt</b><br>
Remove the headers from each section. You can leave this out if you wish, but be aware that the <b>Description</b> header cannot be removed without also removing the other headers.<br><br><b>.contentModuleContent td img</b><br>
Remove the images in the pet's stats, including the star rating, fishing image and battledome image.<br><br><b>.content div a img</b><br>
Remove the question mark <img src="//images.neopets.com/help/question_mark.png"> after your pet's name.<br><br class="clear"><textarea class="code-float" style="height: 140px;">.content div {
	font: 0 verdana !important;
}
.content #nav, .content #about {
	font: 11px verdana !important;
}
</textarea>
Hide the large text of your pet's name at the top of the 
lookup. This will also hide the text in our <b>navigation</b> and <b>about me</b> divs, so the second part of the code unhides the text in those. You will need to add in any other divs you are using as well to make sure the text is visible.<br><div class="fact">This is the danger of the <b>!important</b> keyword - because we used it to hide the text, we need to use it again to override that and show the text. Using multiple <b>!important</b>s like this is not good practice; try to avoid it.</div>

<br class="clear"><textarea class="code-float" style="height: 120px;">#main, .contentModule, .contentModuleContent, .contentModuleTable, table, td {
	border: none !important;
	background: none;
}</textarea>
Remove backgrounds and borders from everything.
<br class="clear"></div></div>
<div class="blurb"><div class="main"><br><br><div class="big-clip"><img src="http://i.imgur.com/MY7pEAL.png"></div><br><br></div></div>


<div class="heading"><div class="main">
  Step two: backgrounds and base structure</div>
	</div>

<div class="tutorial"><div class="main">

    <textarea class="code-float" style="height: 120px;">
body {
	background: #fff url('http://i.imgur.com/sspV4Zf.png') fixed;
	margin: 0;
}</textarea>
Set the full body background and remove the margin applied by the captcha. This background's from <a href="/~ventria">Beetle's own background page</a>, just for a change. I've set the background to be <b>fixed</b> so that it doesn't move when we scroll; the benefit of this is that we don't see the join where the background repeats itself.
<br style="clear: both;"><textarea class="code-float" style="height: 160px;">#main {
	background: #fff;
	margin-top: 270px;
	width: 100%;
	margin-bottom: 120px;
	height: 560px;
}</textarea>
Set the <b>main div</b> to be full width and have a white background. The margin-top pushes down the div so that we see a strip of the background as a header; restricting the height and adding a margin-bottom leaves a strip for our footer at the bottom.<br><div class="fact">I know the height I need because I've made this layout already, but you will probably need to adjust this once you've written the <b>about me</b> part.</div><textarea class="code-float" style="height: 100px;">#content {
	width: 1000px;
	margin: 0 auto;
}</textarea>
Restrict the width of the <b>#content</b> div and center it on the page.<br><div class="fact">We could have put our header in the <b>#header</b> div like we did with the <a href="#pl-banner">banner pet lookup</a>. I've used the background instead because then I can use the same image for the header and the footer rather than creating separate banners for each. Very economical, me.</div>

</div></div>
<div class="blurb"><div class="main"><br><br><div class="big-clip"><img src="http://i.imgur.com/nRmQEOl.png"></div><div class="center"><br><i>Shown scrolled down the page so you can see the footer effect</i><br><br></div>
	</div>
</div>

<div class="heading"><div class="main">
  Step three: Move things around and styling the stats</div>
	</div>

<div class="tutorial"><div class="main">

<textarea class="code-float" style="height: 120px;">#CustomNeopetView {
	height: 440px;
	width: 440px;
	margin: -250px 50px -30px 0;
}</textarea>
Make the pet image larger and use negative margins to pull it up and outside the <b>#main</b> div. The margin shorthand reads <b>top: -250px / right: 50px / bottom: -30px / left: 0px</b>.<br><br><br style="clear: both;"><div class="fact" style="width: 700px; margin: 0 auto;"><div class="center"><b>Negative Margin</b></div>Negative margin is a bit tricky to get your head around, because it does one thing to the <b>top and left</b> and another thing when applied to the <b>bottom and right</b>. Top and left, it shifts the image in that direction - so here, we're moving the pet image <b>up 250px</b> (and 0px left). But bottom and right, it pulls everything else towards it - so the <b>bottom: -30px</b> is pulling our petpet up underneath our pet picture. Not a huge amount; just enough to hide the <b>Aethelar has a petpet</b> text, because I decided I didn't want it there.<br><br><b>What's hacky about this?</b><br>Well, we haven't got to the truly disgraceful bit of code yet. But the main issue here is that we've pushed the pet picture so that it sits <b>outside our #main div</b>. This is technically valid, but people don't like it because we could end up cutting part of the image off. Try adding <b>#main { overflow: auto; }</b> and you'll see we lose the top half of our pet picture. </div>
<br><textarea class="code-float" style="height: 80px;">.contentModuleTable table{
	margin-top: -50px;
}</textarea><br>Remove the gap between <b>When meeting others</b> and the next line of the stats with <b>Age</b>

	<br style="clear: both;"><textarea class="code-float" style="height: 100px;">.contentModuleTable .medText b {
	display: block;
	margin-top: -15px;
}</textarea>
Put the petpet's name on a new line (purely aesthetical this, but again, I like the effect)
<br style="clear: both;"><textarea class="code-float" style="height: 80px;">.content div img {
	margin: 4px;
}</textarea>
Introduce a bit of space between the trophy images. This will also affect any images in your <b>about me</b> div - if you don't want the space there, then make sure to add <b>#about img { margin: 0; }</b> to remove the spacing.
<br><br style="clear: both;"><textarea class="code-float" style="height: 120px;">td, td a b {
	color: #444;
	font: 11px verdana;
	line-height: 18px;
}</textarea>
Add some styling to the font. <b>#444</b> is a dark grey colour; it doesn't make a big difference, it just softens the layout slightly compared to black font.<br><br>
We apply this to <b>td</b> rather than to <b>body</b> because tables are tricky and don't inherit style properly - it's always best to style a td directly rather than style a parent element like the <b>body</b> tag.
<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="big-clip"><img src="http://i.imgur.com/x07JLdO.png"></div><br><br></div>
</div>


<div class="heading"><div class="main">
  Step four: navigation</div>
	</div>

<div class="tutorial"><div class="main">

    <textarea class="code-float" style="height: 280px;">#nav {
	margin-top: -483px;
	margin-left: 501px;
	width: 478px;
	text-align: center;
}
#nav a {
	font-weight: bold;
	color: #D67530;
}
#nav a:hover {
	color: #DCA741;
}
</textarea>
Now <i>this</i> is where margin abuse comes into play. The petlookup is structured so that everything you write in the description actually goes into a single table cell. Usually that's fine, but it has one big issue: <b>we can't absuloutely position anything from inside a table cell</b>. We could put our navigation across underneath the beauty contest images just fine, but if we want to lift it up to sit by the banner, we can't.<br><br><b>Fixed positioning</b> is the only option that would work - but then the links wouldn't scroll. So we use this massive negative margin to lift the links up above where they should be instead.<br><div class="fact">Bear in mind that if you have a different number of trophies for your pet or if you don't have a petpet, you may have to lift your navigation by a different amount. That's one of the downfalls of negative margin - you have to keep updating it relative to the rest of the layout, which is a bit of a pain.</div><br>
For the links themselves, I've kept it sweet and simple with text links - but if you'd rather go for button style links then do so.<br><br><textarea class="code-float" style="height: 140px;"><div id="nav">
{ <a href="/~petpage">Petpage</a> } { <a href="/neomessages.phtml?type=send&amp;recipient=aethelar">Neomail owner</a> }{ <a href="/">Leave</a> }
</div></textarea>And outside your style tags, put in the links themselves. Remember to update the links to go to your petpage and your neomail!<br><div class="fact"><b>«a href="/"»</b> leads back to the Neopets homepage - the <b>/</b> stands for the root index file.</div>
<br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="big-clip"><img src="http://i.imgur.com/xFaRKTF.png"></div><br><br></div>
</div>

<div class="heading"><div class="main">
  Step five: about me and artwork</div>
	</div>

<div class="tutorial"><div class="main">

    <textarea class="code-float" style="height: 80px;">#about {
	margin-top: 483px;
}</textarea>
Because we used a negative margin on the <b>nav</b> div, we've not only shfited that div up - we've shifted that <b>and everything that comes after it</b> up. So to get our <b>about</b> div back where it's supposed to be, we move it down by the same amount.<br><div class="fact">Reason number two why this is such bad practice - we've now covered the entire stats section with margins. If you needed to click on links in the stats section this would be <b>A Bad Thing</b>. Luckily we don't need to.</div>
	<br style="clear: both;"><textarea class="code-float" style="height: 140px;">#petPic {
	margin: 150px auto;
	width: 300px;
	height: 300px;
	overflow: hidden;
}</textarea>	
Position our artwork div below our about me section. Because we set a height on our <b>main</b> div back in step two, this is now <b>outside the main div</b> and sits in our footer section. The <b>150px auto</b> for the margin sets <b>150px top and bottom</b> and <b>centers the image horizontally</b>. The extra bottom margin will push our footer to be bigger.<br><br>
The <b>overflow: hidden</b> will be used to crop our image into the circle shape we want.<br><br style="clear: both;"><textarea class="code-float" style="height: 80px;">#petPic img {
	margin: -40px 0 0 -20px;
}</textarea>
Apply margins on our artwork to move it around so that the part we want will be visible. The picture I'm using is approximately 420px wide and I'm showing a 300px circle view of it, so this makes sure I've got a good focus.<br><br style="clear: both;"><textarea class="code-float" style="height: 40px;"><div id="about"></div></textarea>
Put your <b>about</b> div outside the style tags. I've decided not to write anything in it, but I still have to include the div to make the margns work. You can include anything you want - but remember to adjust the height of the <b>main</b> div so that there's a white background behind the <b>about</b> div.<br><br style="clear: both;"><textarea class="code-float" style="height: 120px;"><div id="petPic" style="border-radius: 150px;"><img src="http://fc03.deviantart.net/fs71/f/2014/211/0/2/aethelar_realistic_by_aethelar-d7sx9jx.png"></div></textarea>
Just like with petpages, we need to put the border-radius as an inline style or it'll get stripped out by the filters. Make sure to put the border-radius on the <b>petPic</b> div and not on the image itself.<br><br>
I'm using an image from my <a href="/~aethelar">art page</a> - if you don't have an image, you're welcome to use one of my <a href="/~samitan">adoptables</a> for this part! Because they have a transparent background, it would look nicer to set a background colour on the <b>petPic</b> div.<br><br style="clear: both;"></div></div>
<div class="blurb"><div class="main"><br><br><div class="big-clip"><img src="http://i.imgur.com/UO1JgCr.png"></div><div class="center"><i><br>Shown scrolled down the page to view the footer and round artwork image</i><br><br></div>
	</div>
</div>

<div class="heading"><div class="main">
  Finished</div>
	</div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;"><style>
#footer, #header, #ban, .sidebar, .contentModuleHeader, .contentModuleHeaderAlt, .contentModuleContent td img, .content div a img {
	display: none;
}
body {
	background: #fff url("http://i.imgur.com/sspV4Zf.png") fixed;
	margin: 0;
}
.content div {
	font: 0 verdana !important;
}
.content #nav, .content #about {
	font: 11px verdana !important;
}
#main, .contentModule, .contentModuleContent, .contentModuleTable, table, td {
	border: none !important;
	background: none;
}
#main {
	background: #fff;
	margin-top: 270px;
	width: 100%;
	margin-bottom: 120px;
	height: 560px;
}
#content {
	width: 1000px;
	margin: 0 auto;
}
.contentModuleTable table {
	margin-top: -50px;
}
#CustomNeopetView {
	height: 440px;
	width: 440px;
	margin: -250px 50px -30px 0;
}
.contentModuleTable .medText b {
	display: block;
	margin-top: -15px;
}
.content div img {
	margin: 4px;
}
td, td a b {
	color: #444;
	font: 11px verdana;
	line-height: 18px;
}
#nav {
	margin-top: -483px;
	margin-left: 501px;
	width: 478px;
	text-align: center;
}
#nav a {
	font-weight: bold;
	color: #D67530;
}
#nav a:hover {
	color: #DCA741;
}
#about {
	margin-top: 483px;
}
#petPic {
	margin: 150px auto;
	width: 300px;
	height: 300px;
	overflow: hidden;
}
#petPic img {
	margin: -40px 0 0 -20px;
}
</style><div id="nav">
{ <a href="/~aethelar">Petpage</a> } { <a href="/neomessages.phtml?type=send&amp;recipient=aethelar">Neomail owner</a> }{ <a href="/">Leave</a> }
</div>

<div id="about"></div>

<div id="petPic" style="border-radius: 150px;"><img src="http://fc03.deviantart.net/fs71/f/2014/211/0/2/aethelar_realistic_by_aethelar-d7sx9jx.png"></div></textarea></div>
	</div>
</div>

</div>


<div class="page" id="pp-anchored">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-anchored">anchored petpage walkthrough</a>
	</div></div>
	<div class="blurb"><div class="main">
		<br>A basic anchored layout to get you started with your layout making. The principles here can be applied to just about any anchored layout you want to make; once you know how to get the multiple pages working, you're good to adapt and modify!

The banner image I'm using for this one is just the base image, the text is written in the code and can be changed to anything you want.<br><br><div class="center"><div class="big-clip"><img src="http://i.imgur.com/uiuupM1.png"></div></div><br></div></div>

<div class="heading"><div class="main">
	Step one: removing things</div>
</div>

<div class="tutorial"><div class="main">

		<textarea class="code-float" style="height: 80px;">
font, td {
	display: none;
}
		</textarea>
		Hide the Neopets banner across the top of the page and the copyright text at the bottom. Neither of these are visible when you preview the page so it's easy to miss this stage out!
		<br style="clear: both;"><textarea class="code-float" style="height: 140px;">
.main font {
	display: inline;
}
.main td {
	display: table-cell;
}
		</textarea>
		Make sure that any <b>font</b> or <b>td</b> tags in the layout itself will display properly. Our entire layout will be wrapped in the <b>.main</b> class which is why I'm using that here - swap this out for another class or ID if you're using something else.<br><div class="fact">We use <b>font</b> instead of <b>.sf</b> to hide the copyright text because the <b>.sf</b> class isn't used when viewing the page in some other languages.</div>
	</div>
</div>

<div class="heading"><div class="main">
	Step two: basic shapes</div>
</div>

<div class="tutorial"><div class="main">

		<textarea class="code-float" style="height: 100px;"><div class="main">
	<div class="header"></div>
	<div class="content"></div>
</div>
		</textarea>
		Set up your (very) basic page structure. Unlike the userlookups where Neo has done this for us, we're working with a blank slate - it's important to have a clear idea of how the building blocks will go together. I find pencil sketches really useful for this stage!
		<br style="clear: both;"><textarea class="code-float" style="height: 180px;">
body {
	background: #ccc;
	text-align: center;
}
.main {
	width: 900px;
	margin: 30px auto;
}
		</textarea>
		We're using <b>auto margins</b> to center our layout, which means we need to specify a width on <b>.main</b>. The way we've written margin here is a shorthand; what it means is <i>margin-top: 30px; margin-right: auto; margin-bottom: 30px; margin-left: auto;</i> - but this is quicker. <br><br>
		Unfortunately, Internet Explorer doesn't listen to the auto margins, so we have to set <b>text-align</b> on the body as well to make this centered in all browsers. (Even though a div like .main shouldn't be affected by text-align at all, but you know. That's just how IE rolls.)<br><br style="clear: both;"><textarea class="code-float" style="height: 220px;">
.header {
	width: 100%;
	height: 350px;
	background: #000;
}
.content {
	width: 100%;
	height: 450px;
	background: #fff;
}
		</textarea>
		Set up the relative heights of <b>.header</b> and <b>.main</b>. By setting the width to be the full width of the <b>.main</b> div we make it easier to change - if we want a narrower or wider layout, we now only need to update the width of <b>.main</b> and everything else will resize automatically to fit. Handy stuff.<br><div class="fact">
			The total height of our layout is now <b>800px</b>, which is taller than most screens. We have to be careful here - if our layout is too tall, then our navigation could be scrolled off screen when we navigate between sections. It sounds minor, but it's a major pain and best avoided.
		</div>
		</div></div>
<div class="blurb"><div class="main">
		<br><br><div class="big-clip">
			<img src="http://i.imgur.com/Ukq8Ljk.png"></div><br><br></div>
</div>

<div class="heading"><div class="main">
	Step three: the header</div>
</div>

<div class="tutorial"><div class="main">

		<textarea class="code-float" style="height: 260px;"><div class="header">
	<div class="title">Page Title Goeth Here</div>
	<div class="nav">
		<a href="#one">One</a>
		<a href="#two">Two</a>
		<a href="#three">Three</a>
		<a href="#four">Four</a>
		<a href="#five">Five</a>
		<a href="#six">Six</a>
	</div>
</div>
		</textarea>
		Again, set up your structure here. We've got a title and some navigation in the header, and I've decided on six links. I always do - don't know why, but you can easily change that around!<br><div class="fact">
			<div class="center"><b>Banner as an image or a background?</b></div>
			There's two ways of adding text to a banner. If your banner is the right height and width, set it as the background and position your title on top. If you don't know the size of the banner, or if you need to resize it, then it's easiest to put the banner as an image, and pull the title text up with negative margin to sit on top. It's easier to resize - or add borders etc - to the banner when it's an image rather than a background.
		</div>
		<br style="clear: both;"><textarea class="code-float" style="height: 100px;">
.header {
	background: #000 url('http://i.imgur.com/dACUtSp.png');
}
		</textarea>
		I've made this header to match the layout exactly at <b>900px x 350px</b>, so I'm setting is as a background.
		<br style="clear: both;"><textarea class="code-float" style="height: 140px;">
.title {
	font: small-caps 40px georgia;
	padding-top: 120px;
	color: #eee;
	line-height: 60px;
}
		</textarea>
		Style the <b>title</b> text. The most important thing here is the <b>padding-top</b> which we're using to push the title down and sit in the right place on the banner. In theory, we could apply this padding to the <b>header</b> and it would work the same - but <i>don't do that</i>. Firefox and Chrome disagree about padding; you're header will be two different sizes in each browser.
		<br><br style="clear: both;"><textarea class="code-float" style="height: 80px;">
.nav {
	font: 0 courier;
}

		</textarea>
		We're using <b>inline-block</b> to make our navigation links sit next to each other. This has one drawback; inline-block listens to whitespace - ie, if there are any spaces between the links <i>in the code</i> then there will be spaces between the links <i>in the layout</i>. This hides the spaces and makes sure the links sit next to each other. If you use this, <b>make sure to specify the font size of the links themselves</b> otherwise they won't show up either!<br><br style="clear: both;"><textarea class="code-float" style="height: 300px;">
.nav a {
	display: inline-block;
	width: 150px;
	font: 12px courier;
	line-height: 39px;
	text-transform: uppercase;
	text-decoration: none;
	color: #aaa;
}
.nav a:hover {
	background: url("http://i.imgur.com/1lNbUzG.png");
	color: #fefefe;
}
		</textarea>
		Style the links. This is fairly straight forward, but a couple of notes:<br><br><b>display: inline-block</b> makes our links into <b>blocks</b> rather than text links; we can now use margin, padding, height and width. The <b>inline</b> part keeps them sitting next to each other on a line rather than putting each one on a new line. It also means that the links will pay attention to the <b>text-align</b> code, so they're very easy to center.<br><br><b>text-decoration</b> is the underline which we want to remove. 
		<br><br><b>#aaa</b> is a colour shorthand - it stands for <b>#aaaaaa</b>. The hover colour can't be shorthanded, so we have to write that out in the full six letters.<br><br>
		We haven't set a <b>height</b> on our link elements - instead, we're using <b>line-height</b>. This works for one line of text to make sure that the link will be <b>39px</b> tall, <i>and</i> that our text will be vertically centered within the link. Neat.
		</div></div>
<div class="blurb"><div class="main">
		<br><br><div class="big-clip">
			<img src="http://i.imgur.com/Pv9zi1X.png"></div><br><div class="center"><i>Shown hovering over the "Two" link</i><br><br></div>
	</div>
</div>

<div class="heading"><div class="main">
	
		Step four: setting up the anchored pages
	</div>
</div>

<div class="tutorial"><div class="main">

		I included a section under the <a href="#ul-anchored">anchored userlookup</a> explaining how multipages work. Rather than copy and paste it here I'm going to send you up to read it, because I'm lazy like that.<br><br>
		Back? Good.<br><br><textarea class="code-float" style="height: 180px;"><div class="content">
	<div class="page" id="one"></div>
	<div class="page" id="two"></div>
	<div class="page" id="three"></div>
	<div class="page" id="four"></div>
	<div class="page" id="five"></div>
	<div class="page" id="six"></div>
</div>
		</textarea>
		Our basic setup - six <b>pages</b> inside a <b>wrapper</b>, which here is out <b>content</b> div. We use the <b>ID</b> of each page as the <i>location</i> of each of our navigation links. We could create an anchor by typing <b>«a name="one"»</b> but this uses less lines of code and is neater.<br><br>
		Again, it doesn't have to be six pages. You could put any number here - just make sure you haev space for all that navigation!
		<br style="clear: both;"><textarea class="code-float" style="height: 80px;">
.content {
	overflow: hidden;
}
		</textarea>
		We're using our <b>content div</b> to act as the wrapper here, so we need to hide the overflow on that.
		<br style="clear: both;"><textarea class="code-float" style="height: 140px;">
.page {
	width: 100%;
	height: 100%;
	overflow: auto;
	margin-bottom: 1000px;
}
		</textarea>
		Set up our scrolling pages, the full size of the <b>content</b> area. The <b>margin-bottom</b> is actually optional; it's designed to make sure you only get one page visible at a time, but the layout will work just fine without it.
		<br style="clear: both;"><br>
		And that's it! There's nothing to see so no preview screenshot. Just put a bit of dummy text into each page and check that your navigation works, and put a whole load of new lines in the make sure everything scrolls as it should. Anchored layout made easy!
	</div>
</div>

<div class="heading"><div class="main">
	Step five: styling the content and finishing touches</div>
</div>

<div class="tutorial"><div class="main">

		<textarea class="code-float" style="height: 120px;">
.page {
	font: 13px verdana;
	line-height: 18px;
	text-align: justify;
}
		</textarea>
		Set the font style. I really like increasing the line-height; I think it makes things look cleaner, but you can leave that out if you like.<br><br>
		We could just as easily put this code on the <b>content</b> class instead of <b>page</b>, it makes no difference at all.
		<br style="clear: both;"><textarea class="code-float" style="height: 80px;">
.padding {
	margin: 8px;
}
		</textarea>
		I mentioned in <b>step three</b> that padding is tricky because it appears differently in different browsers. To avoid using it here, we create a second div and set the <b>margin</b> - because margin displays properly. By layering this inside our <b>page</b> div, we create the same effect as padding without any inconsistencies between Chrome and Firefox.<br><br style="clear: both;"><textarea class="code-float" style="height: 480px;">
h1 {
	text-align: center;
	font: small-caps 28px georgia;
}
.page a {
	font: 13px courier;
	letter-spacing: -1px;
	color: #666;
	text-decoration: none;
}
.page a:hover {
	text-transform: uppercase;
	font-weight: bold;
	color: #bbb;
}
.page b {
	font: small-caps 16px courier;
	color: #8a8a8a;
}
.page i {
	font: italic 13px georgia;
	color: #444;
}
		</textarea>
		Style the headers, links, and bold and italic font for each of our pages. I've gone for a style that matches the page title style here for the headers, and I've kept my colour palette in the greys to match the greyscale colour scheme.<br><br>
		
		Note that we've <b>scoped</b> most of these so that only the links, bold and italic font <i>inside the .page div</i> is affected. This is done to avoid messing with any of the links in the navigation, or if you'd used bold or italic font in your title to avoid messing with that. It's good practice in general to tie code into a specific area of the layout like this, because it avoids a lot of confusion when you later create a sidebar and forget that the bold text will be put into <b>small-caps</b>, for example. Of course, if you want these styles to apply to bold text <i>everywhere on the page</i> then just put <b>b</b> and leave off the <b>.page</b><br><br>
		And also note that we've had to specify that the <b>i</b> tag should be <i>italic</i>. That's because the command to be italic falls under <b>font</b> - when we change the font, we reset everything to default and then apply our new style on top. This resets the <i>italic</i> for font-style to the default <i>normal</i> font and we have to bring the italic back in.
		<br style="clear: both;"><textarea class="code-float" style="height: 180px;"><div class="page" id="one"><div class="padding">
	<h1>Page heading</h1>
	And page text goes here!<br><br>
	This is what <b>bold</b>, <i>italic</i> and <a href="/~accury">linked text</a> look like.
</div></div>
		</textarea>
		Set up your <b>padding</b> inside the pages, and test out the header, bold, italic and link styles to make sure you like them.
		<br style="clear: both;"></div></div>
		<div class="blurb"><div class="main">
		<br><br><div class="big-clip">
			<img src="http://i.imgur.com/uiuupM1.png"></div><br><br></div>
</div>

<div class="heading"><div class="main">
	Finished</div>
</div>

<div class="dark"><div class="main">
<div class="center">
<textarea class="code" style="height: 100px; width: 100%;"><style>
body {
	background: #ccc;
	text-align: center;
}
font, td {
	display: none;
}
.main td {
	display: table-cell;
}
.main font {
	display: inline;
}
.main {
	width: 900px;
	margin: 30px auto;
}
.header {
	width: 100%;
	height: 350px;
	background: #000 url("http://i.imgur.com/dACUtSp.png");
}
.title {
	font: small-caps 40px georgia;
	padding-top: 120px;
	color: #eee;
	line-height: 60px;
}
.nav {
	font: 0 georgia;
}
.nav a {
	display: inline-block;
	width: 150px;
	font: 12px courier;
	line-height: 39px;
	text-transform: uppercase;
	text-decoration: none;
	color: #aaa;
}
.nav a:hover {
	background: url("http://i.imgur.com/1lNbUzG.png");
	color: #fefefe;
}
.content {
	width: 100%;
	height: 450px;
	background: #fff;
	overflow: hidden;
}
.page {
	width: 100%;
	height: 100%;
	overflow: auto;
	margin-bottom: 1000px;
	font: 13px verdana;
	line-height: 18px;
	text-align: justify;
}
.padding {
	margin: 8px;
}
h1 {
	text-align: center;
	font: small-caps 28px georgia;
}
.page a {
	font: 13px courier;
	letter-spacing: -1px;
	color: #666;
	text-decoration: none;
}
.page a:hover {
	text-transform: uppercase;
	font-weight: bold;
	color: #bbb;
}
.page b {
	font: small-caps 16px courier;
	color: #8a8a8a;
}
.page i {
	font: italic 13px georgia;
	color: #444;
}
</style><div class="main">
	<div class="header">
		<div class="title">
			Page Title Goeth Here
		</div>
		<div class="nav">
			<a href="#one">One</a>
			<a href="#two">Two</a>
			<a href="#three">Three</a>
			<a href="#four">Four</a>
			<a href="#five">Five</a>
			<a href="#six">Six</a>
		</div>
	</div>
	
	<div class="content">
		<div class="page" id="one"><div class="padding">
			<h1>Page heading</h1>
			And page text goes here!<br><br>
			This is what <b>bold</b>, <i>italic</i> and <a href="/~accury">linked text</a> look like.
		</div></div>
		<div class="page" id="two"><div class="padding">
			<h1>Second section</h1>
		</div></div>
		<div class="page" id="three"><div class="padding">
			<h1>Third section</h1>
		</div></div>
		<div class="page" id="four"><div class="padding">
			<h1>Fourth section</h1>
		</div></div>
		<div class="page" id="fifth"><div class="padding">
			<h1>Fifth section</h1>
		</div></div>
		<div class="page" id="six"><div class="padding">
			<h1>Sixth section</h1>
		</div></div>
	</div>
</div>
		</textarea></div></div>
</div>


</div>


<div class="page" id="pp-speech-marks">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-speech-marks">disappearing speech marks</a>
	</div></div>
	

<div class="heading"><div class="main">
	I'm fed up with my speech marks disappearing on me</div>
</div>

<div class="tutorial" style="margin-bottom: 0;"><div class="main">
  	Ever seen this on a petpage?<br><br>          <b>Oh look," I said. "I've lost my first speech mark."
</b><br><br>

Or this?<br><br><b>          I flapped my arms in exasperation. "But where did it <i>go?</i> I asked.</b>
<br><br>
The cause of this is that Neopets filters strip out speech marks when they occur next to an angled bracket in the code, from a new line in the first example and the italic tag in the second. <br><br>
I've seen numerous work arounds, most of which use bold, coloured or italic font to show text. But I don't want that. I want my speech marks, please. Luckily, I have two solutions for you:
</div>
<div class="sky"><div class="main">
  <br><b>Option 1<br><br></b>Add a space between your angled brackets and your quotation marks. A regular space will be stripped out, so use the character code instead:<br><br><div class="center">«b» &amp; nbsp; "These quotation marks will show up!" &amp; nbsp;«/b»</div>
  <br>The code stands for "non-breaking space", but in my head I say "and now blank space". Remember to type as all one work, without the space just after the &amp; sign.<br><br></div></div>
<div class="off-blue"><div class="main">
  <br><b>Option 2</b><br><br>
  Use the character code for the quotation marks themselves. You need to encode the <b>&amp;</b> as well, or your speech marks will appear when you preview the page but be stripped out when you save.<br><br><div class="center">«b»&amp; amp;quot;These quotation marks will also show up.&amp; amp;quot;«/b»</div><br>
  These will appear as <b>&amp; quot;</b> when you preview, then as speech marks when you save the page.<br><br>This option gives just the quotation marks without any extra spaces - very useful for dialogue where the quotation mark is at the start of a new line. <b>However</b> you will need to put the character codes back in every time you save the page, which can be a bit of a pain. Find and replace is your friend.<br><br></div></div>
</div></div>



<div class="page" id="ul-image-codes">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#userlookup">userlookups</a> »
		<a href="#ul-image-codes">image codes</a>
	</div></div>
	

<div class="heading"><div class="main">
	Finding or building urls for your pet images</div>
</div>

<div class="tutorial" style="margin-bottom: 0;"><div class="main">
  There are two kind of pet image urls; <b>static urls</b> which will always point to the pet in that customisation, and <b>live urls</b> that will display your pet as they currently appear, in their current customisation.
</div><br><div class="blurb"><div class="main"><br><img src="http://i.imgur.com/uKOKV3h.png" style="float: right; margin: 0 10px;"><b>1. Copy the URL directly from an image of your pet</b><br><br>

Right click on an image of your pet and select <b class="red">Copy Image URL</b>. You can now paste the URL into your code between image tags - «img src = " pasteURLhere "» - and it will show up exactly the same as the image you copied it from.<br><br>

If you use this method, you'll get a code for your pet instead of their name - something like<br><br><div class="center">//pets.neopets.com/cp/7l4z2w3r/1/2.png</div><br></div></div>
<div class="off-blue"><div class="main">
  <br><b>2. Build your own URL using your pet's name</b><br><br>

The code for a pet's image looks like this:<br><br><div class="center">//pets.neopets.com/<b class="yellow">cpn</b>/<b class="green">aethelar</b>/<b class="red">1</b>/<b class="yellow">2</b>.png</div>

<br>This uses <b class="yellow">cpn</b> instead of just <b class="yellow">cp</b> to mark it as a name code
<br>Replace the <b class="green">green text</b> with your pet's name
<br>The <b class="red">red number</b> controls your pet's mood
<br>The <b class="yellow">yellow number</b> changes the size of your pet's image 

<br><br>
Your mood options are:<br><br><div class="center">
<img src="//pets.neopets.com/cpn/aethelar/1/6.png" style="margin: 16px;"><img src="//pets.neopets.com/cpn/aethelar/2/6.png" style="margin: 16px;"><img src="//pets.neopets.com/cpn/aethelar/3/6.png" style="margin: 16px;"><img src="//pets.neopets.com/cpn/aethelar/4/6.png" style="margin: 16px;"></div><br><br>
And your size options:<br><div class="center">

1.<br><img src="//pets.neopets.com/cpn/aethelar/1/1.png" style="margin: 16px;"><br>
2.<br><img src="//pets.neopets.com/cpn/aethelar/1/2.png" style="margin: 16px;"><br>
3.<br><img src="//pets.neopets.com/cpn/aethelar/1/3.png" style="margin: 16px;"><br>
4.<br><img src="//pets.neopets.com/cpn/aethelar/1/4.png" style="margin: 16px;"><br>
5.<br><img src="//pets.neopets.com/cpn/aethelar/1/5.png" style="margin: 16px;"><br>
6.<br><img src="//pets.neopets.com/cpn/aethelar/1/6.png" style="margin: 16px;"><br>
7.<br><img src="//pets.neopets.com/cpn/aethelar/1/7.png" style="margin: 16px;"></div>
<br></div></div></div>


</div>


<div class="page" id="ul-custom-shield">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#userlookup">userlookups</a> »
		<a href="#ul-custom-shield">custom shield and icons</a>
	</div></div>
	

<div class="heading"><div class="main">
	Using custom shields or icons on your userlookup</div>
</div>

<div class="tutorial"><div class="main">
  A quick warning here - if you add your own shield, it <b>must not</b> display an account age in months or years. That's considered lying about your stats, and is against the rules. A pretty image with your name or something similar is perfectly acceptable though! I'm using one of <a href="/~Bedazzled">Kasey's Shields</a>, currently being hosted at <a href="/~sparkle">Sparkle</a>.<br><br></div><div class="heading"><div class="main">Just the shield</div></div><div class="blurb"><div class="main">
  <br>

The code below does three things:
<ol><li>Hides the existing shield (and the icon images, but we'll fix that)</li>
  <li>Puts the new shield in the background of the content module. If you're already using an image background for your content module you won't be able to use this method to add the shield, as the module can only have one background.</li>
  <li>Makes the icons (neofriend, send mail, etc) visible again</li>
</ol><textarea class="big" style="height: 220px;">
#userinfo img {
    visibility: hidden;
}
#userinfo .contentModuleContent {
    background: url("http://screamevil.net/shield/shield96.gif") no-repeat top right;
}
#userinfo a img {
    visibility: visible;
}</textarea>

Which gives us this:<div class="center"><img src="http://i57.tinypic.com/16hqfc7.jpg"></div>
<br></div></div><div class="heading"><div class="main">Shield and icons</div></div><div class="main"><br>

To create your graphic, first take a screenshot of your <b>userinfo module</b> as it will be in your final layout. If you later change it's size, you'll need to create a new graphic to make sure everything lines up again. Paste this into a graphics program with layers (I use photoshop elements) and crop until you have just the content, no header.<br><br><div class="center"><img src="http://i58.tinypic.com/2z53luv.jpg"></div>
<br>

Make your graphic on a <b>new layer</b> above this; we're only using the screenshot as a guide to position everything. I'm using the same shield as before, and some tea related items that I've shrunk to <b>60px x 60px</b>.<br><br><div class="center"><img src="http://i57.tinypic.com/2dubij9.jpg"></div>


<br>You can see that my teacups leave the words below the icons visible, for the most part. Our graphic will sit underneath the words, so a bit of white overlapping doesn't matter. The teacup shield has become a static image rather than a moving gif because I just copied and pasted it in.<br><br>

We've got our graphic positioned; now we just need to hide the screen shot and fill the background in white and we're done!<br><br><div class="center"><img src="http://i58.tinypic.com/2n7fw5d.jpg"></div>
<br>
And our code, which:
<ol><li>Hides the shield and icons</li>
  <li>Puts our graphic in as the background to the module</li>
  <li>Makes the icons clickable, but keeps them invisible</li>
  <li>Removes the horizontal grey line above the icons</li>
</ol><textarea class="big" style="height: 260px;">
#userinfo img {
    visibility: hidden;
}
#userinfo .contentModuleContent {
    background: url("http://i58.tinypic.com/2n7fw5d.jpg") no-repeat;
}
#userinfo a img {
    display: table-cell;
}
#userinfo table table table {
    border: 0 !important;
}</textarea>

Done!

<div class="center"><img src="http://i57.tinypic.com/bga2j7.jpg"></div>
<br></div><div class="heading"><div class="main">User collections</div></div><div class="blurb"><div class="main"><br>

You can use exactly the same steps to give yourself custom icons in the user collections as well, but <b>be aware of the avatar</b>. You'll hide your actual avatar when you hide the other icons, and if you don't display the correct one in its place then your stats will be wrong - which is against the rules (particularly if it looks like you've given yourself a rare avatar on your userlookup which you may not have in real life!)<br><br>

You have two choices here:

<ol><li>Copy the avatar into your graphic, and make a new graphic every time you change avatar.</li>
<li>Create a small div positioned exactly above the avatar icon, and put the avatar image in this instead. Again, update every time you change avatar.</li>
</ol>

The advantage of the first is that it involves no extra code. The advantage of the second is the once it's set up, it's quicker and easier to change. Entirely your choice which you choose!<br><br></div></div><div class="heading"><div class="main">non white backgrounds</div></div><div class="main"><br>

The easiest background is white, as that's what the neopets images have by default. To create a transparent or different coloured background, we need to remove this white - I use the <b>magic wand tool</b> on photoshop and a small eraser to fix little bits left over. <br><br><div class="center">
<img src="http://i62.tinypic.com/mcail2.jpg" style="margin-right: 25px;"><img src="http://i57.tinypic.com/2610l6g.jpg"></div>
<br>

Once you've made your graphic, leave the background layer transparent and make sure you save your image as a <b>.gif</b> or <b>.png</b> (and that your image host supports these types; some will convert your image to a jpeg when they upload it). This makes sure that the final image keeps the transparency.

  
</div></div>
</div>

<div class="page" id="pp-save-button">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-save-button">finding the save button</a>
	</div></div>
	

<div class="heading"><div class="main">
	lets play "hunt the save button" </div>
</div>
<div class="tutorial"><div class="main">
  Sometimes, a petpage you're making covers up the save button. While that makes no difference to the final page, it adds a layer of inconvenience when you're actually making it. So how do you save your page when there's no save button?<br><br><b>1. Zoom out. Level: A bit of a faff.</b><br>
If you have a large, absolutely position image - such as the layout of many graphical petpages - then the save button could just be hidden. Zoom the page out to around 20% so that your graphic is tucked in the corner, and the save button should be visible.<br><br><b>2. Tab to find it. Level: Slightly peeved.</b><br>
Upgrade level to <b>rather teed off</b> if you run a link directory, because there'll be a lot of tabbing for you. For a quicker way to find it, click in the URL bar, hold "shift", and tab exactly three times.<br><br>

The aim is to keep cycling through links until you find the save button. You'll know you've got it when none of your links are highlighted on the page; hit enter to press the save button.<br><br><b>3. Remove all coding. Level: Seriously?</b><br>
To use this method, bring up the developer tools of your chosen browser and find where all of the css is written. Highlight it. Delete it.<br><br>

This will, naturally, destroy your page - but it should bring up the save button again. Don't worry! When you save, your page will save the beautiful creation you intended and not the absolute mess that you've just created.<br><br>

You shouldn't ever need to use this one, only as a last resort if you can't find the save button any other way.<br><br><b>4. Remove all coding. Now tab. Level: Time for a new layout.</b><br>
I used to have to do this with my pets page. It's a pain. If you have a lot of inline-styles, then removing the main coding might not be enough to bring back your save button. It will definitely be on the page somewhere, so just keep tabbing...<br><br></div>
</div>
</div>


<div class="page" id="mi-centering">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-centering">no more «center»</a>
	</div></div>
	

<div class="heading"><div class="main">
	the «center» tag is depreciated, please don't use it</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
  The <b>«center»</b> tag is used a lot in Neopets code. It makes sense; it's quick, it's easy, and it does exactly what it says on the tin.<br><br>

With one huge flaw that makes it an absolute pain for the rest of us:<br><br><b>
Once you're inside a «center» tag you can't get out. There's no css command to cancel it, because it's not css.</b>
<br><br>
And that, that's the bad thing. <b>HTML</b> defines what content <i>is</i>, CSS defines how content <i>looks</i>. You don't mix those up.<br><br>

I'm not alone in disliking the center tag; it's been depreciated, which means that it's no longer part of the 'official' lexicon of code. In reality, it still works, but you should use one of the alternatives below.<br></div>
<div class="blurb"><div class="main"><br><b>1. Text-align: center</b><br><br>
Create a <b>.center</b> div style, and use that to center your text. To make images or divs listen to the text-align command, add <b>display: inline-block;</b> to their style.<br><br><textarea class="big" style="height: 80px;">.center {
	text-align: center;
}
</textarea><textarea class="big" style="height: 80px;"><div class="center">
This text will be centered.
</div></textarea><br></div></div><div class="off-blue"><div class="main"><br><b>2. Margin: auto</b><br><br>
Setting the left and right margin to auto will automatically center any item set to <b>display: block;</b> A div has display: block; as the default setting, but for some other elements you may need to specify this.<br><br><b>NB - </b> you need to specify a width for this to work.<br><br><textarea class="big" style="height: 100px;">
#main {
	margin: 0 auto;
	width: 1000px;
}</textarea><br></div></div><div class="blurb"><div class="main"><br><b>3. Margin: auto with absolute positioning</b><br><br>
The standard centering code above doesn't work if your #main div is absolutely positioned. To fix it, you need to add these lines of code:<br><br><textarea class="big" style="height: 160px;">
#main {
	position: absolute;
	margin: 0 auto;
	width: 1000px;
	left: 0;
	right: 0;
}</textarea></div>
</div>
</div>
</div>


<div class="page" id="pp-full-screen">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-full-screen">full screen layouts</a>
	</div></div>
	

<div class="heading"><div class="main">
	Using ratios for full screen layouts</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
  A while back I was trying to code a layout that relied on a percentage value of margin-top to position my divs. I discovered to my dismay that the percentage didn't work at all how I expected:<br><br><b>Margin-top and padding-top are calculated as a percentage of width, not as a percentage of height.</b><br><br>
  I admit, this made no sense to me at the time and caused a fair amount of frustration. But it actually has some fabulous uses for flexible layouts that expand to fill your screen.<br><br>
  First though, a quick alternative for anyone looking to use a percentage of height instead: set <b>position: absolute;</b> then you can use <b>top: 100%;</b> and it works as expected.<br><br></div>
<div class="blurb"><div class="main"><br><b>Creating our full screen background graphic</b><br><br>
  A very common style of petpage is one that uses a base image like the one below, where the content area is marked as part of the background graphic. What we want to do is make the graphic the full width of the screen, but make sure that our content text is always sitting inside our content area.<br><br><div class="center"><img src="http://i58.tinypic.com/5a017s.jpg" style="width: 800px;"><br><br><i>borrowing the layout for my maraquan gelert's page</i></div><br>
  There is a CSS property called <b>background-size</b> that would be ideal to use here, but unfortunately Neo blocks that one so this is the code to set our layout image as a full screen background. Note that we only set the width and not the height to avoid stretching our layout out of proportion.<br><textarea class="big" style="height: 140px;">.bg {
    top: 0;
    left: 0;
    width: 100%;
    z-index: -1;
}</textarea><textarea class="big"><img src="http://i58.tinypic.com/5a017s.jpg" class="bg" style="position: absolute;"></textarea>
This code sets our image to be the full width of the screen, starting from the top left corner, and with a z-index of -1 to sit behind the rest of our layout. Graphics ready, time to get the content area in place.<br></div></div>
<div class="off-blue"><div class="main"><br><b>Positioning our content area: using margin-top to locate a fixed point on our flexible-width graphic</b><br><br>

  The standard method of positioning our content area here would be to use <b>position: absolute</b> to pin the top left corner in place. We can't use pixels here, but we can certainly use percentages to position the left hand side. To calculate what percentage we need, we first create a layout with the background at it's natural size and position the content on that. When I do this, I get values of <b>top: 190px; left: 540px;</b> for the content area. The background graphic itself is <b>1600px</b> wide, giving me a percentage of <b>540/1600 is 34%</b> (to the nearest whole number).<br><br>
  For the top value, we are again taking our percentage value <b>relative to our width</b>. If we tried to take it relative to our height, we'd run into problems on screens that are a different ratio - like a tablet screen or a phone, for example. We've specified the width of the graphic, so everything else must be relative to the width. Our percentage is then <b>190/1600 is 12%</b>. Remember to set this for the margin-top value!
  <textarea class="big" style="height: 120px;">.content-area {
    left: 34%;
    top: 0;
    margin-top: 12%;
  }
  </textarea><textarea class="big"><div class="content-area" style="position: absolute;"></div></textarea></div></div>

<div class="main">
  <br><b>Sizing our content area: creating a box with a fixed ratio</b><br><br>
  The first thing we need to do is find our ratio for our content area.  Exactly the same principles apply - use the natural dimensions of the layout to work out the original pixel width and height, then apply maths as follows:<br><br><b>ratio percentage = <span style="text-decoration: underline;">height x 100</span></b><br><b style="padding-left: 160px;">width</b><br><br>
  So here, the pixel values that work are a height of 520px and a width of 730px, giving a ratio of 520 x 100 / 730 = 71%. To make the content area match the layout graphic above, you'd use 71% as the padding value in the code below. Now, enough maths and back to the CSS!
  <br><br><b>Why not use percentages like we did for the position? Why use ratios?</b> 
  <br>If we could set the <i>position</i> of the bottom right corner, this would be fine. And we can certainly calculate the distance from the right hand side of the screen - but the whole issue is that we don't know the height of the screen, so we can't set a percentage distance from the bottom of the screen. 
  How we fix this is to use <b>padding</b>, as giving padding a percentage value will calculate it based on width. Our solution is this:<br><ol><li>First, set the <b>content area</b> to the width we want it to be, but don't specify a height.</li>
    <li>Second, create a <b>ratio div</b> inside the content area that pushes it to the right height.</li>
    <li>Third, create a <b>content div</b> that we can actually write in, positioned so that it's the same size as the <b>ratio div</b>.</li>
  </ol>
  Which, when we code it all together, looks like this (leaving out the content area position to just focus on what we need for this part):
  <textarea class="big" style="height: 280px;">.content-area {
    width: 47%;
}
.ratio {
    width: 100%;
    padding-bottom: 71%;
}
.content {
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}
  </textarea><textarea class="big" style="height: 160px;"><div class="content-area" style="position: absolute;">
    <div class="ratio" style="position: relative;">
        <div class="content" style="position: absolute;">
            Write your content here!
        </div>
    </div>
</div></textarea>
Where did we get the 47% from? By doing <b>730 / 1600</b>, which was the width of the content area divided by the full width of the layout.<br><br>
And voila! That should be it - a content area that resizes itself to fit the background image, no matter how big your background image is. Don't believe me? I've used the same method on the box below - try resizing your browser to see it change size!<style>
.gcph-container {
	width: 20%;
	background: #f1c40f;
	text-align: center;
	margin: 15px auto;
	left: 0;
	right: 0;
}
.gcph-ratio {
	width: 100%;
	padding-bottom: 100%;
}
.gcph-content {
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
}
</style></div>
<div style="position: relative;">
<div class="gcph-container" style="position: absolute;">
  <div class="gcph-ratio" style="position: relative;"><div class="gcph-content" style="position: absolute;"><br><br>Size changing square!</div></div>
</div>
</div>


</div>
</div>



<div class="page" id="mi-crop-image">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-crop-image">cropping images in css</a>
	</div></div>
	

<div class="heading"><div class="main">
	Using a clipping div to 'crop' an image with css</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
  About six months ago (<i>edit: hah, more like 18 months ago now</i>) my laptop cough, spluttered, and froze it's last. End of the line. And it didn't even have the courtesy to wait until payday, so I replaced it with a notebook instead of a proper laptop.<br><br>

The notebook is fine, but it lacks image editing software. Cropping an image now involves saving it, uploading it, cropping through a website, then downloading again. It's a faff. I hate faff.<br><br>

So, instead I crop things with css.<br></div><div class="blurb"><div class="main"><br><b>Create your clipping div</b><br><br>
A clipping div is the final size of the image you want to display. The overflow is set to <b>hidden</b> so that only the part of the image inside the clipping div will be visible.<br><br><textarea class="big" style="height: 120px;">.clip {
  width: 200px;
  height: 100px;
  overflow: hidden;
}</textarea><br><b>Resize and position your image inside the clipping div</b><br><br>
If you're making a lot of images cropped the same (for example, all the layout previews on Beetle are cropped like this), then you can apply this to all images. If each of your images are different, then you can use inline styles to position and resize each one individually.<br><textarea class="big" style="height: 100px;">
.clip img {
	width: 100%;
	margin-top: -50px;
}</textarea>
And that's it, at it's basic level. If the code seems familiar to you, then a very similar code is used on a lot of layouts to make the pets images thinner or shorter. The <b>a</b> tag acts as the clipping div in that case.<br><br></div></div>
<div class="off-blue"><div class="main"><br><br><img src="//pets.neopets.com/cpn/jarazed/1/4.png" style="display: inline-block;"><div style="width: 200px; height: 100px; overflow: hidden; float: right; margin-top: 100px; margin-right: 230px; border: 8px solid #fff;"><img src="//pets.neopets.com/cpn/jarazed/1/4.png" style="width: 100%; margin-top: -50px; border: 0;"></div><br><br><br></div></div></div></div>



<div class="page" id="ul-horizontal-trophy">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#userlookup">userlookups</a> »
		<a href="#ul-horizontal-trophy">scrolling trophies</a>
	</div></div>
	

<div class="heading"><div class="main">
	removing the Horizontal scroll on the trophy section</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
  Getting the trophy section to behave on a userlookup can feel nigh on impossible. One of the common things to have an issue with is trying to shrink down the trophy area without introducing a horizontal scroll. Even if you resize the images to practically nothing, chances are that pesky scroll bar will still be there.<br><br>

Why?<br><br>

Because tables.<br><br>

The userlookup uses a lot of nested tables all over the place, most of which have got their heights and widths manually set. The problem comes from the fact that the trophy tables are all set to have certain widths, or to have 100% width, which the table padding, borders, assorted mystical runes and other such baggage are added on top of. Even if you set the width of the <b>#usertrophy</b> section, the tables will do their own thing.<br><br>

To control them, add these lines of code:<br><br><textarea class="big" style="height: 140px;">
#usertrophies {
  width: 700px;
}
#usertrophies table {
  width: 665px !important;
}</textarea>
And voila! No more horizontal scroll for you. You do need the tables to be quite a bit smaller, so don't be surprised by the big difference in widths between the two.<br><br></div></div></div>




<div class="page" id="mi-inline-block-whitespace">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-inline-block-whitespace">spaces with inline block</a>
	</div></div>
	

<div class="heading"><div class="main">
	Removing whitespace between inline block elements</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
Inline block is marvellous. I love it. It's brilliant.<br><br>

But.<br><br>

When something is 'inline', that means that the text around it matters - in particular the spaces between your code. Sometimes, this is really useful; you can add a couple of spaces between your affiliate buttons to make them look nicer, for example. Sometimes it's a pain.<br><br><style>
.wspacedemo {
	width: 200px;
	height: 100px;
	background: #f1c40f;
	display: inline-block;
}
</style><div class="center">
<div class="wspacedemo"></div>   
<div class="wspacedemo"></div>
</div><br>

These two blocks show the space that I'm talking about. How do we get rid of it? Two ways.<br><br></div><div class="blurb"><div class="main"><br><b>1. Remove all spaces in your code</b><br><br>
This one's fairly obvious - if the spaces and new lines in your code are causing problems, remove them. It works very well if you've only got a couple of things. If you have a lot, or if this is the basis of your layout, it can get very messily very easily.<br><br></div></div>
<div class="off-blue"><div class="main"><br><b>2. Set whitespace size to 0</b><br><br>
Well, not the whitespace as such - it's the font-size and the line-height that we're shrinking down. Apply this code to the parent / container div, and make sure to reverse it for any other divs so that the rest of your font is not affected.<br><textarea class="big" style="height: 280px;">
.parent {
  font-size: 0;
  line-height: 0;
}
.child {
  font-size: 10px;
  line-height: 14px;
  display: inline-block;
  width: 200px;
  height: 100px;
  background: #f1c40f;
}
</textarea><textarea class="big" style="height: 100px;"><div class="parent">
  <div class="child"></div>
  <div class="child"></div>
</div></textarea><br>

Which produces:<br><br><div class="center" style="font-size: 0;">
<div class="wspacedemo"></div>   
<div class="wspacedemo"></div>
</div><br>

Much better! Now you can completely control the spacing of your divs by setting the margin, and not worry about any pesky whitespace creeping in!
<br></div>
  
  
</div></div></div>



<div class="page" id="mi-comments">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-comments">comments</a>
	</div></div>
	

<div class="heading"><div class="main">
	Adding in comments that the filters won't remove</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
Anyone who ever codes off Neopets will tell you that comments are fabulous things. They allow you to put notes in to explain the code, to remind your future self why you did something, to put a quick notation by a random <b>«/div»</b> telling you exactly <i>which</i> of the many nested divs that one is ending... Glorious, glorious things.<br><br>

Neopets strips them out. All of them. The whole lot.<br><br>

Neopets, no. Bad Neopets.<br><br>

Thankfully, the workarounds are simple.<br></div><div class="blurb"><div class="main"><br><b>Put your comments in the ID or class of an empty div </b><br><br>

These work best for short comments.<br><textarea class="big" style="height: 80px;"><div>
    Some fancy content here
</div><div class="end-left-column"></div></textarea>

And that's it! Unless you've applied a general style to the <b>div</b> element, your comment divs will be completely invisible on your page. You can use the same technique for comments in your CSS:
<textarea class="big" style="height: 100px;">table table table table {
    do the thing;
}
.t4-is-the-guild-sidebar { }</textarea></div></div>
<div class="off-blue"><div class="main">
<br><b>Use a comment div set to display: none;</b><br><br>

If you need longer comments, then you can change the display settings to make a div that will be there in the code but not show up at all on your page:<br><textarea class="big" style="height: 80px;">
.comment {
    display: none;
}</textarea><textarea class="big" style="height: 100px;"><div class="comment">
    You can write whatever you want here, and it won't show up on your page. You could put an entire paragraph in this comment!
</div></textarea></div></div></div></div>



<div class="page" id="ul-trophy-width">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#userlookup">userlookups</a> »
		<a href="#ul-trophy-width">fixing trophy width</a>
	</div></div>
	

<div class="heading"><div class="main">
	Making the trophy section line up with the other sections</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
Have you ever noticed the pesky bit of overhang on a userlookup, where the first and second rows (info, collections and shop on the first row and pets on the second) are ever so slightly wider than the trophies? And you fix the width on the trophies but then <i>everything else moves as well</i>? Maddening. Guess why it happens?<br><br>

TABLES<br><br>

Neo, we have had words about this. Anyway, there's two fixes for you:<br><br><b>1. Set the width of each section manually</b><br>
This works just fine if you are handling your own lookup, because you always know whether there will be a shop or not. All you do is specify the width of the trophies and pets to be the same - say 1000 px - and split up the width for the user info, collections and shop however you want. Or, even easier, just make the shop that tiny bit narrower until everything lines up. Simples!<br><br>

However, if you're building a premade you can't do this. The userinfo and collections need to be able to stretch to fill in the gap if there's no shop, so setting the widths manually won't work.<br><br><b>2. Add a negative margin to the trophies</b><br>
The overhang is caused by the tables lining up with extra table cells to the right of the trophies. So, easy way to account for this is to add <b>margin-right: -10px;</b> to the code for the <b>#usertrophies</b> div. This causes the extra table cells to overlap with the trophies, so the total width is what you expect it to be. Perfect!
</div></div></div>


<div class="page" id="mi-image-fade">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-image-fade">image fade on hover</a>
	</div></div>
	

<div class="heading"><div class="main">
	fading an image on hover to reveal text underneath</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

Used to be that you could set opacity in the code, which was a very useful thing to be able to do. However, nowadays Neo strips this out, so we need to use a slightly different method of creating a fade effect.<br><br>

Our basic structure is to create <b>one picture div, with the image set as the background</b> and inside that create <b>a second overlay div with a semi opaque background</b>. I've used white, but use whichever colour is appropriate - <a href="/~cecira">TKM backgrounds</a> has white and black but you may need to make your own for other colours. Any text or content that we want to appear when we fade away the picture div goes in the second overlay div.<br><br>

Once we have this structure, we just need the hover effect. To do this, we set <b>.overlay {display: none;}</b> which hides our overlay div by default, then <b>.picture:hover .overlay {display: block;}</b> which shows our overlay when we hover over the base image.

<textarea class="big" style="height: 300px;">
.picture {
    width: 300px;
    height: 300px;
    background: url("//pets.neopets.com/cpn/samitan/1/4.png");
}
.overlay {
    width: 100%;
    height: 100%;
    background: url("http://i.imgur.com/DqooNq2.png");
    display: none;
}
.picture:hover .overlay {
    display: block;
}
</textarea><textarea class="big" style="height: 120px;"><div class="picture">
    <div class="overlay">
        This text only appears when you hover!
    </div>
</div></textarea><br></div><div class="blurb"><div class="main"><br><style>
.ih-picture {
	width: 300px;
	height: 300px;
	background: url("//pets.neopets.com/cpn/samitan/1/4.png");
	margin: 0 auto;
	text-align: center;
}
.ih-overlay {
	width: 100%;
	height: 100%;
	background: url("http://i.imgur.com/DqooNq2.png");
	display: none;
	color: #000;
}
.ih-picture:hover .ih-overlay {
	display: block;
}
</style><br><div class="ih-picture">
	<div class="ih-overlay">
		<br><br><br><br><br>This text only appears when you hover!
	</div>
</div><br><br></div></div><div class="off-blue"><div class="main"><br>

Note that we need to specify the width and height of <b>.picture</b> - this is because our image is a background rather than a main picture. If you have a lot of these, then save time by specifying the width, height and background image of each picture using inline coding. This allows you to change the specifics each time to match each different image you are using.<br><textarea class="big"><div class="picture" style="width: 300px; height: 300px; background: url('//pets.neopets.com/cpn/samitan/1/4.png');"></div></textarea></div>
</div></div></div>


<div class="page" id="ul-view-source-code">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#userlookup">userlookups</a> »
		<a href="#ul-view-source-code">viewing source code</a>
	</div></div>
	

<div class="heading"><div class="main">
	dodging the capchas to view the source code of a lookup</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

If you've every tried to view the source code of a userlookup or petlookup - perhaps to help someone fix a bug, or to see how something was done - you'll know that the captchas are a rather immense thorn in everyone's side. If you go for the standard <i>View Page Source</i> option, all you see is the source of the captcha page and nothing at all to do with the page you want.<br><br>

So, is there a way to look at source code nowadays? Of course there is - and it's in some ways more useful than viewing the full page source. What you do is bring up the <b>web developer tools</b> - in particular, you want the <b>inspect element</b> section. In Chrome and Firefox, you do this by right clicking on the part of the layout you want to see the code for, then selecting <i>Inspect Element</i>. In Chrome you can also find them by pressing <i>Ctrl</i> and <i>Shift</i> and <i>I</i> all together. In Internet Explorer, press <i>F12</i> to bring up the developer tools, then go to the <i>Inspect Element</i> section. When you do this, you see the web developer tools (these are the Chrome version):
<br></div><div class="blurb"><div class="main"><br><div class="clip"><img src="http://i.imgur.com/Y5ALSgq.png"></div>
<br>
And it's as easy as that! You can expand or collapse sections of code until you find what you want, and the bottom panel will show you all the relevant bits of CSS for the element you've chosen. Magic stuff!

</div>
</div></div></div>



<div class="page" id="mi-z-index">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-z-index">understanding z-index</a>
	</div></div>
	

<div class="heading"><div class="main">
	stacking and layering parts of a layout with z-index</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

Z-index is easy stuff, right? You give it a number, and things with a higher number overlap things with a lower number. Simples.<br><br>

Um. Well, that's the general gist of it - but you need to keep two very important things in mind:<br><br><b>1. z-index only works on items with a position specified</b><br>
That's either <i>absolute, relative or fixed</i>. Quite often <i>absolute</i> or <i>fixed</i> will change your layout; if that's the case, go for <i>relative</i>, it's the least likely to cause disruption.<br><br><b>2. z-index stacks</b><br>
What do I mean by <b>stacks</b>? I mean that it if you have nested divs, they form a group that will obey a single z-index as a whole. You can still specify z-indexes inside the group, but they can't sit on top of something the whole group is behind.<br><br>

Consider this scenario: <b class="red">Red</b>, <b class="blue">Blue</b> and <b class="green">Green</b> are positioned to overlap. They have no z-indexes applied, and so they appear in the order they were written in the code; <b class="red">red</b> was written first and so appears at the bottom, <b class="green">green</b> was written last and so appears at the top.<br><br><style>
.s-red {
	width: 125px;
	height: 75px;
	background: #e74c3c;
	top: 0;
	left: 0;
}
.s-blue {
	width: 125px;
	height: 75px;
	background: #3498db;
	top: 50px;
	left: 50px;
}
.s-green {
	width: 125px;
	height: 75px;
	background: #35cf76;
	top: 25px;
	left: 100px;
}
.s-yellow {
	width: 225px;
	height: 150px;
	background: #f1c40f;
	top: 10px;
	left: 25px;
}
.s-cont {
	width: 275px;
	height: 150px;
	margin: auto;
}
</style><div class="center">
<div class="s-cont" style="position: relative;">
<div class="s-red" style="position: absolute;"></div>
<div class="s-blue" style="position: absolute;"></div>
<div class="s-green" style="position: absolute;"></div>
</div></div>

<br>
Now, we change things. <b class="red">Red</b> gets a z-index of 3, <b class="blue">blue</b> gets a z-index of 4, and <b class="green">green</b> gets a z-index of 2 (and everything is absolutely positioned to make sure the z-indexes work). As expected, <b class="blue">blue</b> is on top and <b class="green">green</b> moves to the bottom.<br><br><div class="center">
<div class="s-cont" style="position: relative;">
<div class="s-red" style="position: absolute; z-index: 3;"></div>
<div class="s-blue" style="position: absolute; z-index: 4;"></div>
<div class="s-green" style="position: absolute; z-index: 2;"></div>
</div></div>
<br>
Now we change things again - we introduce <b class="yellow">Yellow</b> (I apologise for the colour clash). <b class="yellow">Yellow</b> has a z-index of 1, and both <b class="blue">blue</b> and <b class="green">green</b> are inside it.<br><br><div class="center">
<div class="s-cont" style="position: relative;">
<div class="s-red" style="position: absolute; z-index: 3;"></div>
<div class="s-yellow" style="position: absolute; z-index: 1;">
<div class="s-blue" style="position: absolute; z-index: 4; left: 25px;"></div>
<div class="s-green" style="position: absolute; z-index: 2; left: 75px;"></div>
</div>
</div></div>
<br>
Now, <b class="blue">blue</b>, <b class="green">green</b> and <b class="yellow">yellow</b> have formed a <i>stack</i>. They behave as one thing and they obey the parent element - <b class="yellow">yellow</b>, which has a lower z-index than <b class="red">red</b> and so sits at the back.<br><br>

Inside <b class="yellow">yellow</b>, <b class="blue">blue</b> sits on top of <b class="green">green</b> because it has the higher z-index. It just can't sit on top of something higher than the stack as a whole.<br><br>

So how would you get <b class="blue">blue</b> and <b class="green">green</b> back to the top? You have to change the whole stack - either take them out of <b class="yellow">yellow</b> entirely, or move the entire stack to sit on top of <b class="red">red</b>. It's a pain, but at least now it's a pain that you know about!<br></div></div></div>


<div class="page" id="mi-css-selectors">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-css-selectors">CSS Selectors</a>
	</div></div>
	

<div class="heading"><div class="main">
	CSS selectors 101 aka what the hell are these</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

CSS Selectors are what you use to define which bit of code belongs to which part of the layout. It's the bit that goes <b>#main</b> or <b>.content</b> or <b>body</b>. Here's a quick guide to what means what in the selector world:<br><br></div><div class="blurb"><div class="main"><br><table><tr><td><b>#main</b></td>
<td>Using the hashtag defines an <b>id</b> of a single object. Only one object on the userlookup can use this ID. Because of this, IDs locate specific parts of the page - we use them for links.</td>
</tr><tr><td><b>.content</b></td>
<td>A full stop defines a <b>class</b> which can be used for multiple objects on the page that all look the same - like each of the posts on this blog.</td>
</tr><tr><td><b>body</b></td>
<td>A word without anything in front of it defines an <b>element</b> - that is, part of the HTML. On Neopets, we are quite limited; we have <b>body, b, i, a, div, span, img</b> and other such elements, but out in the real world you have <b>section, header, footer</b> and all sorts of useful bits and pieces.</td>
</tr><tr><td><b>a:hover</b></td>
<td>The colon here defines a <b>state</b> - when the <b>a</b> element is being hovered over. You usually only use this for <i>hover</i> on Neopets, but you can also use these for <b>:first-child</b> or <b>:last-child</b> in more extensive code, and believe me, you will grow to love these.</td>
</tr><tr><td><b>*</b></td>
<td>The asterix stands for <b>everything</b> and it applies the code to every single element on your layout. Use with care! Currently, you can only use asterix' on guild layouts - they get filtered out of petpages.</td></tr></table><br></div></div>
<div class="off-blue"><div class="main"><br>
You can apply the same code to <b>multiple selectors</b> by putting them on the same line, separating each one with a comma (but make sure to leave off the last comma):<br><textarea class="big" style="height: 80px;">.thing-one, .thing-two, #another-thing {
  color: #000;
}
</textarea>
You can also <b>scope</b> your selectors so that you can specify <b>all link elements inside the navigation div</b>. Do this by writing the selectors in a list with no commas between them:<br><textarea class="big" style="height: 80px;">.navigation a {
  color: #00ffff;
}
</textarea><br>
Or you can <b>combine</b> selectors, so that you specify <b>only img elements that have the class small</b> by putting a full stop between the two selectors:<br><textarea class="big" style="height: 80px;">img.small {
  width: 100px;
}
</textarea>
On Neopets, it's one class and one ID maximum per item. Occasionally multiple classes will be accepted, but it's safer to assume that you can't use them. I end up with a lot of classes like <b>big-left</b> or <b>tall-yellow</b> when I want to apply multiple styles, or else nesting <b>«div class="big"»  «div class="left"»  «/div»  «/div»</b> to get the code from both applied.<br><br>
Out in the big wide yonder, I could just create one class for <b>big</b> and separate classes for <b>left</b> and <b>right</b> and apply multiple classes to the same element. It saves a lot of repeated code! But alas, when on Neopets, you learn to compromise.<br><br>
One final note for you: a lot of people say that it's better to use <b>classes</b> and avoid <b>IDs</b> as much as possible. This way, the ID is only used to identify a place in the code for a link to go to or a scr<i></i>ipt to hook into. It helps keep your page running fast if you have scripts going (for example, a script that takes what you write into a form and adds it to a database needs to know exactly where the form element is) and is just generally tidier to stick to classes where possible. Not a big deal for petpages, but something to keep in mind!<br><br></div></div></div></div>

<div class="page" id="mi-cascades">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-cascades">Cascades and !important</a>
	</div></div>
	

<div class="heading"><div class="main">
	CSS selectors II aka why the hell is this doing that</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

What is cascading in CSS? It's the set of rules that defines exactly which bit of code applies if you've got more than one possible contender. As a very simple example, say we specified that <b>links</b> should be <b class="blue">blue</b>, but links that you hover over should be <b class="red">red</b>. A link that is being hovered over is still a link; the reason it obeys the <b class="red">red</b> command is because <b>a:hover is more important than a in the cascading order</b>.<br><br>
  Well, that's very nice to know, but how can we use it? As <a href="/userlookup.phtml?user=shinning123">Shingie</a> (she who owns That Ki<i></i>lls Me and Lolwhut) explains:<br><div class="big" style="height: auto;">
    On the distinction between the ID and classes.... 
    you can apply an id and class to an element. i.e., <b>«div class="module" id="black"»</b> But when they have conflicting declarations:<br><br><div style="margin-left: 50px;">
      .module {<br><span style="display: inline-block; width: 10px;"></span>background: #fff;<br>
      }<br><br>

      #black {<br><span style="display: inline-block; width: 10px;"></span>background: #000;<br>
      }<br></div>
<br>
The interesting thing I discovered is that the id overrules the class every time. So in that case, the "ID" is stronger than the class, and the div will have a black background.
  </div>
  So we use the <b>class to describe the general style</b> but for individual elements we can override the general style by using the <b>ID to describe the specific style</b>. Incredibly useful.<br><br>
  The full cascading order is below; use this to work out which part of the CSS will apply to any section of the layout (lowest importance first):<br></div><div class="blurb"><div class="main"><table><tr><td style="width: 200px;">
        <b>a</b>
      </td>
      <td>
        General style applied to an element sits right at the bottom of the pile
      </td>
      </tr><tr><td>
        <b>a:hover</b>
      </td><td>
        Specifying a <i>state</i> of an element takes priority over the style for the element itself  
      </td>
    </tr><tr><td>
        <b>table a</b>
      </td>
      <td>
        Multiple layers of elements specified - here all links inside tables. The more you specify, the more important your code will be.
      </td>
    </tr><tr><td>
        <b>.nav</b>
      </td>
      <td>
        Classes override any general style applied to elements
      </td>
      </tr><tr><td>
          <b>a.nav</b>
        </td>
        <td>
          Linking a class to a specific element is more important than just the class itself
        </td>
    </tr><tr><td>
        <b>.nav table a</b> 
      </td>
      <td>
        Just like with elements, the more layers we specify with our class, the more important we are.
      </td>
    </tr><tr><td>
        <b>#link</b>
      </td>
      <td>
        IDs override the lot...
      </td>
    </tr><tr><td>
        <b>«a style="color: red;"»</b>
      </td>
      <td>
        ... except for inline styles, which are the final authority.
      </td>
    </tr></table><br></div></div>
    <div class="off-blue"><div class="main"><br><b>What happens if two things are equal in the cascade?</b><br><br>
  The final piece of the cascade is the <b>order you write the code in</b>. If everything else is equal, then the bit of code that appears first will be ignored in favour of whichever code came later.<br><br><b>The <i>!important</i> keyword</b><br>
  Sometimes, we can't get code to go in the right cascading order. This happens a lot with userlookups where TNT defines a lot of things with inline styles (like the widths of their tables) - inline styles sit at the very top of the cascade, there's no way we can touch them.<br><br>
  When this happens we use <b>!important</b> to override the standard cascade order and make sure our code is listened to:<br><textarea class="big" style="height: 80px;">.nav {
    color: red !important;
}</textarea>
  Be careful using <b>!important</b>. In our <b>.nav</b> example above the colour will always be red - you won't be able to change colour when you hover over a link. Unless, that is, you specify <b>.nav a:hover { color: blue !important; }</b> - but the more you do this, the harder your code is to navigate. Userlookups aside, try to keep things within the standard cascading order and avoid using <b>!important</b> wherever possible.

</div></div></div></div>



<div class="page" id="pp-columns">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-columns">columns three + one ways</a>
	</div></div>
	

<div class="heading"><div class="main">
	Three ways to build column layouts and one to be aware of</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

So, you're making a petpage. Where to start? How about them columns? Columns sound good. These are some common methods; they suit slightly different scenarios, so choose whichever works best!<br><br><b>1. Specify positioning</b><br>
  With this method, you manually specify where each column will be on your page using the positioning attributes (<i>top: 100px; left: 100px;</i>). <b>NB</b> - on petpages, you need to put your <i>position: absolute;</i> as an inline style else the filters will throw a hissy fit at you.<br><textarea class="big" style="height: 220px;">
.side {
    top: 30px;
    left: 100px;
    width: 100px;
}
.main {
    top: 30px;
    left: 130px;
    width: 500px;
}
</textarea><textarea class="big" style="height: 60px;"><div class="side" style="position: absolute;"></div>
<div class="main" style="position: absolute;"></div></textarea><i>Use this style when:</i> <br>
  You want one (or more) of your columns to have <i>position: fixed</i> <br>
  It's important that your columns are independant - ie, changes to one will not affect the other<br>
  It doesn't matter if your columns are different heights<br>
  It matters exactly where on the page your column is (eg to match a graphical background)<br><br><b>2. Use inline divs</b><br>
  This method doesn't specify <i>where</i> your columns are so much as <i>which order</i> your columns are in. It makes them sit next to each other on the page as though they were words in a line of text - and if your text is centered or right aligned or justified, your columns will be the same. Control the space between your columns by increasing or decreasing the margin.<br><textarea class="big" style="height: 260px;">
.side {
    display: inline-block;
    vertical-align: top;
    margin: 30px;
    width: 100px;
}
.main {
    display: inline-block;
    vertical-align: top;
    margin: 30px;
    width: 500px;
}
</textarea><textarea class="big" style="height: 60px;"><div class="side"></div>
<div class="main"></div></textarea><b>Quick note</b> - the <i>vertical-align</i> specifies which parts of your columns line up with each other. Here, we've asked for the top of each div to line up; you could line up the middle or the bottom as well (but it would look strange for our columns).<br><br><i>Use this style when:</i><br>
  Your layout is flexible, eg the columns expand to fit a larger screen<br>
  You can't be asked to reposition your columns if you change one of the widths slightly<br>
  You want your columns centered on the page <i>(use text-align: center on the body to do this)</i><br>
  You want several columns covered by the same class <i>(so here, we could easily add a second <b>side</b> div to the right of <b>main</b>)</i><br>
  It doesn't matter if your columns are different heights
  <br><br><i>Beware:</i><br>
  Inline divs behave like text, which means two things - if there's not enough space on the screen, they will go to the next line; and if you have any spaces or new lines in your code, these will leave a gap between your columns. To fix the former, put your columns in a wrapper div and specify the minimum width of your layout on that. To fix the latter, <a href="#mi-inline-block-whitespace">look here</a>.<br><br><b>3. Use tables!</b><br>
  Ahahaha, Emma, you joker you.<br><br>
  
  Nuh uh. Dear padawan, allow me to introduce you to <i>CSS tables</i>. The key things about them is that the <i>divs</i> are still exactly that - divs. All of the table behaviour is handled in the CSS, which gives the control that we don't have with HTML tables.<br><br>
  So, CSS tables give you the familiar layout of rows and columns that we can easily build a layout off - and like a table, we can ask the columns to be fixed or fluid width, and we can make them all match the height of the tallest div without having to hard-code a value in.<br><textarea class="big" style="height: 240px;">
.wrapper {
    display: table;
    width: 100%;
}
.side {
    display: table-cell;
    width: 100px;
}
.main {
    display: table-cell;
}
</textarea><textarea class="big" style="height: 100px;"><div class="wrapper">
    <div class="side"></div>
    <div class="main"></div>
</div></textarea><i>Use this style when:</i><br>
  You don't want to specify a width for the <i>main</i> div - you just want it to fill whatever space is left<br>
  You want all your columns to be the same height<br>
  You want to <b>vertically center your content</b>. Set <i>vertical-align: middle</i> and BAM. Sorted.<br>
  You feel an incurable desire to put in an HTML table. Don't do that. Do this instead.<br><br><i>Beware:</i><br>
  Some things go a bit funky inside table-cells. They won't scroll, so you have to create a separate div inside and set that to <i>overflow: auto</i>. And you can't set <i>height: 100%</i> (or any percent) on something inside the div - firefox throws wobblies at this. You just need to hardcode the height instead, so a fairly simple fix.
  
  <br><br><b>+ 1. Use floated divs</b><br>
 Floating divs works very similar to <b>inline divs</b> except that you can only float <i>left</i> or <i>right</i>. With more complex layouts you can also run into problems with clearing floats, which I'll cover <a href="#mi-clearing-floats">in another post</a>.<br><textarea class="big" style="height: 220px;">.side {
	float: left;
	margin: 30px;
	width: 100px;
}
.main {
	float: left;
	margin: 30px;
	width: 500px;
}</textarea><textarea class="big" style="height: 60px;"><div class="side"></div>
<div class="main"></div></textarea><i>Use this style when:</i> <br>
  ... When an inline-block just won't do?<br>
  I'm going to level with you, if you're not attached to floats on an emotional or spiritual level, I'd avoid using them for layout building.<br><br><br>So there you have it! Three (plus one) fabulous ways of populating your pages with columns. Now go break some eggs, coding style.<br><br></div></div></div>



<div class="page" id="mi-border-radius">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-border-radius">using border radius</a>
	</div></div>
	

<div class="heading"><div class="main">
	rounded corners and circular images with border radius</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

Border-radius is a fabulous code that allows you to give things rounded corners. You can use it on userlookups or petpages, but be aware that for petpages you need to use <i>inline styles</i> to make the code work.<br><br></div><div class="blurb"><div class="main"><br><b>Basic usage on a userlookup</b><br><textarea class="big" style="height: 80px;">#userneopets img {
    border-radius: 75px;
}</textarea><b>Basic usage on a petpage</b><br><textarea class="big"><img src="//pets.neopets.com/cpn/aethelar/1/2.png" style="border-radius: 75px;"></textarea>
  Both of these give the same result:
  <div class="center">
    <img src="//pets.neopets.com/cpn/accury/1/2.png" style="border-radius: 83px;"></div><br>
  
  You can see here that applying a radius of <i>half the height and width</i> gives us a circular image (the pet is 150px square to start). But what if we want something a little more interesting?<br><br></div></div><div class="off-blue"><div class="main"><br><div class="f">
    <img src="//pets.neopets.com/cpn/accury/1/3.png" style="border-radius: 10px;"><br><b>border-radius: 10px;</b><br>
    Applying just one value rounds all the corners the same amount
  </div>
  <div class="f">
    <img src="//pets.neopets.com/cpn/accury/1/3.png" style="border-radius: 10px 30px;"><br><b>border-radius: 10px 30px;</b><br>
    With two, the first value applies to <b>top-left</b> and <b>bottom-right</b>, and the second value applies to <b>top-right</b> and <b>bottom-left</b>
  </div>
  <div class="f">
    <img src="//pets.neopets.com/cpn/accury/1/3.png" style="border-radius: 10px 20px 30px 40px;"><br><b>border-radius: 10px 20px 30px 40px;</b><br>
    One value per corner, in clockwise order starting with <b>top-left</b>
  </div>
  <div class="f">
    <img src="//pets.neopets.com/cpn/accury/1/3.png" style="border-radius: 10px 80px;"><br><b>border-radius: 10px 80px;</b><br>
    You can set your border radius to be larger than your image for some very strange effects!
  </div>

</div></div></div></div>


<div class="page" id="mi-sunnys-tips">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-sunnys-tips">sunny's coding tips</a>
	</div></div>
	

<div class="heading"><div class="main">
	guest post: sunny's tips for coding</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

<b>Use a real time HTML editor</b> <br>
  As wonderful as TNT's method of editing pages is, you need to be able to see your minor changes in real time. Sometimes a pixel or two difference can make or break a layout, and having to pull up a new page to preview it gives you just enough of a sensory memory gap to cause problems. Your sensory memory (in this case the raw visual data from the preview before you made changes) only lasts for about 200 - 500 milliseconds. Your working memory can last a bit longer, usually around 10-15 seconds, give or take a few. If you are running on a slow connection, even that can be a bit too long. 
  <br><br><b>Unless you're really good at visualizing stuff in your head, you need to make a rough mock-up.</b><br>
  Mocking up a layout is an important step. I use it as a time to not only dream about what I'd ideally like the layout to look like, but it also allows me to start to picture the big components of the layout before I even begin making it. Say I drew in a scroll box. I'd more than likely start thinking about how the best way to create that scrollbox would be. I'd maybe even label it something like <i>Div - Scroll</i>.  Even if you're not an artist, it doesn't take much talent to make a simple mock up, even if it's only basic shapes such as boxes and circles. It helps you keep your original vision, and also allows you to find the corner and edge peices of the jigsaw that is your layout.<br><br><b>There's tools out there to teach and help you.</b><br>
  There's tons of websites, books, and even applications now that offer to teach you how to code HTML and CSS layouts. If you're looking for books, try looking at bookshops and libriaries near the computer how-to books. If you're looking for websites, a simple search engine can open up a world of possibilities. And applications are pretty easy to find as well.<br><br>
  There's also pretty cool extensions for certain browsers to help design geeks like myself. I love <b>Colorpeek</b> which allows me to eyedrop hex codes from images and websites. Other extensions can help you view sources of web pages, or do other nifty things!<br><br><b>Don't be afraid to ask for help, or try new things that may not work.</b><br>
  Thomas Edison tried hundreds of times to make the lightbulb work. Coding often feels similar to making a lightbulb. Things aren't gonna work out, you're gonna have to scrap parts of your mockup because you don't know how to code that section yet, or you'll miss a div somewhere and your scrollbox will start to combine with others. Things will happen, but that's okay. Mess ups are part of learning, and I've made plenty in my time. Feel free to ask others for help, such as experienced coders, or friends of yours on the boards. You never know who may have a bright idea on how to fix certain issues. <br><br><div class="center">
    <i>Sunny runs <b>Coding Revolution</b>, a site that offers premade and skeleton layouts.</i><br><a href="/~Revolution"><img src="http://orig09.deviantart.net/b73d/f/2016/132/b/8/codingrevolutionbyjewel_by_nicegingy-da288md.gif" border="0"></a>
    <a href="/~Revolution"><img src="http://orig09.deviantart.net/b73d/f/2016/132/b/8/codingrevolutionbyjewel_by_nicegingy-da288md.gif" border="0"></a>
    <a href="/~Revolution"><img src="http://orig09.deviantart.net/b73d/f/2016/132/b/8/codingrevolutionbyjewel_by_nicegingy-da288md.gif" border="0"></a>
  </div><br></div></div></div>



<div class="page" id="mi-clearing-floats">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-clearing-floats">clearing floats</a>
	</div></div>
	

<div class="heading"><div class="main">
	most problems with floats can be solved with proper clearing</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
Floating is absolutely excellent at what it does, but one of the main issues it has is how different floated elements interact with each other. Take the images below as an example - both pictures are <b>floated left</b> with some text around them.<br><br><img src="//pets.neopets.com/cpn/aethelar/2/3.png" style="float: left; margin: 0 8px;">If you don't have enough text here...<br><img src="//pets.neopets.com/cpn/aethelar/2/3.png" style="float: left; margin: 0 8px;">Then your next image ends up overlapping. You can fix this by putting in a lot of <b>«br»</b> to make space, but if you change the size of your images - or of your text, or resize your content area - you'll need a different number of <b>«br»</b> and have to redo it.<br><br>
  Another issue. is if you have something floated inside another div, the containing div <i>won't expand to contain the float</i>. You end up with something like this:<br><br><div class="yellown" style="height: auto; padding: 15px;">
    <img src="//pets.neopets.com/cpn/aethelar/3/3.png" style="float: left; margin: 8px;">The containing div ignores the picture and only expands to contain the text here.
  </div><br style="clear: both;">
  What you want to do is to <i>clear the floats</i> - this draws a line under your floated image and pushes all your new content underneath it. We can do this two ways.<br><br></div><div class="blurb"><div class="main"><br><b>{ clear: both; }<br></b><br>
  This CSS command clears the floats of everything above it and is very easy to use. You can either create a <b>.clear</b> class for the code above or use it as inline styles like I've done here:<br><textarea class="big" style="height: 120px;"><img src="//pets.neopets.com/cpn/aethelar/1/3.png" style="float: left;">
Use the clear style here: <br style="clear: both;"><img src="//pets.neopets.com/cpn/aethelar/1/3.png" style="float: left;">
And this image doesn't overlap! </textarea><img src="//pets.neopets.com/cpn/aethelar/1/3.png" style="float: left; margin-right: 8px;"><br>Use the clear style here <br style="clear: both;"><br><img src="//pets.neopets.com/cpn/aethelar/1/3.png" style="float: left; margin-right: 8px;"><br>And this image doesn't overlap! <br style="clear: both;"><br><br></div></div><div class="off-blue"><div class="main"><br><b>Use overflow: auto on the containing div<br></b><br>
This one works best when you have a floated element inside another div already, else you're creating a whole load of extra divs for yourself. But for our second example above it's perfect:<br><textarea class="big" style="height: 180px;">.container {
  width: 400px;
	background: #f5f5f5;
	overflow: auto;
}
.container img {
	float: left;
}
</textarea><textarea class="big" style="height: 100px;"><div class="container">
  <img src="//pets.neopets.com/cpn/aethelar/1/3.png">
  Now the container will automatically resize to fit the floated image!
</div></textarea><div class="yellown" style="height: auto; padding: 4px; overflow: auto;">
    <img src="//pets.neopets.com/cpn/aethelar/1/3.png" style="float: left; margin: 8px;">
    Now the container will automatically resize to fit the floated image!
  </div>
  <br>If you've used <b>overflow: auto</b> before you've probably used it make a div <b>scroll</b> if it gets too much content. The scrolling will only work when you set a height; because we haven't set a height here, the div expands to contain the floats. <b>However</b> we have set a width - if you tried to put a picture in that was too wide, you would get a horizontal scroll bar here.
<br></div>
</div></div></div>




<div class="page" id="pp-paraphernalia">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-paraphernalia">hiding petpage fluff</a>
	</div></div>
	

<div class="heading"><div class="main">
	removing the petpage paraphenalia from your layout</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
I'm using <i>petpage paraphenalia</i> to refer to the Neopet's banner and copyright text at the top and bottom of each petpage. To hide both areas we need to uniquely identify that area of the layout and set <b>display: none;</b><br><br>
  Let's start with the <b>top banner</b>. It has no ID or class to identify, so we target the table instead. We can't hide only the Neopets table and not our own, so we <i>hide all tables</i> and then <i>unhide our tables</i>. We can identify our own tables with a class of our own, but it's easy to target all tables inside one of our other divs. I tend to use either <b>.main .content</b> or <b>.layout</b> in some part of the layout building, so I use those.<br><textarea class="big" style="height: 140px;">table {
    display: none;
}
.content table {
    display: table;
}</textarea><br>
  The <b>copyright text</b> looks easier at first - it's all marked with a <b>.sf</b> class. However, and just to be contrary, that's only if you view the page in English. In other languages only <i>parts</i> of the text are inside that class, so only parts of it would be hidden. Please feel free to rage at the inconsistency. However, the text is still wrapped inside a <i>font tag</i>, so we'll do exactly as we did above.<br><textarea class="big" style="height: 140px;">font {
    display: none;
}
.content font {
    display: inline;
}</textarea><br>For even greater efficiency, combine <i>table, font</i> into one block of CSS. Of course, adjust the <b>.content</b> identifier to whatever makes sense as the div for your layout that all your page content goes in!
</div></div></div>



<div class="page" id="mi-graphics">
	<div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-graphics">intro to graphics</a>
	</div></div>
	

<div class="heading"><div class="main">
	a beginners introduction to your graphics toolbox</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">

  This guide is exactly what it says - a beginners introduction. It will introduce you to the main options you have when editing a graphic (editing the light, the colours and using textures) and give you some ideas for some simple effects to try. Once you're familiar with these and know a little bit what you're doing, it's time to graduate to the master classes and put your knowledge to work with Jewlz' graphical layout walkthroughs:
  <div class="center">
    <a href="/~zaevora"><img src="http://fc08.deviantart.net/fs70/f/2014/196/9/4/94f4ca5fc86d74e3c00c5b3f7030e10c-d7qskrd.gif" border="0"></a>
    <a href="/~zaevora"><img src="http://imagizer.imageshack.us/a/img538/4585/3c20cf.gif" border="0"></a>
    <a href="/~zaevora"><img src="http://imageshack.com/a/img539/2854/8e80c8.gif" border="0"></a>
    <a href="/~zaevora"><img src="http://i60.tinypic.com/29fru5s.jpg" border="0"></a>
    <a href="/~zaevora"><img src="http://i908.photobucket.com/albums/ac285/jellohcow/bjtuts_zps98af1205.gif" border="0"></a>
  </div>
  </div>
  <div class="blurb"><div class="main">
  <img src="http://i61.tinypic.com/24eq45c.jpg" class="picture-right" style="margin-left: 30px;"><br><b>A recommended set of layers to work with</b><br><br>The layer structure of your graphic will vary according to what effects you use, but this is the basic outline I always use:																									

<ul><li> A copy of the <b class="red">original image</b> on a hidden layer</li>																									
<li> The <b class="red">background</b> visible behind the graphic</li>																									
<li> The <b class="red">clipping group</b> that acts as a mask for all the layers above it</li>																									
<li> The <b class="red">base layer</b> of the graphic itself</li>																									
<li> The <b class="red">graphics effects</b> </li>																									
<li> Any <b class="red">final details and text</b> </li>																									
</ul>																									

Keeping an untouched copy of the <b class="red">original image</b> is vital; I can't tell you how many times I've wanted a new layer to create a new effect and realised that all my layers are partly erased or changed in hue so I've got nothing to take a copy from.<br><br>																									
You don't always need a <b>background</b> and <b>clipping group</b> - buttons or icons where the graphic covers the whole screen are fine without them. For a layout though the clipping group means you don't ever erase part of your graphic, so can change your mind later on about what shape the outline is.
<br style="clear: both;"></div></div>
  
  <div class="heading"><div class="main">using levels to adjust lighting</div></div><div class="main">
    <img src="http://i61.tinypic.com/2wdswh4.jpg" class="picture-right"><br>																									
Lighting is controlled via the level adjuster found (on Photoshop Elements) under <b class="blue">Layers » New adjustment layer » Levels</b>. This brings up a control panel like the one to the right.																									
																									
<ul><li>The <b class="green">channel selector</b> allows you to adjust levels for a single colour (red, green or blue) or all together. Here we are adjusting all colours.</li>																									
<li>The <b class="purple">eye droppers</b> are used to specify a true black, grey and white. These are mainly for removing a colour tint in a photo; we won't be using them here.</li>																									
<li>The <b class="yellow">output levels</b> limit the image's lighting. Lowering the maximum or upping the minimum will reduce the overall contrast in your image.</li>																									
</ul>																									
																									
The tools that are most useful for graphics are the remaining three arrows:																									
																									
<ul><li>The <b class="blue">left hand arrow</b> controls the shadows. Move it right to make dark areas darker.</li>																									
<li>The <b class="sky">middle arrow</b> adjusts overall lighting. Move it left to lighten the image and right to darken.</li>																									
<li>The <b class="red">right hand arrow</b> controls the highlights. Move it left to make light areas lighter.</li>																									
</ul><br style="clear: both;"></div>
<div class="blurb"><div class="main"><br><div class="levels">																									
<b>Increase minimum output</b><br><br><img src="http://i62.tinypic.com/2dgudcm.jpg"></div>																									
																									
<div class="levels">																									
<b>Decrease maximum output</b><br><br><img src="http://i57.tinypic.com/316t44j.jpg"></div>																									
																									
<div class="levels">																									
<b>Move left hand arrow rightwards</b><br><br><img src="http://i57.tinypic.com/1zgf88.jpg"></div>																									
																									
<div class="levels">																									
<b>Move middle arrow leftwards</b><br><br><img src="http://i58.tinypic.com/15mxy6q.jpg"></div>																									
																									
<div class="levels">																									
<b>Move middle arrow rightwards</b><br><br><img src="http://i61.tinypic.com/2348w2.jpg"></div>																									
																									
<div class="levels">																									
<b>Move right hand arrow leftwards</b><br><br><img src="http://i57.tinypic.com/2e66i9u.jpg"></div>																									
																									
<div class="levels">																									
</div>																									
																									

  </div>
</div>

  <div class="heading"><div class="main">using layers to adjust Colour</div></div>
  
  <div class="main">
    It's possible to adjust colours using the level tool above, but I usually use layers - I find it easier to change my mind and change the colour. Using an <b class="sky">overlay layer</b> for colour changes keeps the image crisp and high contrast. For a stronger colour change producing a softer picture, use a <b class="red">colour layer</b>.  																								
																									
<table class="effects"><tr><td class="icons">																									
<img src="http://i58.tinypic.com/k0qa38.jpg"></td>																									
<td>																									
<ol><li>Pick a bright colour from the image</li>																									
<li>Create a new layer and fill with your chosen colour</li>																									
<li>Set this layer to <b class="sky">overlay</b>																									
</li>																									
<li>Reduce opacity if necessary</li>																									
</ol><div class="fact" style="width: 400px; margin-bottom: 0;">Always use colours picked from the image; it helps keep things harmonious.</div>																									
</td>																									
<td class="icons">																									
<img src="http://i61.tinypic.com/sp9jjm.jpg"></td>																									
</tr><tr><td class="icons">																									
<img src="http://i60.tinypic.com/9k9ds3.jpg"></td>																									
<td class="pad">																									
When using a darker colour, lower the saturation slightly. Strongly saturated dark colours can over power an image.																									
</td>																									
<td class="icons">																									
<img src="http://i61.tinypic.com/2ih8ljs.jpg"></td>																									
</tr><tr><td class="icons">																									
<img src="http://i57.tinypic.com/2q0q4x3.jpg"></td>																									
<td class="pad">																									
Using two layers for a bright colour and a darker one will produce a bright, colour tinted image without losing depth of colour in the shadowed areas. Swapping which way round the layers go will change the image slightly; choose whichever you prefer.																									
</td>																									
<td class="icons">																									
<img src="http://i62.tinypic.com/sw8w2u.jpg"></td>																									
</tr><tr class="filler"></tr><tr><td class="icons">																									
<img src="http://i60.tinypic.com/9k6xcl.jpg"></td>																									
<td>																									
<ol><li>Pick a bright colour from the image</li>																									
<li>Create a new layer and fill with your chosen colour</li>																									
<li>Set this layer to <b class="red">colour</b>																									
</li>																									
</ol></td>																									
<td class="icons">																									
<img src="http://i60.tinypic.com/259wdg7.jpg"></td>																									
</tr><tr><td class="icons">																									
<img src="http://i59.tinypic.com/2ir89xh.jpg"></td>																									
<td class="pad">																									
For a colour tint instead of a full colour change, lower the opacity of your colour layer. Beware - using a <b class="red">colour layer</b> for a colour tint can leave the image looking duller than before. Use carefully, and probably combined with some other brightening effects.																									
</td>																									
<td class="icons">																									
<img src="http://i57.tinypic.com/2rp7mvc.jpg"></td>																									
</tr><tr><td class="icons">																									
<img src="http://i59.tinypic.com/2akmp7k.jpg"></td>																									
<td class="pad">																									
When tinting an image with a darker colour using a <b class="red">colour layer</b>, increasing the saturation of the colour avoids the image becoming too dark.																									
</td>																									
<td class="icons">																									
<img src="http://i62.tinypic.com/2gxg3m8.jpg"></td>																									
</tr></table></div>


  <div class="heading"><div class="main">some combined Layer Effects to get you started</div></div>
  <div class="main">
    When I started learning to make graphics, there were one or two effects I knew that I used and abused without mercy. They are far from the only effects you should learn, but once you've got some in your arsenal it's a lot easier to play around with layer styles and find something unique to you that suits the graphic you're creating.  																								
																									
<table class="effects"><tr><td class="icons">																									
<img src="http://i57.tinypic.com/xbgs3t.jpg"></td>																									
<td class="pad">																									
<b>Day to Night</b>																									
<ol><li>Create two new layers above the base and fill with a dark blue colour</li>																									
<li>Set one blue layer to <b class="purple">multiply</b> and lower opacity to 60%</li>																									
<li>Duplicate the base layer, and set to <b class="sky">overlay</b>																									
</li>																									
<li>Set the other blue layer to <b class="red">colour</b> and lower opacity to 30%</li>																									
</ol>																									
																									
The <b class="sky">overlay layer</b> between the two blues helps bring back some of the contrast we lost with the <b class="purple">multiply layer</b>. The final <b class="red">colour layer</b> is what gives the image the blue tint; the <b class="purple">multiply layer</b> provides shading but is too dark to give much blue colour.																									
</td>																									
<td class="icons">																									
<img src="http://i58.tinypic.com/107kzg3.jpg"></td>																									
</tr><tr class="filler"></tr><tr><td class="icons">																									
<img src="http://i61.tinypic.com/30m8xky.jpg"></td>																									
<td class="pad">																									
<b>Soft and rich</b>																									
<ol><li>Duplicate the base layer, and set to <b class="green">soft light</b>																									
</li>																									
<li>Go to <b class="blue">Filter » Blur » Gaussian blur</b> and apply a blur of 2.5px</li>																									
</ol>																									
																									
The <b class="green">soft light</b> brightens the image and makes the colours richer; the addition of the blur gives the image a slightly hazy, dreamy quality.																									
</td>																									
<td class="icons">																									
<img src="http://i59.tinypic.com/nz3h1f.jpg"></td>																									
</tr><tr class="filler"></tr><tr><td class="icons">																									
<img src="http://i58.tinypic.com/qq7asp.jpg"></td>																									
<td class="pad">																									
<b>Spotlight</b>																									
<ol><li>Create a new blank layer and fill in the area you want to be spotlighted. I've chosen the mushroom and largest flower.</li>																									
<li>Duplicate the base layer. Put one copy of the base in a clipping group above the layer you've just drawn.</li>																									
<li>Lower the saturation of the lower base layer by going to <b class="blue">Enhance » Adjust colour » Adjust hue and saturation</b>																									
</li>																									
<li>Increase the saturation of the base layer in the clipping group in the same way</li>																									
<li>Create a new levels layer by going to <b class="blue">Layers » New adjustment layer » Levels</b>. Make sure you select "Group with the previous layer</li>																									
<li>Adjust the levels to brighten the clipping group; my values were 12 - 1.04 - 249</li>																									
</ol></td>																									
<td class="icons">																									
<img src="http://i61.tinypic.com/j7w849.jpg"></td>																									
</tr></table></div>


  <div class="heading"><div class="main">four different ways to apply Textures</div></div>
  <div class="main">
    A texture is an abstract image you place over your graphic. They are hugely variable, and can be just about anything from a photo of rough paper to a light swirl to a collection of abstract shapes and patterns.<br><br></div><div class="blurb"><div class="main"><br><div class="box">																									
<img src="http://fc04.deviantart.net/fs70/f/2013/185/3/2/light_bokeh_texture_32_by_xnienke-d6bxf9o.jpg" style="margin-top: -300px; margin-left: -500px;"></div>																									
<div class="box">																									
<img src="http://fc03.deviantart.net/fs45/f/2009/106/7/0/Texture_02_by_xnienke.jpg"></div>																									
<div class="box">																									
<img src="http://i1116.photobucket.com/albums/k573/nienkju4/p8.jpg" style="margin-top: -400px;"></div>																									
<div class="box">																									
<img src="http://fc03.deviantart.net/fs71/f/2011/001/d/8/firework_40_by_xnienke-d365qta.jpg" style="margin-top: -280px; margin-left: -220px;"></div>																									
All of the textures above are from <a href="/~liahness">Details</a>.<br><br></div></div>																																																		
	<div class="off-blue"><div class="main">																						
There are millions of things you can do with textures; the main thing to do is just play around with different layer styles and effects until you get something you like. For each texture above, I'll run through an example of how they could be used to get you started.																									
</div></div><br><div class="main"><div class="center">																									
<div class="box">																									
<img src="http://fc04.deviantart.net/fs70/f/2013/185/3/2/light_bokeh_texture_32_by_xnienke-d6bxf9o.jpg" style="margin-top: -300px; margin-left: -500px;"></div>																									
</div>																									
<table class="effects"><tr><td class="icons">																									
<img src="http://i59.tinypic.com/4hp8aq.jpg"></td>																									
<td>																									
<ol><li>Paste the texture in a new layer and set this layer to <b class="sky">overlay</b>																									
</li>																									
<li>Go to <b class="blue">Enhance » Adjust colour » Adjust hue and saturation</b> and change the hue of the texture to a greener colour to match the graphic better. My numbers were +62 for hue and +15 for lightness.</li>																									
<li>Above this, create a new levels layer by going to <b class="blue">Layers » New adjustment layer » Levels</b>. Make sure you select "Group with the previous layer</li>																									
<li>Adjust the light levels to make the texture brighter. My numbers were 7 - 2.06 - 255</li>																									
<li>Lower the opacity of the texture to 80%</li>																									
</ol></td>																									
<td class="icons">																									
<img src="http://i61.tinypic.com/aosx0i.jpg"></td>																									
</tr></table><br><br><div class="center">																									
<div class="box">																									
<img src="http://fc03.deviantart.net/fs45/f/2009/106/7/0/Texture_02_by_xnienke.jpg"></div>																									
</div>																									
<table class="effects"><tr><td class="icons">																									
<img src="http://i61.tinypic.com/2v9q9f6.jpg"></td>																									
<td>																									
<ol><li>Paste the texture in a new layer and set this layer to <b class="red">colour</b>																									
</li>																									
<li>Duplicate the base layer above the texture and set to <b class="sky">overlay</b>																									
</li>																									
<li>Lower the opacity of the <b class="sky">overlay layer</b> to 75%</li>																									
</ol></td>																									
<td class="icons">																									
<img src="http://i59.tinypic.com/qzn1j9.jpg"></td>																									
</tr></table><br><br><div class="center">																									
<div class="box">																									
<img src="http://i1116.photobucket.com/albums/k573/nienkju4/p8.jpg" style="margin-top: -400px;"></div>																									
</div>																									
<table class="effects"><tr><td class="icons">																									
<img src="http://i60.tinypic.com/8wfdjb.jpg"></td>																									
<td>																									
<ol><li>Paste the texture in a new layer and set this layer to <b class="green">soft light</b>																									
</li>																									
<li>Duplicate the base layer below the texture and set to <b class="yellow">luminosity</b>																									
</li>																									
<li>Back on the original base layer, go to <b class="blue">Enhance » Adjust colour » Adjust hue and saturation</b>. Make sure that <i>Colourize</i> (on the right hand side) is checked and change the hue to a sepia style. My numbers were 34 for hue and 20 for saturation.</li>																									
</ol></td>																									
<td class="icons">																									
<img src="http://i57.tinypic.com/w9fpf8.jpg"></td>																									
</tr></table><br><br><div class="center">																									
<div class="box">																									
<img src="http://fc03.deviantart.net/fs71/f/2011/001/d/8/firework_40_by_xnienke-d365qta.jpg" style="margin-top: -280px; margin-left: -220px;"></div>																									
</div>																									
<table class="effects"><tr><td class="icons">																									
<img src="http://i62.tinypic.com/125022u.jpg"></td>																									
<td>																									
<ol><li>Paste the texture in a new layer and set this layer to <b class="purple">screen</b>																									
</li>																									
<li>Duplicate the base layer above the texture and set to <b class="red">colour</b>																									
</li>																									
<li>Erase unwanted areas of the texture using a large, soft brush.</li>																									
</ol></td>																									
<td class="icons">																									
<img src="http://i60.tinypic.com/2cpbztw.jpg"></td>																									
</tr></table></div>
</div>

  </div>



<div class="page" id="mi-tiling-float">
  <div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-tiling-float">making a tiling float</a>
	</div></div>
	

<div class="heading"><div class="main">
	turn a wearable garland into a tiling float</div>
</div>
<div class="tutorial" style="margin-bottom: 0px;"><div class="main">
<img src="http://i59.tinypic.com/20t34u9.jpg" class="picture-right">   

The first stage is to get your base image that you want to tile.      																							
The most popular source of base images for graphics are the SWF images from the wearables, which allow you to zoom in  without the details going fuzzy. 

To get the SWF image, follow the steps below and screenshot the area of the image that you need for your graphic:																		
																									
<ol><li>Load a page containing a pet wearing the graphic you want. I use <a href="//www.neopets.com/redirect/fansite.phtml?r=http%3A%2F%2Fwardrobe.jellyneo.net+-invalid_characters-+Fapp+-invalid_characters-+F" class="auto_bumper">Jellyneo's Wardrobe App</a>.</li>																									
<li>Press <b>F12</b> to bring up the developer tools and go to the <b class="red">Resources tab</b>																									
</li>																									
<li>Under the side menu, navigate to <b class="blue">Frames » wardrobe.jellyneo.net/ » XHR</b>																									
</li>																									
<li>Double click on the <b class="green">.swf file</b> to open in a new tab</li>																									
</ol>																									
																									
Getting SWFs is annoyingly hit and miss. The steps above should work in chrome (but not always in chromium), but if you have trouble let me know and I'll try and link the SWF here for you. Instructions for other browsers can be found <a href="/~DreamThorn">here</a>, but I find chrome by far the simplest.<br><br><br style="clear: both;"><br></div><div class="blurb"><div class="main">
    <br>
    Once you have your image, you need to tile it. A tiling background is one that repeats seamlessly, either horizontally, vertically, or in both directions. Some images are easier to tile than others; the background image in the SWF example above now would be quite difficult, so I've switched to using the <a href="//images.neopets.com/cp/items/swf/000/000/133/133808_60a3c2dc14.swf">Colourful Mushroom Foreground</a> instead. I'll be tiling it horizontally to make a float, but the same process applies to tiling vertically or in both directions.<br><br><div class="center"><img src="http://i59.tinypic.com/jh8wlg.jpg"></div>    																							
<br><br></div></div><div class="main"><br>																									
Start by removing the background of your float to leave just the mushrooms. I use the <b class="red">wand tool</b> to do this, but you could also erase by hand. Here, I've set the layer below to be green to check that I've removed all white parts of the image. I've also removed the two taller mushrooms either side, to make the float more uniform in height.<br><br><div class="center"><img src="http://i62.tinypic.com/2z6tf6w.jpg" style="width: 500px;"></div>																									
<br><br>																									
																									
Go to <b class="blue">Filter » Other » Offset</b> and select a <b class="purple">horizontal value</b> that is approximately half the width of your canvas. Set the <b class="yellow">vertical value</b> to 0 and make sure that the <b class="green">wrap around</b> option is selected.<br><br><div class="center"><img src="http://i58.tinypic.com/2mmfksi.jpg"></div>																									
<br><br>																									
																									
This splits the image so that the two edges are now together in the middle, and what was the middle is now at the edges. Because the image was split, we know that these edges will tile without any sign of a join.<br><br><div class="center"><img src="http://i58.tinypic.com/35jkscw.jpg" style="width: 500px;"></div>																									
<br><br>																									
																									
Remove the gap in the middle by selecting half of the image and moving it to slightly overlap the other half, making sure that you only move horizontally and not vertically. Crop the canvas to the width of the image, removing the blank space on one side.<br><br><div class="center"><img src="http://i58.tinypic.com/4ifmsg.jpg"></div>																									
<br><br></div><div class="blurb"><div class="main"><br>																									
That's it! You've created a horizontally tiling float. Your code to use it is:<br><br><div class="center">																									
<textarea class="code" style="height: 140px;">.float {																									
  background: url('http://i58.tinypic.com/4ifmsg.jpg') center bottom repeat-x;																									
  width: 100%;																									
  height: 150px;																									
}</textarea></div>																									
																									
<style>
.float {
	background: url("http://i58.tinypic.com/4ifmsg.jpg") center bottom repeat-x;
	width: 100%;
	height: 150px;
}
</style><br><br><div class="float"></div>																									
<br></div></div><div class="off-blue"><div class="main"><br>																									
																									
The mushrooms were particularly easy to tile because there was empty space either side of the image. To make a float out of an image such as the <a href="//images.neopets.com/cp/items/swf/000/000/187/187975_d99cf0d9d8.swf">Grey Clouds Foreground</a> you need to not only overlap the images but also remove the visible seam. Here, I use the <b>smudge tool</b> to blend the clouds together; you may need to erase or even redraw parts of your float until the two edges match up.<br><br><div class="center"><img src="http://i57.tinypic.com/1428thw.jpg"></div>																									
<style>
.float-2 {
	background: url("http://i62.tinypic.com/69fhgy.jpg") center top repeat-x;
	width: 100%;
	height: 100px;
}
</style><br><br><div class="float-2"></div>	
    
  </div></div></div>
</div>

<div class="page" id="pp-filtered-words">
  <div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#petpage">petpages</a> »
		<a href="#pp-filtered-words">filtered words</a>
	</div></div>
	

<div class="heading"><div class="main">
	bypassing the filters for innocent words</div>
</div>
<div class="tutorial"><div class="main">
Some words should be filtered out, I acknowledge that. However, sometimes my skil<i></i>led character wants to look out the win<i></i>dow at the cra<i></i>ckle of lightning in the sky, and skils, win.dows and cra ckles are not at all what I'm after. Luckily the solution is very simple:<br><br></div><div class="blurb"><div class="main">
  <br>
  Add an empty tag in the middle of the word to break it up invisibly. For example: <b>ski«i»«/i»ll</b> or <b>gra«b»«/b»pe</b>.<br><br>
  Be aware of any styling you've applied to your bold or italic tags, as that may interfere with your word - try a different tag style if this is the case.<br><br>
  And that's it! Easy.<br><br></div></div>
</div></div>



<div class="page" id="mi-invisible-scroll">
  <div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#title">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-invisible-scroll">invisible scroll</a>
	</div></div>
	

<div class="heading"><div class="main">
	Making a scrolling div with an invisible scroll bar</div>
</div>
<div class="tutorial" style="margin-bottom: 0;"><div class="main">
  Invisible scroll bars are gaining popularity; they're a neater, prettier alternative to the traditional div with a scroll bar attached. To use them, either click into the div and use your arrrow keys, or hover over it and scroll with your touchpad or central mouse wheel. Do be aware that for some users this won't be intuitive - if it's not obvious that your div scrolls, it may be wise to add a quick note to it.<br><br>
  The structure for these uses <b>three layered divs</b>:
  <ol><li>A <b>wrapper div</b> that is the size of your final scrolling area, with the overflow set to <i>hidden</i></li>
    <li>The <b>scrolling div</b>, 30px <b>wider</b> than the wrapper - the scroll bar will be off the edge of the wrapper and thus hidden</li>
    <li>The <b>content div</b> that's the same size as the wrapper, to make sure your content doesn't go outside the wrapper and be hidden like the scroll bar is</li>
  </ol>
  Putting this together in code:
  <textarea class="big" style="height: 280px;">.wrapper {
    width: 400px;
    height: 100px;
    overflow: hidden;
}
.scrolling {
    width: 430px;
    height: 100px;
    overflow: auto;
}
.content {
    width: 400px;
}
  </textarea><textarea class="big" style="height: 160px;"><div class="wrapper">
    <div class="scrolling">
        <div class="content">
            Write your content here!
        </div>
    </div>
</div></textarea>
Notice that we haven't specified a height for the <b>content div</b> - this will match the height of the text, and any height above <i>100px</i> will be what forces the <b>scrolling div</b> to scroll.<br><br></div><div class="blurb"><div class="main">
  <br><div style="width: 400px; margin: 0 auto; height: 100px; overflow: hidden;">
    <div style="width: 430px; height: 100px; overflow: auto;">
      <div style="width: 400px;">
        I wasn't sure what to put in this scrolling div as an example, so have a poem for your reading delight.<br><br>
        Roses are red, violets are blue,<br>
        some poems rhyme,<br>
        others don't.
      </div>
    </div>
  </div>
</div></div>
</div></div>


<div class="page" id="mi-recolour-background">
  <div class="subtitle"><div class="main">
		Scarab <span style="color: #e67e22;">tutorials</span>
	</div></div>
	<div class="breadcrumbs"><div class="main">
		<a href="#home">home</a> »
		<a href="#misc">miscellaneous</a> »
		<a href="#mi-recolour-background">Recolouring backgrounds</a>
	</div></div>
	

<div class="heading"><div class="main">
	Two methods of quickly recolouring a background</div>
</div>
<div class="tutorial" style="margin-bottom: 0;"><div class="main">
  You find the perfect background pattern, but the colour is awful. Like. Yuck. What do?<br><br></div><div class="blurb"><div class="main">
    <br><b>The very quick recolour</b><br><br>
    Open your background in your image-editing software of choice (so long as it has layers and layer styles, we're golden). Create a new layer above your background and fill with your new colour. Mess about with layer styles until you find an option that works well - consider <b>overlay</b> or <b>colour</b> as handy starting points.<br><br>
    This option tints the whole background with your new colour, and works best for patterns which start with a single colour or a set of very similar colours.
    <div class="center">
      <div class="rec-bg-bg" style="background: url('http://i.imgur.com/fahXGfT.jpg');"></div>
      <div class="rec-bg-bg" style="background: url('http://i.imgur.com/WJHNMVR.png');"></div>
    </div>
  </div></div>
  <div class="off-blue"><div class="main">
    <br><b>The other very quick recolour for multicoloured backgrounds</b><br><br>If you have a patterned background which uses multiple colours, you can find it hard to preserve the contrast if you try and use a single colour to tint it as above. Instead, we're going to change the <b>hues</b> of your picture by shifting the whole lot at once.<br><br>
    Open your background image in your image editing software of choice, so long as it lets you mess with hue and saturation. Find where these options are - <b>adjustment</b> is a good menu to try looking under - and bring up the slider menu. The norm is to have three options; one for hue, one for saturation, and one for lightness. I'd recommend adjusting the hue, then perfecting with the saturation, and probably not using the lightness.<br><br>
    By using the slider you're shifting <b>all colours</b> around the colour wheel - so if your purples become yellows, your reds will go green and your blues will be orange. A completely different set of colours but keeping exactly the same contrast as you had before.
    <div class="center">
      <div class="rec-bg-bg" style="background: url('http://i.imgur.com/JpeDsMc.png');"></div>
      <div class="rec-bg-bg" style="background: url('http://i.imgur.com/AMOSOuy.png');"></div>
    </div>
    
  </div></div>
</div></div><BR><BR><BR>